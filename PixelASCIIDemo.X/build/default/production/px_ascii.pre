
# 1 "px_ascii.c"

# 12 "/Applications/microchip/xc8/v1.45/include/stdbool.h"
typedef unsigned char bool;

# 13 "/Applications/microchip/xc8/v1.45/include/stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 104 "px_ascii.h"
typedef struct {
uint32_t part[2];
} px_char;

px_char new_px_char(uint32_t a, uint32_t b);
inline px_char px_map(char c);

void draw_px_char(int x, int y, px_char p);
void print_px_char(int x, int y, char c);
void print_px_string(int x, int y, char *s);

# 14 "px_ascii.c"
px_char new_px_char(uint32_t a, uint32_t b) {
px_char p;
p.part[1] = a;
p.part[0] = b;
return p;
}

inline px_char px_map(char c) {

switch(c) {
case 32: return new_px_char(0b00000000000000000000000000000000,0b00000000000000000000000000000000);
case 33: return new_px_char(0b00000000000000001000000000100001,0b00001000010000100001000000000000);
case 34: return new_px_char(0b00000000000000000000000000000000,0b00000000101001010010100000000000);
case 35: return new_px_char(0b00000000000000010100101011111010,0b10111110101001010000000000000000);
case 36: return new_px_char(0b00000000000100011111010010100011,0b10001010010111110001000000000000);
case 37: return new_px_char(0b00000000001001101010101000010001,0b00010000101010101100100000000000);
case 38: return new_px_char(0b00000000010110010011100100101000,0b10001010010100010000000000000000);
case 39: return new_px_char(0b00000000000000000000000000000000,0b00000000010000100001000000000000);
case 40: return new_px_char(0b00000100000100001000001000010000,0b10000100001000100001000100000000);
case 41: return new_px_char(0b00000001000100001000100001000010,0b00010000100000100001000001000000);
case 42: return new_px_char(0b00000000000000000000000000000001,0b00101010111010101001000000000000);
case 43: return new_px_char(0b00000000000000000000010000100111,0b11001000010000000000000000000000);
case 44: return new_px_char(0b00000001000100011000000000000000,0b00000000000000000000000000000000);
case 45: return new_px_char(0b00000000000000000000000000000111,0b11000000000000000000000000000000);
case 46: return new_px_char(0b00000010001110001000000000000000,0b00000000000000000000000000000000);
case 47: return new_px_char(0b00000000000001000010001000010001,0b00010000100010000100000000000000);
case 48: return new_px_char(0b00000000000000001000101010001100,0b01100011000110001010100010000000);
case 49: return new_px_char(0b00000000000000111110010000100001,0b00001000010000101001100010000000);
case 50: return new_px_char(0b00000000000000111110000100010001,0b00010001000010001100010111000000);
case 51: return new_px_char(0b00000000000000011101000110000100,0b00011100010001000100001111100000);
case 52: return new_px_char(0b00000000000000010000100011111010,0b01010100101001100010000100000000);
case 53: return new_px_char(0b00000000000000011101000110000100,0b00100110110100001000011111100000);
case 54: return new_px_char(0b00000000000000011101000110001100,0b01011110000100001100010111000000);
case 55: return new_px_char(0b00000000000000000100001000010001,0b00001000100001000100001111100000);
case 56: return new_px_char(0b00000000000000011101000110001100,0b01011101000110001100010111000000);
case 57: return new_px_char(0b00000000000000011101000110000100,0b00111101000110001100010111000000);
case 58: return new_px_char(0b00000000000000001000111000100000,0b00000000010001110001000000000000);
case 59: return new_px_char(0b00000001000100011000000000000001,0b00011100010000000000000000000000);
case 60: return new_px_char(0b00000000010000010000010000010000,0b01000100010001000100000000000000);
case 61: return new_px_char(0b00000000000000000001111100000000,0b00111110000000000000000000000000);
case 62: return new_px_char(0b00000000000001000100010001000100,0b00010000010000010000010000000000);
case 63: return new_px_char(0b00000000000100000000010000100010,0b00100001000110001011100000000000);
case 64: return new_px_char(0b00000000011110000010110110101101,0b01110011000110001011100000000000);
case 65: return new_px_char(0b00000000000000100011000110001111,0b11100011000110001010100010000000);
case 66: return new_px_char(0b00000000000000011111001010010100,0b10011101001010010100100111100000);
case 67: return new_px_char(0b00000000000000011101000100001000,0b01000010000100001100010111000000);
case 68: return new_px_char(0b00000000000000011111001010010100,0b10100101001010010100100111100000);
case 69: return new_px_char(0b00000000000000111110000100001000,0b01011110000100001000011111100000);
case 70: return new_px_char(0b00000000000000000010000100001000,0b01011110000100001000011111100000);
case 71: return new_px_char(0b00000000000000011101000110001110,0b01000010000100001100010111000000);
case 72: return new_px_char(0b00000000000000100011000110001100,0b01111111000110001100011000100000);
case 73: return new_px_char(0b00000000000000011100010000100001,0b00001000010000100001000111000000);
case 74: return new_px_char(0b00000000000000001100100101000010,0b00010000100001000010001110000000);
case 75: return new_px_char(0b00000000000000100011000101001001,0b01000110010101001100011000100000);
case 76: return new_px_char(0b00000000000000111110000100001000,0b01000010000100001000010000100000);
case 77: return new_px_char(0b00000000000000100011000110001100,0b01101011010111011100011000100000);
case 78: return new_px_char(0b00000000000000100011000111001110,0b01101011010110011100111000100000);
case 79: return new_px_char(0b00000000000000011101000110001100,0b01100011000110001100010111000000);
case 80: return new_px_char(0b00000000000000000010000100001000,0b01011111000110001100010111100000);
case 81: return new_px_char(0b00000000010000011101010110001100,0b01100011000110001100010111000000);
case 82: return new_px_char(0b00000000000000100011000101001001,0b01011111000110001100010111100000);
case 83: return new_px_char(0b00000000000000011101000110000100,0b00011100000100001100010111000000);
case 84: return new_px_char(0b00000000000000001000010000100001,0b00001000010000100001001111100000);
case 85: return new_px_char(0b00000000000000011101000110001100,0b01100011000110001100011000100000);
case 86: return new_px_char(0b00000000000000001000010001010010,0b10100011000110001100011000100000);
case 87: return new_px_char(0b00000000000000010101010110101101,0b01101011000110001100011000100000);
case 88: return new_px_char(0b00000000000000100011000101010010,0b10001000101001010100011000100000);
case 89: return new_px_char(0b00000000000000001000010000100001,0b00001000101001010100011000100000);
case 90: return new_px_char(0b00000000000000111110000100010000,0b10001000100001000100001111100000);
case 91: return new_px_char(0b00000111000010000100001000010000,0b10000100001000010000100111000000);
case 92: return new_px_char(0b00000000010000100000100001000001,0b00000100001000001000010000000000);
case 93: return new_px_char(0b00000111001000010000100001000010,0b00010000100001000010000111000000);
case 94: return new_px_char(0b00000000000000000000000000000000,0b00000001000101010001000000000000);
case 95: return new_px_char(0b00001111100000000000000000000000,0b00000000000000000000000000000000);
case 96: return new_px_char(0b00000000000000000000000000000000,0b00000000000001000001000011000000);
case 97: return new_px_char(0b00000000000000101101100110001111,0b10100000111000000000000000000000);
case 98: return new_px_char(0b00000000000000011111000110001100,0b01100010111100001000010000100000);
case 99: return new_px_char(0b00000000000000011101000100001000,0b01100010111000000000000000000000);
case 100: return new_px_char(0b00000000000000111101000110001100,0b01100011111010000100001000000000);
case 101: return new_px_char(0b00000000000000011101000100001111,0b11100010111000000000000000000000);
case 102: return new_px_char(0b00000000000000000100001000010000,0b10011110001000010100100110000000);
case 103: return new_px_char(0b00000111010001100001111010001100,0b01100010111000000000000000000000);
case 104: return new_px_char(0b00000000000000100011000110001100,0b01100110110100001000010000100000);
case 105: return new_px_char(0b00000000000000011100010000100001,0b00001000011000000001000000000000);
case 106: return new_px_char(0b00000011001001010010100001000010,0b00010000100001100000000100000000);
case 107: return new_px_char(0b00000000000000100010100100101000,0b11001010100100001000010000100000);
case 108: return new_px_char(0b00000000000000011100010000100001,0b00001000010000100001000011000000);
case 109: return new_px_char(0b00000000000000100011010110101101,0b01101010101100000000000000000000);
case 110: return new_px_char(0b00000000000000100011000110001100,0b01100110110100000000000000000000);
case 111: return new_px_char(0b00000000000000011101000110001100,0b01100010111000000000000000000000);
case 112: return new_px_char(0b00000000100001000010111110000100,0b00100000111100000000000000000000);
case 113: return new_px_char(0b00001000010000100001111010001100,0b01100011111000000000000000000000);
case 114: return new_px_char(0b00000000000000000010000100001000,0b01100110110100000000000000000000);
case 115: return new_px_char(0b00000000000000011101000101000001,0b10100010111000000000000000000000);
case 116: return new_px_char(0b00000000000000011001001000010000,0b10000100111100010000100000000000);
case 117: return new_px_char(0b00000000000000101101100110001100,0b01100011000100000000000000000000);
case 118: return new_px_char(0b00000000000000001000101001010100,0b01100011000100000000000000000000);
case 119: return new_px_char(0b00000000000000010101010110101101,0b01100011000100000000000000000000);
case 120: return new_px_char(0b00000000000000100010101000100001,0b00010101000100000000000000000000);
case 121: return new_px_char(0b00000111010001100001011011001100,0b01100011000100000000000000000000);
case 122: return new_px_char(0b00000000000000111110000100010001,0b00010001111100000000000000000000);
case 123: return new_px_char(0b00001100000100001000010000100000,0b11001000010000100001001100000000);
case 124: return new_px_char(0b00000000000100001000010000100001,0b00001000010000100001000000000000);
case 125: return new_px_char(0b00000001100100001000010000100110,0b00001000010000100001000001100000);
case 126: return new_px_char(0b00000000000000000000000000000000,0b00000000100110101100100000000000);
default: return new_px_char(0b00000000000000000000000000000000,0b00000000000000000000000000000000);
}

}

void print_px_char(int x, int y, char c) {
draw_px_char(x, y, px_map(c));
}

void print_px_string(int x, int y, char *s) {
int idx = 0;
while(s[idx] != '\0') {
print_px_char(x+idx*(5+1), y, s[idx]);

idx++;
}
}

