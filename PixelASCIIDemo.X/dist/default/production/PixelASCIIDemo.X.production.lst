

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 23 17:27:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  001000                     __psmallconst:
    67                           	opt stack 0
    68  001000  00                 	db	0
    69  001001                     _VIOLET:
    70                           	opt stack 0
    71  001001  00D3               	dw	211
    72  001003  0094               	dw	148
    73  001005                     __end_of_VIOLET:
    74                           	opt stack 0
    75  001005                     _INDIGO:
    76                           	opt stack 0
    77  001005  0082               	dw	130
    78  001007  004B               	dw	75
    79  001009                     __end_of_INDIGO:
    80                           	opt stack 0
    81  001009                     _BLUE:
    82                           	opt stack 0
    83  001009  00FF               	dw	255
    84  00100B  0000               	dw	0
    85  00100D                     __end_of_BLUE:
    86                           	opt stack 0
    87  00100D                     _GREEN:
    88                           	opt stack 0
    89  00100D  FF00               	dw	65280
    90  00100F  0000               	dw	0
    91  001011                     __end_of_GREEN:
    92                           	opt stack 0
    93  001011                     _YELLOW:
    94                           	opt stack 0
    95  001011  FF00               	dw	65280
    96  001013  00FF               	dw	255
    97  001015                     __end_of_YELLOW:
    98                           	opt stack 0
    99  001015                     _ORANGE:
   100                           	opt stack 0
   101  001015  8C00               	dw	35840
   102  001017  00FF               	dw	255
   103  001019                     __end_of_ORANGE:
   104                           	opt stack 0
   105  001019                     _RED:
   106                           	opt stack 0
   107  001019  0000               	dw	0
   108  00101B  00FF               	dw	255
   109  00101D                     __end_of_RED:
   110                           	opt stack 0
   111  00101D                     _WHITE:
   112                           	opt stack 0
   113  00101D  FFFF               	dw	65535
   114  00101F  00FF               	dw	255
   115  001021                     __end_of_WHITE:
   116                           	opt stack 0
   117  001021                     _GREY:
   118                           	opt stack 0
   119  001021  8080               	dw	32896
   120  001023  0080               	dw	128
   121  001025                     __end_of_GREY:
   122                           	opt stack 0
   123  001025                     _BLACK:
   124                           	opt stack 0
   125  001025  0000               	dw	0
   126  001027  0000               	dw	0
   127  001029                     __end_of_BLACK:
   128                           	opt stack 0
   129  001029  C7                 	db	199
   130  00102A                     __end_ofGLCD_PIC@INST_VMOFCTR2:
   131                           	opt stack 0
   132  00102A                     GLCD_PIC@INST_VMCTR1:
   133                           	opt stack 0
   134  00102A  C5                 	db	197
   135  00102B                     __end_ofGLCD_PIC@INST_VMCTR1:
   136                           	opt stack 0
   137  00102B                     GLCD_PIC@INST_PWCTR5:
   138                           	opt stack 0
   139  00102B  C4                 	db	196
   140  00102C                     __end_ofGLCD_PIC@INST_PWCTR5:
   141                           	opt stack 0
   142  00102C                     GLCD_PIC@INST_PWCTR4:
   143                           	opt stack 0
   144  00102C  C3                 	db	195
   145  00102D                     __end_ofGLCD_PIC@INST_PWCTR4:
   146                           	opt stack 0
   147  00102D                     GLCD_PIC@INST_PWCTR3:
   148                           	opt stack 0
   149  00102D  C2                 	db	194
   150  00102E                     __end_ofGLCD_PIC@INST_PWCTR3:
   151                           	opt stack 0
   152  00102E                     GLCD_PIC@INST_PWCTR2:
   153                           	opt stack 0
   154  00102E  C1                 	db	193
   155  00102F                     __end_ofGLCD_PIC@INST_PWCTR2:
   156                           	opt stack 0
   157  00102F                     GLCD_PIC@INST_PWCTR1:
   158                           	opt stack 0
   159  00102F  C0                 	db	192
   160  001030                     __end_ofGLCD_PIC@INST_PWCTR1:
   161                           	opt stack 0
   162  001030                     GLCD_PIC@INST_INVCTR:
   163                           	opt stack 0
   164  001030  B4                 	db	180
   165  001031                     __end_ofGLCD_PIC@INST_INVCTR:
   166                           	opt stack 0
   167  001031                     GLCD_PIC@INST_FRMCTR3:
   168                           	opt stack 0
   169  001031  B3                 	db	179
   170  001032                     __end_ofGLCD_PIC@INST_FRMCTR3:
   171                           	opt stack 0
   172  001032                     GLCD_PIC@INST_FRMCTR2:
   173                           	opt stack 0
   174  001032  B2                 	db	178
   175  001033                     __end_ofGLCD_PIC@INST_FRMCTR2:
   176                           	opt stack 0
   177  001033                     GLCD_PIC@INST_FRMCTR1:
   178                           	opt stack 0
   179  001033  B1                 	db	177
   180  001034                     __end_ofGLCD_PIC@INST_FRMCTR1:
   181                           	opt stack 0
   182  001034                     GLCD_PIC@INST_COLMOD:
   183                           	opt stack 0
   184  001034  3A                 	db	58
   185  001035                     __end_ofGLCD_PIC@INST_COLMOD:
   186                           	opt stack 0
   187  001035  39                 	db	57
   188  001036                     __end_ofGLCD_PIC@INST_IDMON:
   189                           	opt stack 0
   190  001036                     GLCD_PIC@INST_IDMOFF:
   191                           	opt stack 0
   192  001036  38                 	db	56
   193  001037                     __end_ofGLCD_PIC@INST_IDMOFF:
   194                           	opt stack 0
   195  001037                     GLCD_PIC@INST_MADCTL:
   196                           	opt stack 0
   197  001037  36                 	db	54
   198  001038                     __end_ofGLCD_PIC@INST_MADCTL:
   199                           	opt stack 0
   200  001038  35                 	db	53
   201  001039                     __end_ofGLCD_PIC@INST_TEON:
   202                           	opt stack 0
   203  001039  34                 	db	52
   204  00103A                     __end_ofGLCD_PIC@INST_TEOFF:
   205                           	opt stack 0
   206  00103A  30                 	db	48
   207  00103B                     __end_ofGLCD_PIC@INST_PTLAR:
   208                           	opt stack 0
   209  00103B                     GLCD_PIC@INST_RAMWR:
   210                           	opt stack 0
   211  00103B  2C                 	db	44
   212  00103C                     __end_ofGLCD_PIC@INST_RAMWR:
   213                           	opt stack 0
   214  00103C                     GLCD_PIC@INST_RASET:
   215                           	opt stack 0
   216  00103C  2B                 	db	43
   217  00103D                     __end_ofGLCD_PIC@INST_RASET:
   218                           	opt stack 0
   219  00103D                     GLCD_PIC@INST_CASET:
   220                           	opt stack 0
   221  00103D  2A                 	db	42
   222  00103E                     __end_ofGLCD_PIC@INST_CASET:
   223                           	opt stack 0
   224  00103E                     GLCD_PIC@INST_DISPON:
   225                           	opt stack 0
   226  00103E  29                 	db	41
   227  00103F                     __end_ofGLCD_PIC@INST_DISPON:
   228                           	opt stack 0
   229  00103F  28                 	db	40
   230  001040                     __end_ofGLCD_PIC@INST_DISPOFF:
   231                           	opt stack 0
   232  001040                     GLCD_PIC@INST_GAMSET:
   233                           	opt stack 0
   234  001040  26                 	db	38
   235  001041                     __end_ofGLCD_PIC@INST_GAMSET:
   236                           	opt stack 0
   237  001041  21                 	db	33
   238  001042                     __end_ofGLCD_PIC@INST_INVON:
   239                           	opt stack 0
   240  001042                     GLCD_PIC@INST_INVOFF:
   241                           	opt stack 0
   242  001042  20                 	db	32
   243  001043                     __end_ofGLCD_PIC@INST_INVOFF:
   244                           	opt stack 0
   245  001043                     GLCD_PIC@INST_NORON:
   246                           	opt stack 0
   247  001043  13                 	db	19
   248  001044                     __end_ofGLCD_PIC@INST_NORON:
   249                           	opt stack 0
   250  001044  12                 	db	18
   251  001045                     __end_ofGLCD_PIC@INST_PTLON:
   252                           	opt stack 0
   253  001045                     GLCD_PIC@INST_SLPOUT:
   254                           	opt stack 0
   255  001045  11                 	db	17
   256  001046                     __end_ofGLCD_PIC@INST_SLPOUT:
   257                           	opt stack 0
   258  001046  10                 	db	16
   259  001047                     __end_ofGLCD_PIC@INST_SLPIN:
   260                           	opt stack 0
   261  001047                     GLCD_PIC@INST_SWRESET:
   262                           	opt stack 0
   263  001047  01                 	db	1
   264  001048                     __end_ofGLCD_PIC@INST_SWRESET:
   265                           	opt stack 0
   266  001048  00                 	db	0
   267  001049                     __end_ofGLCD_PIC@INST_NOP:
   268                           	opt stack 0
   269  001049  C7                 	db	199
   270  00104A                     __end_of_INST_VMOFCTR2:
   271                           	opt stack 0
   272  00104A  C5                 	db	197
   273  00104B                     __end_of_INST_VMCTR1:
   274                           	opt stack 0
   275  00104B  C4                 	db	196
   276  00104C                     __end_of_INST_PWCTR5:
   277                           	opt stack 0
   278  00104C  C3                 	db	195
   279  00104D                     __end_of_INST_PWCTR4:
   280                           	opt stack 0
   281  00104D  C2                 	db	194
   282  00104E                     __end_of_INST_PWCTR3:
   283                           	opt stack 0
   284  00104E  C1                 	db	193
   285  00104F                     __end_of_INST_PWCTR2:
   286                           	opt stack 0
   287  00104F  C0                 	db	192
   288  001050                     __end_of_INST_PWCTR1:
   289                           	opt stack 0
   290  001050  B4                 	db	180
   291  001051                     __end_of_INST_INVCTR:
   292                           	opt stack 0
   293  001051  B3                 	db	179
   294  001052                     __end_of_INST_FRMCTR3:
   295                           	opt stack 0
   296  001052  B2                 	db	178
   297  001053                     __end_of_INST_FRMCTR2:
   298                           	opt stack 0
   299  001053  B1                 	db	177
   300  001054                     __end_of_INST_FRMCTR1:
   301                           	opt stack 0
   302  001054  3A                 	db	58
   303  001055                     __end_of_INST_COLMOD:
   304                           	opt stack 0
   305  001055  39                 	db	57
   306  001056                     __end_of_INST_IDMON:
   307                           	opt stack 0
   308  001056  38                 	db	56
   309  001057                     __end_of_INST_IDMOFF:
   310                           	opt stack 0
   311  001057  36                 	db	54
   312  001058                     __end_of_INST_MADCTL:
   313                           	opt stack 0
   314  001058  35                 	db	53
   315  001059                     __end_of_INST_TEON:
   316                           	opt stack 0
   317  001059  34                 	db	52
   318  00105A                     __end_of_INST_TEOFF:
   319                           	opt stack 0
   320  00105A  30                 	db	48
   321  00105B                     __end_of_INST_PTLAR:
   322                           	opt stack 0
   323  00105B  2C                 	db	44
   324  00105C                     __end_of_INST_RAMWR:
   325                           	opt stack 0
   326  00105C  2B                 	db	43
   327  00105D                     __end_of_INST_RASET:
   328                           	opt stack 0
   329  00105D  2A                 	db	42
   330  00105E                     __end_of_INST_CASET:
   331                           	opt stack 0
   332  00105E  29                 	db	41
   333  00105F                     __end_of_INST_DISPON:
   334                           	opt stack 0
   335  00105F  28                 	db	40
   336  001060                     __end_of_INST_DISPOFF:
   337                           	opt stack 0
   338  001060  26                 	db	38
   339  001061                     __end_of_INST_GAMSET:
   340                           	opt stack 0
   341  001061  21                 	db	33
   342  001062                     __end_of_INST_INVON:
   343                           	opt stack 0
   344  001062  20                 	db	32
   345  001063                     __end_of_INST_INVOFF:
   346                           	opt stack 0
   347  001063  13                 	db	19
   348  001064                     __end_of_INST_NORON:
   349                           	opt stack 0
   350  001064  12                 	db	18
   351  001065                     __end_of_INST_PTLON:
   352                           	opt stack 0
   353  001065  11                 	db	17
   354  001066                     __end_of_INST_SLPOUT:
   355                           	opt stack 0
   356  001066  10                 	db	16
   357  001067                     __end_of_INST_SLPIN:
   358                           	opt stack 0
   359  001067  01                 	db	1
   360  001068                     __end_of_INST_SWRESET:
   361                           	opt stack 0
   362  001068  00                 	db	0
   363  001069                     __end_of_INST_NOP:
   364                           	opt stack 0
   365  001069                     _GLCD_SIZE_VERT:
   366                           	opt stack 0
   367  001069  80                 	db	128
   368  00106A                     __end_of_GLCD_SIZE_VERT:
   369                           	opt stack 0
   370  00106A                     _GLCD_SIZE_HORZ:
   371                           	opt stack 0
   372  00106A  80                 	db	128
   373  00106B                     __end_of_GLCD_SIZE_HORZ:
   374                           	opt stack 0
   375  00106B                     _GLCD_ADDRESSABLE_SIZE_VERT:
   376                           	opt stack 0
   377  00106B  A0                 	db	160
   378  00106C                     __end_of_GLCD_ADDRESSABLE_SIZE_VERT:
   379                           	opt stack 0
   380  00106C                     _GLCD_ADDRESSABLE_SIZE_HORZ:
   381                           	opt stack 0
   382  00106C  80                 	db	128
   383  00106D                     __end_of_GLCD_ADDRESSABLE_SIZE_HORZ:
   384                           	opt stack 0
   385  0000                     _TRISDbits	set	3989
   386  0000                     _LATDbits	set	3980
   387  0000                     _TRISCbits	set	3988
   388  0000                     _SSPCON1	set	4038
   389  0000                     _SSPSTAT	set	4039
   390  0000                     _SSPCON1bits	set	4038
   391  0000                     _SSPSTATbits	set	4039
   392  0000                     _SSPBUF	set	4041
   393  0000                     _ADCON1	set	4033
   394  0000                     _ADCON0	set	4034
   395  0000                     _TRISE	set	3990
   396  0000                     _TRISD	set	3989
   397  0000                     _TRISC	set	3988
   398  0000                     _TRISB	set	3987
   399  0000                     _TRISA	set	3986
   400  0000                     _LATE	set	3981
   401  0000                     _LATD	set	3980
   402  0000                     _LATC	set	3979
   403  0000                     _LATB	set	3978
   404  0000                     _LATA	set	3977
   405  0000                     _SSPIF	set	31987
   406  00106D                     STR_1:
   407  00106D  20                 	db	32
   408  00106E  20                 	db	32
   409  00106F  20                 	db	32
   410  001070  20                 	db	32
   411  001071  20                 	db	32
   412  001072  20                 	db	32
   413  001073  20                 	db	32
   414  001074  20                 	db	32
   415  001075  20                 	db	32
   416  001076  4D                 	db	77	;'M'
   417  001077  41                 	db	65	;'A'
   418  001078  4B                 	db	75	;'K'
   419  001079  45                 	db	69	;'E'
   420  00107A  20                 	db	32
   421  00107B  20                 	db	32
   422  00107C  20                 	db	32
   423  00107D  20                 	db	32
   424  00107E  20                 	db	32
   425  00107F  20                 	db	32
   426  001080  20                 	db	32
   427  001081  20                 	db	32
   428  001082  00                 	db	0
   429  001083                     STR_4:
   430  001083  20                 	db	32
   431  001084  20                 	db	32
   432  001085  20                 	db	32
   433  001086  20                 	db	32
   434  001087  20                 	db	32
   435  001088  20                 	db	32
   436  001089  20                 	db	32
   437  00108A  20                 	db	32
   438  00108B  41                 	db	65	;'A'
   439  00108C  47                 	db	71	;'G'
   440  00108D  41                 	db	65	;'A'
   441  00108E  49                 	db	73	;'I'
   442  00108F  4E                 	db	78	;'N'
   443  001090  20                 	db	32
   444  001091  20                 	db	32
   445  001092  20                 	db	32
   446  001093  20                 	db	32
   447  001094  20                 	db	32
   448  001095  20                 	db	32
   449  001096  20                 	db	32
   450  001097  20                 	db	32
   451  001098  00                 	db	0
   452  001099                     STR_3:
   453  001099  20                 	db	32
   454  00109A  20                 	db	32
   455  00109B  20                 	db	32
   456  00109C  20                 	db	32
   457  00109D  20                 	db	32
   458  00109E  20                 	db	32
   459  00109F  20                 	db	32
   460  0010A0  20                 	db	32
   461  0010A1  47                 	db	71	;'G'
   462  0010A2  52                 	db	82	;'R'
   463  0010A3  45                 	db	69	;'E'
   464  0010A4  41                 	db	65	;'A'
   465  0010A5  54                 	db	84	;'T'
   466  0010A6  20                 	db	32
   467  0010A7  20                 	db	32
   468  0010A8  20                 	db	32
   469  0010A9  20                 	db	32
   470  0010AA  20                 	db	32
   471  0010AB  20                 	db	32
   472  0010AC  20                 	db	32
   473  0010AD  20                 	db	32
   474  0010AE  00                 	db	0
   475  0010AF                     STR_2:
   476  0010AF  20                 	db	32
   477  0010B0  20                 	db	32
   478  0010B1  20                 	db	32
   479  0010B2  20                 	db	32
   480  0010B3  20                 	db	32
   481  0010B4  20                 	db	32
   482  0010B5  20                 	db	32
   483  0010B6  41                 	db	65	;'A'
   484  0010B7  4D                 	db	77	;'M'
   485  0010B8  45                 	db	69	;'E'
   486  0010B9  52                 	db	82	;'R'
   487  0010BA  49                 	db	73	;'I'
   488  0010BB  43                 	db	67	;'C'
   489  0010BC  41                 	db	65	;'A'
   490  0010BD  20                 	db	32
   491  0010BE  20                 	db	32
   492  0010BF  20                 	db	32
   493  0010C0  20                 	db	32
   494  0010C1  20                 	db	32
   495  0010C2  20                 	db	32
   496  0010C3  20                 	db	32
   497  0010C4  00                 	db	0
   498  0010C5                     STR_5:
   499  0010C5  20                 	db	32
   500  0010C6  20                 	db	32
   501  0010C7  20                 	db	32
   502  0010C8  20                 	db	32
   503  0010C9  20                 	db	32
   504  0010CA  20                 	db	32
   505  0010CB  54                 	db	84	;'T'
   506  0010CC  72                 	db	114	;'r'
   507  0010CD  75                 	db	117	;'u'
   508  0010CE  6D                 	db	109	;'m'
   509  0010CF  70                 	db	112	;'p'
   510  0010D0  20                 	db	32
   511  0010D1  32                 	db	50	;'2'
   512  0010D2  30                 	db	48	;'0'
   513  0010D3  32                 	db	50	;'2'
   514  0010D4  30                 	db	48	;'0'
   515  0010D5  20                 	db	32
   516  0010D6  20                 	db	32
   517  0010D7  20                 	db	32
   518  0010D8  20                 	db	32
   519  0010D9  20                 	db	32
   520  0010DA  00                 	db	0
   521                           
   522                           ; #config settings
   523  0010DB  00                 	db	0	; dummy byte at the end
   524  0000                     
   525                           	psect	cinit
   526  00343C                     __pcinit:
   527                           	opt stack 0
   528  00343C                     start_initialization:
   529                           	opt stack 0
   530  00343C                     __initialization:
   531                           	opt stack 0
   532                           
   533                           ; Clear objects allocated to COMRAM (1 bytes)
   534  00343C  6A48               	clrf	__pbssCOMRAM& (0+255),c
   535  00343E                     end_of_initialization:
   536                           	opt stack 0
   537  00343E                     __end_of__initialization:
   538                           	opt stack 0
   539  00343E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   540  003440  6EF8               	movwf	tblptru,c
   541  003442  0100               	movlb	0
   542  003444  EFFF  F017         	goto	_main	;jump to C main() function
   543                           tblptru	equ	0xFF8
   544                           
   545                           	psect	bssCOMRAM
   546  000048                     __pbssCOMRAM:
   547                           	opt stack 0
   548  000048                     _MADCTLbits:
   549                           	opt stack 0
   550  000048                     	ds	1
   551                           tblptru	equ	0xFF8
   552                           
   553                           	psect	cstackCOMRAM
   554  000001                     __pcstackCOMRAM:
   555                           	opt stack 0
   556  000001                     ??_spiTransfer:
   557  000001                     ?___wmul:
   558                           	opt stack 0
   559  000001                     ?___awdiv:
   560                           	opt stack 0
   561  000001                     ?___awmod:
   562                           	opt stack 0
   563  000001                     ?_new_px_char:
   564                           	opt stack 0
   565  000001                     spiInit@divider:
   566                           	opt stack 0
   567  000001                     ___wmul@multiplier:
   568                           	opt stack 0
   569  000001                     ___awdiv@dividend:
   570                           	opt stack 0
   571  000001                     ___awmod@dividend:
   572                           	opt stack 0
   573  000001                     new_px_char@a:
   574                           	opt stack 0
   575                           
   576                           ; 4 bytes @ 0x0
   577  000001                     	ds	1
   578  000002                     spiTransfer@byteToTransfer:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x1
   582  000002                     	ds	1
   583  000003                     spiSend@val:
   584                           	opt stack 0
   585  000003                     ___wmul@multiplicand:
   586                           	opt stack 0
   587  000003                     ___awdiv@divisor:
   588                           	opt stack 0
   589  000003                     ___awmod@divisor:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x2
   593  000003                     	ds	1
   594  000004                     glcdTransfer@cmd:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x3
   598  000004                     	ds	1
   599  000005                     ??_glcdTransfer:
   600  000005                     ___awdiv@counter:
   601                           	opt stack 0
   602  000005                     ___awmod@counter:
   603                           	opt stack 0
   604  000005                     ___wmul@product:
   605                           	opt stack 0
   606  000005                     new_px_char@b:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x4
   610  000005                     	ds	1
   611  000006                     glcdTransfer@byte:
   612                           	opt stack 0
   613  000006                     ___awdiv@sign:
   614                           	opt stack 0
   615  000006                     ___awmod@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x5
   619  000006                     	ds	1
   620  000007                     glcdDrawRectangle@XE:
   621                           	opt stack 0
   622  000007                     glcdSetCOLMOD@numBitsPerPixel:
   623                           	opt stack 0
   624  000007                     ___awdiv@quotient:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x6
   628  000007                     	ds	1
   629  000008                     glcdDrawRectangle@YS:
   630                           	opt stack 0
   631  000008                     glcdSetCOLMOD@rawData:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x7
   635  000008                     	ds	1
   636  000009                     glcdDrawRectangle@YE:
   637                           	opt stack 0
   638  000009                     new_px_char@p:
   639                           	opt stack 0
   640                           
   641                           ; 8 bytes @ 0x8
   642  000009                     	ds	1
   643  00000A                     glcdDrawRectangle@color:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x9
   647  00000A                     	ds	4
   648  00000E                     ??_glcdDrawRectangle:
   649                           
   650                           ; 1 bytes @ 0xD
   651  00000E                     	ds	3
   652  000011                     ?_px_map:
   653                           	opt stack 0
   654                           
   655                           ; 8 bytes @ 0x10
   656  000011                     	ds	1
   657  000012                     glcdDrawRectangle@numLoops:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x11
   661  000012                     	ds	2
   662  000014                     glcdDrawRectangle@i:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x13
   666  000014                     	ds	2
   667  000016                     glcdDrawRectangle@colorData:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x15
   671  000016                     	ds	3
   672  000019                     glcdDrawRectangle@XS:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x18
   676  000019                     	ds	1
   677  00001A                     ??_initGLCD:
   678  00001A                     glcdDrawPixel@YS:
   679                           	opt stack 0
   680  00001A                     px_map@c:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x19
   684  00001A                     	ds	1
   685  00001B                     glcdDrawPixel@color:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0x1A
   689  00001B                     	ds	1
   690  00001C                     
   691                           ; 1 bytes @ 0x1B
   692  00001C                     	ds	3
   693  00001F                     ??_glcdDrawPixel:
   694                           
   695                           ; 1 bytes @ 0x1E
   696  00001F                     	ds	1
   697  000020                     glcdDrawPixel@XS:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x1F
   701  000020                     	ds	1
   702  000021                     draw_px_char@x:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x20
   706  000021                     	ds	2
   707  000023                     draw_px_char@y:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x22
   711  000023                     	ds	2
   712  000025                     draw_px_char@p:
   713                           	opt stack 0
   714                           
   715                           ; 8 bytes @ 0x24
   716  000025                     	ds	8
   717  00002D                     ??_draw_px_char:
   718                           
   719                           ; 1 bytes @ 0x2C
   720  00002D                     	ds	4
   721  000031                     draw_px_char@m:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x30
   725  000031                     	ds	4
   726  000035                     draw_px_char@i:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x34
   730  000035                     	ds	2
   731  000037                     print_px_char@x:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x36
   735  000037                     	ds	2
   736  000039                     print_px_char@y:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x38
   740  000039                     	ds	2
   741  00003B                     print_px_char@c:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x3A
   745  00003B                     	ds	1
   746  00003C                     print_px_string@x:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x3B
   750  00003C                     	ds	2
   751  00003E                     print_px_string@y:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x3D
   755  00003E                     	ds	2
   756  000040                     print_px_string@s:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x3F
   760  000040                     	ds	2
   761  000042                     ??_print_px_string:
   762                           
   763                           ; 1 bytes @ 0x41
   764  000042                     	ds	2
   765  000044                     _print_px_string$1144:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x43
   769  000044                     	ds	2
   770  000046                     print_px_string@idx:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x45
   774  000046                     	ds	2
   775  000048                     tblptru	equ	0xFF8
   776                           
   777                           ; 1 bytes @ 0x47
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 70 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels required when called:    8
   803 ;; This function calls:
   804 ;;		_glcdDrawRectangle
   805 ;;		_init
   806 ;;		_print_px_string
   807 ;; This function is called by:
   808 ;;		Startup code after reset
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text0
   813  002FFE                     __ptext0:
   814                           	opt stack 0
   815  002FFE                     _main:
   816                           	opt stack 23
   817                           
   818                           ;main.c: 71: init();
   819                           
   820                           ;incstack = 0
   821  002FFE  ECCC  F019         	call	_init	;wreg free
   822                           
   823                           ;main.c: 74: glcdDrawRectangle(0, GLCD_SIZE_VERT, 0, 128, RED);
   824  003002  0E69               	movlw	low _GLCD_SIZE_VERT
   825  003004  6EF6               	movwf	tblptrl,c
   826  003006                     	if	1	;There is more than 1 active tblptr byte
   827  003006  0E10               	movlw	high _GLCD_SIZE_VERT
   828  003008  6EF7               	movwf	tblptrh,c
   829  00300A                     	endif
   830  00300A                     	if	0	;There are less than 3 active tblptr bytes
   831  00300A                     	endif
   832  00300A  0008               	tblrd		*
   833  00300C  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
   834  003010  0E00               	movlw	0
   835  003012  6E08               	movwf	glcdDrawRectangle@YS,c
   836  003014  0E80               	movlw	128
   837  003016  6E09               	movwf	glcdDrawRectangle@YE,c
   838  003018  0E19               	movlw	low _RED
   839  00301A  6EF6               	movwf	tblptrl,c
   840  00301C                     	if	1	;There is more than 1 active tblptr byte
   841  00301C  0E10               	movlw	high _RED
   842  00301E  6EF7               	movwf	tblptrh,c
   843  003020                     	endif
   844  003020                     	if	0	;There are less than 3 active tblptr bytes
   845  003020                     	endif
   846  003020  0009               	tblrd		*+
   847  003022  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
   848  003026  0009               	tblrd		*+
   849  003028  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
   850  00302C  0009               	tblrd		*+
   851  00302E  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
   852  003032  000A               	tblrd		*-
   853  003034  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
   854  003038  0E00               	movlw	0
   855  00303A  EC9E  F016         	call	_glcdDrawRectangle
   856                           
   857                           ;main.c: 76: print_px_string(0, 14, "         MAKE        ");
   858  00303E  0E00               	movlw	0
   859  003040  6E3D               	movwf	print_px_string@x+1,c
   860  003042  0E00               	movlw	0
   861  003044  6E3C               	movwf	print_px_string@x,c
   862  003046  0E00               	movlw	0
   863  003048  6E3F               	movwf	print_px_string@y+1,c
   864  00304A  0E0E               	movlw	14
   865  00304C  6E3E               	movwf	print_px_string@y,c
   866  00304E  0E6D               	movlw	low STR_1
   867  003050  6E40               	movwf	print_px_string@s,c
   868  003052  0E10               	movlw	high STR_1
   869  003054  6E41               	movwf	print_px_string@s+1,c
   870  003056  ECA8  F018         	call	_print_px_string	;wreg free
   871                           
   872                           ;main.c: 77: print_px_string(0, 28, "       AMERICA       ");
   873  00305A  0E00               	movlw	0
   874  00305C  6E3D               	movwf	print_px_string@x+1,c
   875  00305E  0E00               	movlw	0
   876  003060  6E3C               	movwf	print_px_string@x,c
   877  003062  0E00               	movlw	0
   878  003064  6E3F               	movwf	print_px_string@y+1,c
   879  003066  0E1C               	movlw	28
   880  003068  6E3E               	movwf	print_px_string@y,c
   881  00306A  0EAF               	movlw	low STR_2
   882  00306C  6E40               	movwf	print_px_string@s,c
   883  00306E  0E10               	movlw	high STR_2
   884  003070  6E41               	movwf	print_px_string@s+1,c
   885  003072  ECA8  F018         	call	_print_px_string	;wreg free
   886                           
   887                           ;main.c: 78: print_px_string(0, 42, "        GREAT        ");
   888  003076  0E00               	movlw	0
   889  003078  6E3D               	movwf	print_px_string@x+1,c
   890  00307A  0E00               	movlw	0
   891  00307C  6E3C               	movwf	print_px_string@x,c
   892  00307E  0E00               	movlw	0
   893  003080  6E3F               	movwf	print_px_string@y+1,c
   894  003082  0E2A               	movlw	42
   895  003084  6E3E               	movwf	print_px_string@y,c
   896  003086  0E99               	movlw	low STR_3
   897  003088  6E40               	movwf	print_px_string@s,c
   898  00308A  0E10               	movlw	high STR_3
   899  00308C  6E41               	movwf	print_px_string@s+1,c
   900  00308E  ECA8  F018         	call	_print_px_string	;wreg free
   901                           
   902                           ;main.c: 79: print_px_string(0, 56, "        AGAIN        ");
   903  003092  0E00               	movlw	0
   904  003094  6E3D               	movwf	print_px_string@x+1,c
   905  003096  0E00               	movlw	0
   906  003098  6E3C               	movwf	print_px_string@x,c
   907  00309A  0E00               	movlw	0
   908  00309C  6E3F               	movwf	print_px_string@y+1,c
   909  00309E  0E38               	movlw	56
   910  0030A0  6E3E               	movwf	print_px_string@y,c
   911  0030A2  0E83               	movlw	low STR_4
   912  0030A4  6E40               	movwf	print_px_string@s,c
   913  0030A6  0E10               	movlw	high STR_4
   914  0030A8  6E41               	movwf	print_px_string@s+1,c
   915  0030AA  ECA8  F018         	call	_print_px_string	;wreg free
   916                           
   917                           ;main.c: 80: print_px_string(0, 84, "      Trump 2020     ");
   918  0030AE  0E00               	movlw	0
   919  0030B0  6E3D               	movwf	print_px_string@x+1,c
   920  0030B2  0E00               	movlw	0
   921  0030B4  6E3C               	movwf	print_px_string@x,c
   922  0030B6  0E00               	movlw	0
   923  0030B8  6E3F               	movwf	print_px_string@y+1,c
   924  0030BA  0E54               	movlw	84
   925  0030BC  6E3E               	movwf	print_px_string@y,c
   926  0030BE  0EC5               	movlw	low STR_5
   927  0030C0  6E40               	movwf	print_px_string@s,c
   928  0030C2  0E10               	movlw	high STR_5
   929  0030C4  6E41               	movwf	print_px_string@s+1,c
   930  0030C6  ECA8  F018         	call	_print_px_string	;wreg free
   931  0030CA                     l139:
   932  0030CA  D7FF               	goto	l139
   933  0030CC                     __end_of_main:
   934                           	opt stack 0
   935                           tblptru	equ	0xFF8
   936                           tblptrh	equ	0xFF7
   937                           tblptrl	equ	0xFF6
   938                           tablat	equ	0xFF5
   939                           
   940 ;; *************** function _print_px_string *****************
   941 ;; Defined at:
   942 ;;		line 128 in file "px_ascii.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  x               2   59[COMRAM] int 
   945 ;;  y               2   61[COMRAM] int 
   946 ;;  s               2   63[COMRAM] PTR unsigned char 
   947 ;;		 -> STR_5(22), STR_4(22), STR_3(22), STR_2(22), 
   948 ;;		 -> STR_1(22), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  idx             2   69[COMRAM] int 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   960 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;Total ram usage:       12 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    7
   967 ;; This function calls:
   968 ;;		___wmul
   969 ;;		_print_px_char
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text1
   976  003150                     __ptext1:
   977                           	opt stack 0
   978  003150                     _print_px_string:
   979                           	opt stack 23
   980                           
   981                           ;px_ascii.c: 129: int idx = 0;
   982                           
   983                           ;incstack = 0
   984  003150  0E00               	movlw	0
   985  003152  6E47               	movwf	print_px_string@idx+1,c
   986  003154  0E00               	movlw	0
   987  003156  6E46               	movwf	print_px_string@idx,c
   988                           
   989                           ;px_ascii.c: 130: while(s[idx] != '\0') {
   990  003158  D029               	goto	l437
   991  00315A                     
   992                           ;px_ascii.c: 131: print_px_char(x+idx*(5+1), y, s[idx]);
   993  00315A  C046  F001         	movff	print_px_string@idx,___wmul@multiplier
   994  00315E  C047  F002         	movff	print_px_string@idx+1,___wmul@multiplier+1
   995  003162  0E00               	movlw	0
   996  003164  6E04               	movwf	___wmul@multiplicand+1,c
   997  003166  0E06               	movlw	6
   998  003168  6E03               	movwf	___wmul@multiplicand,c
   999  00316A  ECF9  F019         	call	___wmul	;wreg free
  1000  00316E  503C               	movf	print_px_string@x,w,c
  1001  003170  2401               	addwf	?___wmul,w,c
  1002  003172  6E44               	movwf	_print_px_string$1144,c
  1003  003174  503D               	movf	print_px_string@x+1,w,c
  1004  003176  2002               	addwfc	?___wmul+1,w,c
  1005  003178  6E45               	movwf	_print_px_string$1144+1,c
  1006                           
  1007                           ;px_ascii.c: 131: print_px_char(x+idx*(5+1), y, s[idx]);
  1008  00317A  C044  F037         	movff	_print_px_string$1144,print_px_char@x
  1009  00317E  C045  F038         	movff	_print_px_string$1144+1,print_px_char@x+1
  1010  003182  C03E  F039         	movff	print_px_string@y,print_px_char@y
  1011  003186  C03F  F03A         	movff	print_px_string@y+1,print_px_char@y+1
  1012  00318A  5046               	movf	print_px_string@idx,w,c
  1013  00318C  2440               	addwf	print_px_string@s,w,c
  1014  00318E  6E42               	movwf	??_print_px_string& (0+255),c
  1015  003190  5047               	movf	print_px_string@idx+1,w,c
  1016  003192  2041               	addwfc	print_px_string@s+1,w,c
  1017  003194  6E43               	movwf	(??_print_px_string+1)& (0+255),c
  1018  003196  C042  FFF6         	movff	??_print_px_string,tblptrl
  1019  00319A  C043  FFF7         	movff	??_print_px_string+1,tblptrh
  1020  00319E                     	if	0	;tblptru may be non-zero
  1021  00319E                     	endif
  1022  00319E                     	if	0	;tblptru may be non-zero
  1023  00319E                     	endif
  1024  00319E  0008               	tblrd		*
  1025  0031A0  CFF5 F03B          	movff	tablat,print_px_char@c
  1026  0031A4  ECB3  F019         	call	_print_px_char	;wreg free
  1027                           
  1028                           ;px_ascii.c: 133: idx++;
  1029  0031A8  4A46               	infsnz	print_px_string@idx,f,c
  1030  0031AA  2A47               	incf	print_px_string@idx+1,f,c
  1031  0031AC                     l437:
  1032  0031AC  5046               	movf	print_px_string@idx,w,c
  1033  0031AE  2440               	addwf	print_px_string@s,w,c
  1034  0031B0  6E42               	movwf	??_print_px_string& (0+255),c
  1035  0031B2  5047               	movf	print_px_string@idx+1,w,c
  1036  0031B4  2041               	addwfc	print_px_string@s+1,w,c
  1037  0031B6  6E43               	movwf	(??_print_px_string+1)& (0+255),c
  1038  0031B8  C042  FFF6         	movff	??_print_px_string,tblptrl
  1039  0031BC  C043  FFF7         	movff	??_print_px_string+1,tblptrh
  1040  0031C0                     	if	0	;tblptru may be non-zero
  1041  0031C0                     	endif
  1042  0031C0                     	if	0	;tblptru may be non-zero
  1043  0031C0                     	endif
  1044  0031C0  0008               	tblrd		*
  1045  0031C2  50F5               	movf	tablat,w,c
  1046  0031C4  0900               	iorlw	0
  1047  0031C6  B4D8               	btfsc	status,2,c
  1048  0031C8  0012               	return	
  1049  0031CA  D7C7               	goto	l438
  1050  0031CC                     __end_of_print_px_string:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           status	equ	0xFD8
  1057                           
  1058 ;; *************** function _print_px_char *****************
  1059 ;; Defined at:
  1060 ;;		line 124 in file "px_ascii.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  x               2   54[COMRAM] int 
  1063 ;;  y               2   56[COMRAM] int 
  1064 ;;  c               1   58[COMRAM] unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1076 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;Total ram usage:        5 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    6
  1083 ;; This function calls:
  1084 ;;		_draw_px_char
  1085 ;;		_px_map
  1086 ;; This function is called by:
  1087 ;;		_print_px_string
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text2
  1092  003366                     __ptext2:
  1093                           	opt stack 0
  1094  003366                     _print_px_char:
  1095                           	opt stack 23
  1096                           
  1097                           ;px_ascii.c: 125: draw_px_char(x, y, px_map(c));
  1098                           
  1099                           ;incstack = 0
  1100  003366  C037  F021         	movff	print_px_char@x,draw_px_char@x
  1101  00336A  C038  F022         	movff	print_px_char@x+1,draw_px_char@x+1
  1102  00336E  C039  F023         	movff	print_px_char@y,draw_px_char@y
  1103  003372  C03A  F024         	movff	print_px_char@y+1,draw_px_char@y+1
  1104  003376  503B               	movf	print_px_char@c,w,c
  1105  003378  EC6E  F008         	call	_px_map
  1106  00337C  CFE9 FFD9          	movff	fsr0l,fsr2l
  1107  003380  CFEA FFDA          	movff	fsr0h,fsr2h
  1108  003384  EE00  F025         	lfsr	0,draw_px_char@p
  1109  003388  0E07               	movlw	7
  1110  00338A                     u2551:
  1111  00338A  CFDB FFEB          	movff	plusw2,plusw0
  1112  00338E  06E8               	decf	wreg,f,c
  1113  003390  E2FC               	bc	u2551
  1114  003392  EC5E  F017         	call	_draw_px_char	;wreg free
  1115  003396  0012               	return		;funcret
  1116  003398                     __end_of_print_px_char:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           plusw0	equ	0xFEB
  1123                           fsr0h	equ	0xFEA
  1124                           fsr0l	equ	0xFE9
  1125                           wreg	equ	0xFE8
  1126                           plusw2	equ	0xFDB
  1127                           fsr2h	equ	0xFDA
  1128                           fsr2l	equ	0xFD9
  1129                           status	equ	0xFD8
  1130                           
  1131 ;; *************** function _px_map *****************
  1132 ;; Defined at:
  1133 ;;		line 21 in file "px_ascii.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  c               1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  c               1   25[COMRAM] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  8   16[COMRAM] struct .
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1147 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;Total ram usage:       10 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    1
  1154 ;; This function calls:
  1155 ;;		_new_px_char
  1156 ;; This function is called by:
  1157 ;;		_print_px_char
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text3
  1162  0010DC                     __ptext3:
  1163                           	opt stack 0
  1164  0010DC                     _px_map:
  1165                           	opt stack 27
  1166                           
  1167                           ;incstack = 0
  1168                           ;px_map@c stored from wreg
  1169  0010DC  6E1A               	movwf	px_map@c,c
  1170                           
  1171                           ;px_ascii.c: 23: switch(c) {
  1172  0010DE  EFB1  F013         	goto	l333
  1173  0010E2  0E00               	movlw	0
  1174  0010E4  6E01               	movwf	new_px_char@a,c
  1175  0010E6  0E00               	movlw	0
  1176  0010E8  6E02               	movwf	new_px_char@a+1,c
  1177  0010EA  0E00               	movlw	0
  1178  0010EC  6E03               	movwf	new_px_char@a+2,c
  1179  0010EE  0E00               	movlw	0
  1180  0010F0  6E04               	movwf	new_px_char@a+3,c
  1181  0010F2  0E00               	movlw	0
  1182  0010F4  6E05               	movwf	new_px_char@b,c
  1183  0010F6  0E00               	movlw	0
  1184  0010F8  6E06               	movwf	new_px_char@b+1,c
  1185  0010FA  0E00               	movlw	0
  1186  0010FC  6E07               	movwf	new_px_char@b+2,c
  1187  0010FE  0E00               	movlw	0
  1188  001100  6E08               	movwf	new_px_char@b+3,c
  1189  001102  EC99  F019         	call	_new_px_char	;wreg free
  1190  001106  CFE9 FFD9          	movff	fsr0l,fsr2l
  1191  00110A  CFEA FFDA          	movff	fsr0h,fsr2h
  1192  00110E  EE00  F011         	lfsr	0,?_px_map
  1193  001112  0E07               	movlw	7
  1194  001114                     u1591:
  1195  001114  CFDB FFEB          	movff	plusw2,plusw0
  1196  001118  06E8               	decf	wreg,f,c
  1197  00111A  E2FC               	bc	u1591
  1198  00111C  0012               	return	
  1199  00111E  0E21               	movlw	33
  1200  001120  6E01               	movwf	new_px_char@a,c
  1201  001122  0E80               	movlw	128
  1202  001124  6E02               	movwf	new_px_char@a+1,c
  1203  001126  0E00               	movlw	0
  1204  001128  6E03               	movwf	new_px_char@a+2,c
  1205  00112A  0E00               	movlw	0
  1206  00112C  6E04               	movwf	new_px_char@a+3,c
  1207  00112E  0E00               	movlw	0
  1208  001130  6E05               	movwf	new_px_char@b,c
  1209  001132  0E10               	movlw	16
  1210  001134  6E06               	movwf	new_px_char@b+1,c
  1211  001136  0E42               	movlw	66
  1212  001138  6E07               	movwf	new_px_char@b+2,c
  1213  00113A  0E08               	movlw	8
  1214  00113C  6E08               	movwf	new_px_char@b+3,c
  1215  00113E  EC99  F019         	call	_new_px_char	;wreg free
  1216  001142  CFE9 FFD9          	movff	fsr0l,fsr2l
  1217  001146  CFEA FFDA          	movff	fsr0h,fsr2h
  1218  00114A  EE00  F011         	lfsr	0,?_px_map
  1219  00114E  0E07               	movlw	7
  1220  001150                     u1601:
  1221  001150  CFDB FFEB          	movff	plusw2,plusw0
  1222  001154  06E8               	decf	wreg,f,c
  1223  001156  E2FC               	bc	u1601
  1224  001158  0012               	return	
  1225  00115A  0E00               	movlw	0
  1226  00115C  6E01               	movwf	new_px_char@a,c
  1227  00115E  0E00               	movlw	0
  1228  001160  6E02               	movwf	new_px_char@a+1,c
  1229  001162  0E00               	movlw	0
  1230  001164  6E03               	movwf	new_px_char@a+2,c
  1231  001166  0E00               	movlw	0
  1232  001168  6E04               	movwf	new_px_char@a+3,c
  1233  00116A  0E00               	movlw	0
  1234  00116C  6E05               	movwf	new_px_char@b,c
  1235  00116E  0E28               	movlw	40
  1236  001170  6E06               	movwf	new_px_char@b+1,c
  1237  001172  0EA5               	movlw	165
  1238  001174  6E07               	movwf	new_px_char@b+2,c
  1239  001176  0E00               	movlw	0
  1240  001178  6E08               	movwf	new_px_char@b+3,c
  1241  00117A  EC99  F019         	call	_new_px_char	;wreg free
  1242  00117E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1243  001182  CFEA FFDA          	movff	fsr0h,fsr2h
  1244  001186  EE00  F011         	lfsr	0,?_px_map
  1245  00118A  0E07               	movlw	7
  1246  00118C                     u1611:
  1247  00118C  CFDB FFEB          	movff	plusw2,plusw0
  1248  001190  06E8               	decf	wreg,f,c
  1249  001192  E2FC               	bc	u1611
  1250  001194  0012               	return	
  1251  001196  0EFA               	movlw	250
  1252  001198  6E01               	movwf	new_px_char@a,c
  1253  00119A  0E4A               	movlw	74
  1254  00119C  6E02               	movwf	new_px_char@a+1,c
  1255  00119E  0E01               	movlw	1
  1256  0011A0  6E03               	movwf	new_px_char@a+2,c
  1257  0011A2  0E00               	movlw	0
  1258  0011A4  6E04               	movwf	new_px_char@a+3,c
  1259  0011A6  0E00               	movlw	0
  1260  0011A8  6E05               	movwf	new_px_char@b,c
  1261  0011AA  0E00               	movlw	0
  1262  0011AC  6E06               	movwf	new_px_char@b+1,c
  1263  0011AE  0EA5               	movlw	165
  1264  0011B0  6E07               	movwf	new_px_char@b+2,c
  1265  0011B2  0EBE               	movlw	190
  1266  0011B4  6E08               	movwf	new_px_char@b+3,c
  1267  0011B6  EC99  F019         	call	_new_px_char	;wreg free
  1268  0011BA  CFE9 FFD9          	movff	fsr0l,fsr2l
  1269  0011BE  CFEA FFDA          	movff	fsr0h,fsr2h
  1270  0011C2  EE00  F011         	lfsr	0,?_px_map
  1271  0011C6  0E07               	movlw	7
  1272  0011C8                     u1621:
  1273  0011C8  CFDB FFEB          	movff	plusw2,plusw0
  1274  0011CC  06E8               	decf	wreg,f,c
  1275  0011CE  E2FC               	bc	u1621
  1276  0011D0  0012               	return	
  1277  0011D2  0EA3               	movlw	163
  1278  0011D4  6E01               	movwf	new_px_char@a,c
  1279  0011D6  0EF4               	movlw	244
  1280  0011D8  6E02               	movwf	new_px_char@a+1,c
  1281  0011DA  0E11               	movlw	17
  1282  0011DC  6E03               	movwf	new_px_char@a+2,c
  1283  0011DE  0E00               	movlw	0
  1284  0011E0  6E04               	movwf	new_px_char@a+3,c
  1285  0011E2  0E00               	movlw	0
  1286  0011E4  6E05               	movwf	new_px_char@b,c
  1287  0011E6  0E10               	movlw	16
  1288  0011E8  6E06               	movwf	new_px_char@b+1,c
  1289  0011EA  0E5F               	movlw	95
  1290  0011EC  6E07               	movwf	new_px_char@b+2,c
  1291  0011EE  0E8A               	movlw	138
  1292  0011F0  6E08               	movwf	new_px_char@b+3,c
  1293  0011F2  EC99  F019         	call	_new_px_char	;wreg free
  1294  0011F6  CFE9 FFD9          	movff	fsr0l,fsr2l
  1295  0011FA  CFEA FFDA          	movff	fsr0h,fsr2h
  1296  0011FE  EE00  F011         	lfsr	0,?_px_map
  1297  001202  0E07               	movlw	7
  1298  001204                     u1631:
  1299  001204  CFDB FFEB          	movff	plusw2,plusw0
  1300  001208  06E8               	decf	wreg,f,c
  1301  00120A  E2FC               	bc	u1631
  1302  00120C  0012               	return	
  1303  00120E  0E11               	movlw	17
  1304  001210  6E01               	movwf	new_px_char@a,c
  1305  001212  0EAA               	movlw	170
  1306  001214  6E02               	movwf	new_px_char@a+1,c
  1307  001216  0E26               	movlw	38
  1308  001218  6E03               	movwf	new_px_char@a+2,c
  1309  00121A  0E00               	movlw	0
  1310  00121C  6E04               	movwf	new_px_char@a+3,c
  1311  00121E  0E00               	movlw	0
  1312  001220  6E05               	movwf	new_px_char@b,c
  1313  001222  0EC8               	movlw	200
  1314  001224  6E06               	movwf	new_px_char@b+1,c
  1315  001226  0EAA               	movlw	170
  1316  001228  6E07               	movwf	new_px_char@b+2,c
  1317  00122A  0E10               	movlw	16
  1318  00122C  6E08               	movwf	new_px_char@b+3,c
  1319  00122E  EC99  F019         	call	_new_px_char	;wreg free
  1320  001232  CFE9 FFD9          	movff	fsr0l,fsr2l
  1321  001236  CFEA FFDA          	movff	fsr0h,fsr2h
  1322  00123A  EE00  F011         	lfsr	0,?_px_map
  1323  00123E  0E07               	movlw	7
  1324  001240                     u1641:
  1325  001240  CFDB FFEB          	movff	plusw2,plusw0
  1326  001244  06E8               	decf	wreg,f,c
  1327  001246  E2FC               	bc	u1641
  1328  001248  0012               	return	
  1329  00124A  0E28               	movlw	40
  1330  00124C  6E01               	movwf	new_px_char@a,c
  1331  00124E  0E39               	movlw	57
  1332  001250  6E02               	movwf	new_px_char@a+1,c
  1333  001252  0E59               	movlw	89
  1334  001254  6E03               	movwf	new_px_char@a+2,c
  1335  001256  0E00               	movlw	0
  1336  001258  6E04               	movwf	new_px_char@a+3,c
  1337  00125A  0E00               	movlw	0
  1338  00125C  6E05               	movwf	new_px_char@b,c
  1339  00125E  0E00               	movlw	0
  1340  001260  6E06               	movwf	new_px_char@b+1,c
  1341  001262  0E51               	movlw	81
  1342  001264  6E07               	movwf	new_px_char@b+2,c
  1343  001266  0E8A               	movlw	138
  1344  001268  6E08               	movwf	new_px_char@b+3,c
  1345  00126A  EC99  F019         	call	_new_px_char	;wreg free
  1346  00126E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1347  001272  CFEA FFDA          	movff	fsr0h,fsr2h
  1348  001276  EE00  F011         	lfsr	0,?_px_map
  1349  00127A  0E07               	movlw	7
  1350  00127C                     u1651:
  1351  00127C  CFDB FFEB          	movff	plusw2,plusw0
  1352  001280  06E8               	decf	wreg,f,c
  1353  001282  E2FC               	bc	u1651
  1354  001284  0012               	return	
  1355  001286  0E00               	movlw	0
  1356  001288  6E01               	movwf	new_px_char@a,c
  1357  00128A  0E00               	movlw	0
  1358  00128C  6E02               	movwf	new_px_char@a+1,c
  1359  00128E  0E00               	movlw	0
  1360  001290  6E03               	movwf	new_px_char@a+2,c
  1361  001292  0E00               	movlw	0
  1362  001294  6E04               	movwf	new_px_char@a+3,c
  1363  001296  0E00               	movlw	0
  1364  001298  6E05               	movwf	new_px_char@b,c
  1365  00129A  0E10               	movlw	16
  1366  00129C  6E06               	movwf	new_px_char@b+1,c
  1367  00129E  0E42               	movlw	66
  1368  0012A0  6E07               	movwf	new_px_char@b+2,c
  1369  0012A2  0E00               	movlw	0
  1370  0012A4  6E08               	movwf	new_px_char@b+3,c
  1371  0012A6  EC99  F019         	call	_new_px_char	;wreg free
  1372  0012AA  CFE9 FFD9          	movff	fsr0l,fsr2l
  1373  0012AE  CFEA FFDA          	movff	fsr0h,fsr2h
  1374  0012B2  EE00  F011         	lfsr	0,?_px_map
  1375  0012B6  0E07               	movlw	7
  1376  0012B8                     u1661:
  1377  0012B8  CFDB FFEB          	movff	plusw2,plusw0
  1378  0012BC  06E8               	decf	wreg,f,c
  1379  0012BE  E2FC               	bc	u1661
  1380  0012C0  0012               	return	
  1381  0012C2  0E10               	movlw	16
  1382  0012C4  6E01               	movwf	new_px_char@a,c
  1383  0012C6  0E82               	movlw	130
  1384  0012C8  6E02               	movwf	new_px_char@a+1,c
  1385  0012CA  0E10               	movlw	16
  1386  0012CC  6E03               	movwf	new_px_char@a+2,c
  1387  0012CE  0E04               	movlw	4
  1388  0012D0  6E04               	movwf	new_px_char@a+3,c
  1389  0012D2  0E00               	movlw	0
  1390  0012D4  6E05               	movwf	new_px_char@b,c
  1391  0012D6  0E11               	movlw	17
  1392  0012D8  6E06               	movwf	new_px_char@b+1,c
  1393  0012DA  0E22               	movlw	34
  1394  0012DC  6E07               	movwf	new_px_char@b+2,c
  1395  0012DE  0E84               	movlw	132
  1396  0012E0  6E08               	movwf	new_px_char@b+3,c
  1397  0012E2  EC99  F019         	call	_new_px_char	;wreg free
  1398  0012E6  CFE9 FFD9          	movff	fsr0l,fsr2l
  1399  0012EA  CFEA FFDA          	movff	fsr0h,fsr2h
  1400  0012EE  EE00  F011         	lfsr	0,?_px_map
  1401  0012F2  0E07               	movlw	7
  1402  0012F4                     u1671:
  1403  0012F4  CFDB FFEB          	movff	plusw2,plusw0
  1404  0012F8  06E8               	decf	wreg,f,c
  1405  0012FA  E2FC               	bc	u1671
  1406  0012FC  0012               	return	
  1407  0012FE  0E42               	movlw	66
  1408  001300  6E01               	movwf	new_px_char@a,c
  1409  001302  0E88               	movlw	136
  1410  001304  6E02               	movwf	new_px_char@a+1,c
  1411  001306  0E10               	movlw	16
  1412  001308  6E03               	movwf	new_px_char@a+2,c
  1413  00130A  0E01               	movlw	1
  1414  00130C  6E04               	movwf	new_px_char@a+3,c
  1415  00130E  0E40               	movlw	64
  1416  001310  6E05               	movwf	new_px_char@b,c
  1417  001312  0E10               	movlw	16
  1418  001314  6E06               	movwf	new_px_char@b+1,c
  1419  001316  0E82               	movlw	130
  1420  001318  6E07               	movwf	new_px_char@b+2,c
  1421  00131A  0E10               	movlw	16
  1422  00131C  6E08               	movwf	new_px_char@b+3,c
  1423  00131E  EC99  F019         	call	_new_px_char	;wreg free
  1424  001322  CFE9 FFD9          	movff	fsr0l,fsr2l
  1425  001326  CFEA FFDA          	movff	fsr0h,fsr2h
  1426  00132A  EE00  F011         	lfsr	0,?_px_map
  1427  00132E  0E07               	movlw	7
  1428  001330                     u1681:
  1429  001330  CFDB FFEB          	movff	plusw2,plusw0
  1430  001334  06E8               	decf	wreg,f,c
  1431  001336  E2FC               	bc	u1681
  1432  001338  0012               	return	
  1433  00133A  0E01               	movlw	1
  1434  00133C  6E01               	movwf	new_px_char@a,c
  1435  00133E  0E00               	movlw	0
  1436  001340  6E02               	movwf	new_px_char@a+1,c
  1437  001342  0E00               	movlw	0
  1438  001344  6E03               	movwf	new_px_char@a+2,c
  1439  001346  0E00               	movlw	0
  1440  001348  6E04               	movwf	new_px_char@a+3,c
  1441  00134A  0E00               	movlw	0
  1442  00134C  6E05               	movwf	new_px_char@b,c
  1443  00134E  0E90               	movlw	144
  1444  001350  6E06               	movwf	new_px_char@b+1,c
  1445  001352  0EEA               	movlw	234
  1446  001354  6E07               	movwf	new_px_char@b+2,c
  1447  001356  0E2A               	movlw	42
  1448  001358  6E08               	movwf	new_px_char@b+3,c
  1449  00135A  EC99  F019         	call	_new_px_char	;wreg free
  1450  00135E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1451  001362  CFEA FFDA          	movff	fsr0h,fsr2h
  1452  001366  EE00  F011         	lfsr	0,?_px_map
  1453  00136A  0E07               	movlw	7
  1454  00136C                     u1691:
  1455  00136C  CFDB FFEB          	movff	plusw2,plusw0
  1456  001370  06E8               	decf	wreg,f,c
  1457  001372  E2FC               	bc	u1691
  1458  001374  0012               	return	
  1459  001376  0E27               	movlw	39
  1460  001378  6E01               	movwf	new_px_char@a,c
  1461  00137A  0E04               	movlw	4
  1462  00137C  6E02               	movwf	new_px_char@a+1,c
  1463  00137E  0E00               	movlw	0
  1464  001380  6E03               	movwf	new_px_char@a+2,c
  1465  001382  0E00               	movlw	0
  1466  001384  6E04               	movwf	new_px_char@a+3,c
  1467  001386  0E00               	movlw	0
  1468  001388  6E05               	movwf	new_px_char@b,c
  1469  00138A  0E00               	movlw	0
  1470  00138C  6E06               	movwf	new_px_char@b+1,c
  1471  00138E  0E40               	movlw	64
  1472  001390  6E07               	movwf	new_px_char@b+2,c
  1473  001392  0EC8               	movlw	200
  1474  001394  6E08               	movwf	new_px_char@b+3,c
  1475  001396  EC99  F019         	call	_new_px_char	;wreg free
  1476  00139A  CFE9 FFD9          	movff	fsr0l,fsr2l
  1477  00139E  CFEA FFDA          	movff	fsr0h,fsr2h
  1478  0013A2  EE00  F011         	lfsr	0,?_px_map
  1479  0013A6  0E07               	movlw	7
  1480  0013A8                     u1701:
  1481  0013A8  CFDB FFEB          	movff	plusw2,plusw0
  1482  0013AC  06E8               	decf	wreg,f,c
  1483  0013AE  E2FC               	bc	u1701
  1484  0013B0  0012               	return	
  1485  0013B2  0E00               	movlw	0
  1486  0013B4  6E01               	movwf	new_px_char@a,c
  1487  0013B6  0E80               	movlw	128
  1488  0013B8  6E02               	movwf	new_px_char@a+1,c
  1489  0013BA  0E11               	movlw	17
  1490  0013BC  6E03               	movwf	new_px_char@a+2,c
  1491  0013BE  0E01               	movlw	1
  1492  0013C0  6E04               	movwf	new_px_char@a+3,c
  1493  0013C2  0E00               	movlw	0
  1494  0013C4  6E05               	movwf	new_px_char@b,c
  1495  0013C6  0E00               	movlw	0
  1496  0013C8  6E06               	movwf	new_px_char@b+1,c
  1497  0013CA  0E00               	movlw	0
  1498  0013CC  6E07               	movwf	new_px_char@b+2,c
  1499  0013CE  0E00               	movlw	0
  1500  0013D0  6E08               	movwf	new_px_char@b+3,c
  1501  0013D2  EC99  F019         	call	_new_px_char	;wreg free
  1502  0013D6  CFE9 FFD9          	movff	fsr0l,fsr2l
  1503  0013DA  CFEA FFDA          	movff	fsr0h,fsr2h
  1504  0013DE  EE00  F011         	lfsr	0,?_px_map
  1505  0013E2  0E07               	movlw	7
  1506  0013E4                     u1711:
  1507  0013E4  CFDB FFEB          	movff	plusw2,plusw0
  1508  0013E8  06E8               	decf	wreg,f,c
  1509  0013EA  E2FC               	bc	u1711
  1510  0013EC  0012               	return	
  1511  0013EE  0E07               	movlw	7
  1512  0013F0  6E01               	movwf	new_px_char@a,c
  1513  0013F2  0E00               	movlw	0
  1514  0013F4  6E02               	movwf	new_px_char@a+1,c
  1515  0013F6  0E00               	movlw	0
  1516  0013F8  6E03               	movwf	new_px_char@a+2,c
  1517  0013FA  0E00               	movlw	0
  1518  0013FC  6E04               	movwf	new_px_char@a+3,c
  1519  0013FE  0E00               	movlw	0
  1520  001400  6E05               	movwf	new_px_char@b,c
  1521  001402  0E00               	movlw	0
  1522  001404  6E06               	movwf	new_px_char@b+1,c
  1523  001406  0E00               	movlw	0
  1524  001408  6E07               	movwf	new_px_char@b+2,c
  1525  00140A  0EC0               	movlw	192
  1526  00140C  6E08               	movwf	new_px_char@b+3,c
  1527  00140E  EC99  F019         	call	_new_px_char	;wreg free
  1528  001412  CFE9 FFD9          	movff	fsr0l,fsr2l
  1529  001416  CFEA FFDA          	movff	fsr0h,fsr2h
  1530  00141A  EE00  F011         	lfsr	0,?_px_map
  1531  00141E  0E07               	movlw	7
  1532  001420                     u1721:
  1533  001420  CFDB FFEB          	movff	plusw2,plusw0
  1534  001424  06E8               	decf	wreg,f,c
  1535  001426  E2FC               	bc	u1721
  1536  001428  0012               	return	
  1537  00142A  0E00               	movlw	0
  1538  00142C  6E01               	movwf	new_px_char@a,c
  1539  00142E  0E80               	movlw	128
  1540  001430  6E02               	movwf	new_px_char@a+1,c
  1541  001432  0E38               	movlw	56
  1542  001434  6E03               	movwf	new_px_char@a+2,c
  1543  001436  0E02               	movlw	2
  1544  001438  6E04               	movwf	new_px_char@a+3,c
  1545  00143A  0E00               	movlw	0
  1546  00143C  6E05               	movwf	new_px_char@b,c
  1547  00143E  0E00               	movlw	0
  1548  001440  6E06               	movwf	new_px_char@b+1,c
  1549  001442  0E00               	movlw	0
  1550  001444  6E07               	movwf	new_px_char@b+2,c
  1551  001446  0E00               	movlw	0
  1552  001448  6E08               	movwf	new_px_char@b+3,c
  1553  00144A  EC99  F019         	call	_new_px_char	;wreg free
  1554  00144E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1555  001452  CFEA FFDA          	movff	fsr0h,fsr2h
  1556  001456  EE00  F011         	lfsr	0,?_px_map
  1557  00145A  0E07               	movlw	7
  1558  00145C                     u1731:
  1559  00145C  CFDB FFEB          	movff	plusw2,plusw0
  1560  001460  06E8               	decf	wreg,f,c
  1561  001462  E2FC               	bc	u1731
  1562  001464  0012               	return	
  1563  001466  0E11               	movlw	17
  1564  001468  6E01               	movwf	new_px_char@a,c
  1565  00146A  0E22               	movlw	34
  1566  00146C  6E02               	movwf	new_px_char@a+1,c
  1567  00146E  0E04               	movlw	4
  1568  001470  6E03               	movwf	new_px_char@a+2,c
  1569  001472  0E00               	movlw	0
  1570  001474  6E04               	movwf	new_px_char@a+3,c
  1571  001476  0E00               	movlw	0
  1572  001478  6E05               	movwf	new_px_char@b,c
  1573  00147A  0E40               	movlw	64
  1574  00147C  6E06               	movwf	new_px_char@b+1,c
  1575  00147E  0E88               	movlw	136
  1576  001480  6E07               	movwf	new_px_char@b+2,c
  1577  001482  0E10               	movlw	16
  1578  001484  6E08               	movwf	new_px_char@b+3,c
  1579  001486  EC99  F019         	call	_new_px_char	;wreg free
  1580  00148A  CFE9 FFD9          	movff	fsr0l,fsr2l
  1581  00148E  CFEA FFDA          	movff	fsr0h,fsr2h
  1582  001492  EE00  F011         	lfsr	0,?_px_map
  1583  001496  0E07               	movlw	7
  1584  001498                     u1741:
  1585  001498  CFDB FFEB          	movff	plusw2,plusw0
  1586  00149C  06E8               	decf	wreg,f,c
  1587  00149E  E2FC               	bc	u1741
  1588  0014A0  0012               	return	
  1589  0014A2  0E8C               	movlw	140
  1590  0014A4  6E01               	movwf	new_px_char@a,c
  1591  0014A6  0E8A               	movlw	138
  1592  0014A8  6E02               	movwf	new_px_char@a+1,c
  1593  0014AA  0E00               	movlw	0
  1594  0014AC  6E03               	movwf	new_px_char@a+2,c
  1595  0014AE  0E00               	movlw	0
  1596  0014B0  6E04               	movwf	new_px_char@a+3,c
  1597  0014B2  0E80               	movlw	128
  1598  0014B4  6E05               	movwf	new_px_char@b,c
  1599  0014B6  0EA8               	movlw	168
  1600  0014B8  6E06               	movwf	new_px_char@b+1,c
  1601  0014BA  0E18               	movlw	24
  1602  0014BC  6E07               	movwf	new_px_char@b+2,c
  1603  0014BE  0E63               	movlw	99
  1604  0014C0  6E08               	movwf	new_px_char@b+3,c
  1605  0014C2  EC99  F019         	call	_new_px_char	;wreg free
  1606  0014C6  CFE9 FFD9          	movff	fsr0l,fsr2l
  1607  0014CA  CFEA FFDA          	movff	fsr0h,fsr2h
  1608  0014CE  EE00  F011         	lfsr	0,?_px_map
  1609  0014D2  0E07               	movlw	7
  1610  0014D4                     u1751:
  1611  0014D4  CFDB FFEB          	movff	plusw2,plusw0
  1612  0014D8  06E8               	decf	wreg,f,c
  1613  0014DA  E2FC               	bc	u1751
  1614  0014DC  0012               	return	
  1615  0014DE  0E21               	movlw	33
  1616  0014E0  6E01               	movwf	new_px_char@a,c
  1617  0014E2  0EE4               	movlw	228
  1618  0014E4  6E02               	movwf	new_px_char@a+1,c
  1619  0014E6  0E03               	movlw	3
  1620  0014E8  6E03               	movwf	new_px_char@a+2,c
  1621  0014EA  0E00               	movlw	0
  1622  0014EC  6E04               	movwf	new_px_char@a+3,c
  1623  0014EE  0E80               	movlw	128
  1624  0014F0  6E05               	movwf	new_px_char@b,c
  1625  0014F2  0E98               	movlw	152
  1626  0014F4  6E06               	movwf	new_px_char@b+1,c
  1627  0014F6  0E42               	movlw	66
  1628  0014F8  6E07               	movwf	new_px_char@b+2,c
  1629  0014FA  0E08               	movlw	8
  1630  0014FC  6E08               	movwf	new_px_char@b+3,c
  1631  0014FE  EC99  F019         	call	_new_px_char	;wreg free
  1632  001502  CFE9 FFD9          	movff	fsr0l,fsr2l
  1633  001506  CFEA FFDA          	movff	fsr0h,fsr2h
  1634  00150A  EE00  F011         	lfsr	0,?_px_map
  1635  00150E  0E07               	movlw	7
  1636  001510                     u1761:
  1637  001510  CFDB FFEB          	movff	plusw2,plusw0
  1638  001514  06E8               	decf	wreg,f,c
  1639  001516  E2FC               	bc	u1761
  1640  001518  0012               	return	
  1641  00151A  0E11               	movlw	17
  1642  00151C  6E01               	movwf	new_px_char@a,c
  1643  00151E  0EE1               	movlw	225
  1644  001520  6E02               	movwf	new_px_char@a+1,c
  1645  001522  0E03               	movlw	3
  1646  001524  6E03               	movwf	new_px_char@a+2,c
  1647  001526  0E00               	movlw	0
  1648  001528  6E04               	movwf	new_px_char@a+3,c
  1649  00152A  0EC0               	movlw	192
  1650  00152C  6E05               	movwf	new_px_char@b,c
  1651  00152E  0EC5               	movlw	197
  1652  001530  6E06               	movwf	new_px_char@b+1,c
  1653  001532  0E08               	movlw	8
  1654  001534  6E07               	movwf	new_px_char@b+2,c
  1655  001536  0E11               	movlw	17
  1656  001538  6E08               	movwf	new_px_char@b+3,c
  1657  00153A  EC99  F019         	call	_new_px_char	;wreg free
  1658  00153E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1659  001542  CFEA FFDA          	movff	fsr0h,fsr2h
  1660  001546  EE00  F011         	lfsr	0,?_px_map
  1661  00154A  0E07               	movlw	7
  1662  00154C                     u1771:
  1663  00154C  CFDB FFEB          	movff	plusw2,plusw0
  1664  001550  06E8               	decf	wreg,f,c
  1665  001552  E2FC               	bc	u1771
  1666  001554  0012               	return	
  1667  001556  0E84               	movlw	132
  1668  001558  6E01               	movwf	new_px_char@a,c
  1669  00155A  0ED1               	movlw	209
  1670  00155C  6E02               	movwf	new_px_char@a+1,c
  1671  00155E  0E01               	movlw	1
  1672  001560  6E03               	movwf	new_px_char@a+2,c
  1673  001562  0E00               	movlw	0
  1674  001564  6E04               	movwf	new_px_char@a+3,c
  1675  001566  0EE0               	movlw	224
  1676  001568  6E05               	movwf	new_px_char@b,c
  1677  00156A  0E43               	movlw	67
  1678  00156C  6E06               	movwf	new_px_char@b+1,c
  1679  00156E  0E44               	movlw	68
  1680  001570  6E07               	movwf	new_px_char@b+2,c
  1681  001572  0E1C               	movlw	28
  1682  001574  6E08               	movwf	new_px_char@b+3,c
  1683  001576  EC99  F019         	call	_new_px_char	;wreg free
  1684  00157A  CFE9 FFD9          	movff	fsr0l,fsr2l
  1685  00157E  CFEA FFDA          	movff	fsr0h,fsr2h
  1686  001582  EE00  F011         	lfsr	0,?_px_map
  1687  001586  0E07               	movlw	7
  1688  001588                     u1781:
  1689  001588  CFDB FFEB          	movff	plusw2,plusw0
  1690  00158C  06E8               	decf	wreg,f,c
  1691  00158E  E2FC               	bc	u1781
  1692  001590  0012               	return	
  1693  001592  0EFA               	movlw	250
  1694  001594  6E01               	movwf	new_px_char@a,c
  1695  001596  0E08               	movlw	8
  1696  001598  6E02               	movwf	new_px_char@a+1,c
  1697  00159A  0E01               	movlw	1
  1698  00159C  6E03               	movwf	new_px_char@a+2,c
  1699  00159E  0E00               	movlw	0
  1700  0015A0  6E04               	movwf	new_px_char@a+3,c
  1701  0015A2  0E00               	movlw	0
  1702  0015A4  6E05               	movwf	new_px_char@b,c
  1703  0015A6  0E21               	movlw	33
  1704  0015A8  6E06               	movwf	new_px_char@b+1,c
  1705  0015AA  0EA6               	movlw	166
  1706  0015AC  6E07               	movwf	new_px_char@b+2,c
  1707  0015AE  0E54               	movlw	84
  1708  0015B0  6E08               	movwf	new_px_char@b+3,c
  1709  0015B2  EC99  F019         	call	_new_px_char	;wreg free
  1710  0015B6  CFE9 FFD9          	movff	fsr0l,fsr2l
  1711  0015BA  CFEA FFDA          	movff	fsr0h,fsr2h
  1712  0015BE  EE00  F011         	lfsr	0,?_px_map
  1713  0015C2  0E07               	movlw	7
  1714  0015C4                     u1791:
  1715  0015C4  CFDB FFEB          	movff	plusw2,plusw0
  1716  0015C8  06E8               	decf	wreg,f,c
  1717  0015CA  E2FC               	bc	u1791
  1718  0015CC  0012               	return	
  1719  0015CE  0E84               	movlw	132
  1720  0015D0  6E01               	movwf	new_px_char@a,c
  1721  0015D2  0ED1               	movlw	209
  1722  0015D4  6E02               	movwf	new_px_char@a+1,c
  1723  0015D6  0E01               	movlw	1
  1724  0015D8  6E03               	movwf	new_px_char@a+2,c
  1725  0015DA  0E00               	movlw	0
  1726  0015DC  6E04               	movwf	new_px_char@a+3,c
  1727  0015DE  0EE0               	movlw	224
  1728  0015E0  6E05               	movwf	new_px_char@b,c
  1729  0015E2  0E87               	movlw	135
  1730  0015E4  6E06               	movwf	new_px_char@b+1,c
  1731  0015E6  0ED0               	movlw	208
  1732  0015E8  6E07               	movwf	new_px_char@b+2,c
  1733  0015EA  0E26               	movlw	38
  1734  0015EC  6E08               	movwf	new_px_char@b+3,c
  1735  0015EE  EC99  F019         	call	_new_px_char	;wreg free
  1736  0015F2  CFE9 FFD9          	movff	fsr0l,fsr2l
  1737  0015F6  CFEA FFDA          	movff	fsr0h,fsr2h
  1738  0015FA  EE00  F011         	lfsr	0,?_px_map
  1739  0015FE  0E07               	movlw	7
  1740  001600                     u1801:
  1741  001600  CFDB FFEB          	movff	plusw2,plusw0
  1742  001604  06E8               	decf	wreg,f,c
  1743  001606  E2FC               	bc	u1801
  1744  001608  0012               	return	
  1745  00160A  0E8C               	movlw	140
  1746  00160C  6E01               	movwf	new_px_char@a,c
  1747  00160E  0ED1               	movlw	209
  1748  001610  6E02               	movwf	new_px_char@a+1,c
  1749  001612  0E01               	movlw	1
  1750  001614  6E03               	movwf	new_px_char@a+2,c
  1751  001616  0E00               	movlw	0
  1752  001618  6E04               	movwf	new_px_char@a+3,c
  1753  00161A  0EC0               	movlw	192
  1754  00161C  6E05               	movwf	new_px_char@b,c
  1755  00161E  0EC5               	movlw	197
  1756  001620  6E06               	movwf	new_px_char@b+1,c
  1757  001622  0E10               	movlw	16
  1758  001624  6E07               	movwf	new_px_char@b+2,c
  1759  001626  0E5E               	movlw	94
  1760  001628  6E08               	movwf	new_px_char@b+3,c
  1761  00162A  EC99  F019         	call	_new_px_char	;wreg free
  1762  00162E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1763  001632  CFEA FFDA          	movff	fsr0h,fsr2h
  1764  001636  EE00  F011         	lfsr	0,?_px_map
  1765  00163A  0E07               	movlw	7
  1766  00163C                     u1811:
  1767  00163C  CFDB FFEB          	movff	plusw2,plusw0
  1768  001640  06E8               	decf	wreg,f,c
  1769  001642  E2FC               	bc	u1811
  1770  001644  0012               	return	
  1771  001646  0E11               	movlw	17
  1772  001648  6E01               	movwf	new_px_char@a,c
  1773  00164A  0E42               	movlw	66
  1774  00164C  6E02               	movwf	new_px_char@a+1,c
  1775  00164E  0E00               	movlw	0
  1776  001650  6E03               	movwf	new_px_char@a+2,c
  1777  001652  0E00               	movlw	0
  1778  001654  6E04               	movwf	new_px_char@a+3,c
  1779  001656  0EE0               	movlw	224
  1780  001658  6E05               	movwf	new_px_char@b,c
  1781  00165A  0E43               	movlw	67
  1782  00165C  6E06               	movwf	new_px_char@b+1,c
  1783  00165E  0E84               	movlw	132
  1784  001660  6E07               	movwf	new_px_char@b+2,c
  1785  001662  0E08               	movlw	8
  1786  001664  6E08               	movwf	new_px_char@b+3,c
  1787  001666  EC99  F019         	call	_new_px_char	;wreg free
  1788  00166A  CFE9 FFD9          	movff	fsr0l,fsr2l
  1789  00166E  CFEA FFDA          	movff	fsr0h,fsr2h
  1790  001672  EE00  F011         	lfsr	0,?_px_map
  1791  001676  0E07               	movlw	7
  1792  001678                     u1821:
  1793  001678  CFDB FFEB          	movff	plusw2,plusw0
  1794  00167C  06E8               	decf	wreg,f,c
  1795  00167E  E2FC               	bc	u1821
  1796  001680  0012               	return	
  1797  001682  0E8C               	movlw	140
  1798  001684  6E01               	movwf	new_px_char@a,c
  1799  001686  0ED1               	movlw	209
  1800  001688  6E02               	movwf	new_px_char@a+1,c
  1801  00168A  0E01               	movlw	1
  1802  00168C  6E03               	movwf	new_px_char@a+2,c
  1803  00168E  0E00               	movlw	0
  1804  001690  6E04               	movwf	new_px_char@a+3,c
  1805  001692  0EC0               	movlw	192
  1806  001694  6E05               	movwf	new_px_char@b,c
  1807  001696  0EC5               	movlw	197
  1808  001698  6E06               	movwf	new_px_char@b+1,c
  1809  00169A  0E18               	movlw	24
  1810  00169C  6E07               	movwf	new_px_char@b+2,c
  1811  00169E  0E5D               	movlw	93
  1812  0016A0  6E08               	movwf	new_px_char@b+3,c
  1813  0016A2  EC99  F019         	call	_new_px_char	;wreg free
  1814  0016A6  CFE9 FFD9          	movff	fsr0l,fsr2l
  1815  0016AA  CFEA FFDA          	movff	fsr0h,fsr2h
  1816  0016AE  EE00  F011         	lfsr	0,?_px_map
  1817  0016B2  0E07               	movlw	7
  1818  0016B4                     u1831:
  1819  0016B4  CFDB FFEB          	movff	plusw2,plusw0
  1820  0016B8  06E8               	decf	wreg,f,c
  1821  0016BA  E2FC               	bc	u1831
  1822  0016BC  0012               	return	
  1823  0016BE  0E84               	movlw	132
  1824  0016C0  6E01               	movwf	new_px_char@a,c
  1825  0016C2  0ED1               	movlw	209
  1826  0016C4  6E02               	movwf	new_px_char@a+1,c
  1827  0016C6  0E01               	movlw	1
  1828  0016C8  6E03               	movwf	new_px_char@a+2,c
  1829  0016CA  0E00               	movlw	0
  1830  0016CC  6E04               	movwf	new_px_char@a+3,c
  1831  0016CE  0EC0               	movlw	192
  1832  0016D0  6E05               	movwf	new_px_char@b,c
  1833  0016D2  0EC5               	movlw	197
  1834  0016D4  6E06               	movwf	new_px_char@b+1,c
  1835  0016D6  0E18               	movlw	24
  1836  0016D8  6E07               	movwf	new_px_char@b+2,c
  1837  0016DA  0E3D               	movlw	61
  1838  0016DC  6E08               	movwf	new_px_char@b+3,c
  1839  0016DE  EC99  F019         	call	_new_px_char	;wreg free
  1840  0016E2  CFE9 FFD9          	movff	fsr0l,fsr2l
  1841  0016E6  CFEA FFDA          	movff	fsr0h,fsr2h
  1842  0016EA  EE00  F011         	lfsr	0,?_px_map
  1843  0016EE  0E07               	movlw	7
  1844  0016F0                     u1841:
  1845  0016F0  CFDB FFEB          	movff	plusw2,plusw0
  1846  0016F4  06E8               	decf	wreg,f,c
  1847  0016F6  E2FC               	bc	u1841
  1848  0016F8  0012               	return	
  1849  0016FA  0E20               	movlw	32
  1850  0016FC  6E01               	movwf	new_px_char@a,c
  1851  0016FE  0E8E               	movlw	142
  1852  001700  6E02               	movwf	new_px_char@a+1,c
  1853  001702  0E00               	movlw	0
  1854  001704  6E03               	movwf	new_px_char@a+2,c
  1855  001706  0E00               	movlw	0
  1856  001708  6E04               	movwf	new_px_char@a+3,c
  1857  00170A  0E00               	movlw	0
  1858  00170C  6E05               	movwf	new_px_char@b,c
  1859  00170E  0E10               	movlw	16
  1860  001710  6E06               	movwf	new_px_char@b+1,c
  1861  001712  0E47               	movlw	71
  1862  001714  6E07               	movwf	new_px_char@b+2,c
  1863  001716  0E00               	movlw	0
  1864  001718  6E08               	movwf	new_px_char@b+3,c
  1865  00171A  EC99  F019         	call	_new_px_char	;wreg free
  1866  00171E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1867  001722  CFEA FFDA          	movff	fsr0h,fsr2h
  1868  001726  EE00  F011         	lfsr	0,?_px_map
  1869  00172A  0E07               	movlw	7
  1870  00172C                     u1851:
  1871  00172C  CFDB FFEB          	movff	plusw2,plusw0
  1872  001730  06E8               	decf	wreg,f,c
  1873  001732  E2FC               	bc	u1851
  1874  001734  0012               	return	
  1875  001736  0E01               	movlw	1
  1876  001738  6E01               	movwf	new_px_char@a,c
  1877  00173A  0E80               	movlw	128
  1878  00173C  6E02               	movwf	new_px_char@a+1,c
  1879  00173E  0E11               	movlw	17
  1880  001740  6E03               	movwf	new_px_char@a+2,c
  1881  001742  0E01               	movlw	1
  1882  001744  6E04               	movwf	new_px_char@a+3,c
  1883  001746  0E00               	movlw	0
  1884  001748  6E05               	movwf	new_px_char@b,c
  1885  00174A  0E00               	movlw	0
  1886  00174C  6E06               	movwf	new_px_char@b+1,c
  1887  00174E  0E40               	movlw	64
  1888  001750  6E07               	movwf	new_px_char@b+2,c
  1889  001752  0E1C               	movlw	28
  1890  001754  6E08               	movwf	new_px_char@b+3,c
  1891  001756  EC99  F019         	call	_new_px_char	;wreg free
  1892  00175A  CFE9 FFD9          	movff	fsr0l,fsr2l
  1893  00175E  CFEA FFDA          	movff	fsr0h,fsr2h
  1894  001762  EE00  F011         	lfsr	0,?_px_map
  1895  001766  0E07               	movlw	7
  1896  001768                     u1861:
  1897  001768  CFDB FFEB          	movff	plusw2,plusw0
  1898  00176C  06E8               	decf	wreg,f,c
  1899  00176E  E2FC               	bc	u1861
  1900  001770  0012               	return	
  1901  001772  0E10               	movlw	16
  1902  001774  6E01               	movwf	new_px_char@a,c
  1903  001776  0E04               	movlw	4
  1904  001778  6E02               	movwf	new_px_char@a+1,c
  1905  00177A  0E41               	movlw	65
  1906  00177C  6E03               	movwf	new_px_char@a+2,c
  1907  00177E  0E00               	movlw	0
  1908  001780  6E04               	movwf	new_px_char@a+3,c
  1909  001782  0E00               	movlw	0
  1910  001784  6E05               	movwf	new_px_char@b,c
  1911  001786  0E40               	movlw	64
  1912  001788  6E06               	movwf	new_px_char@b+1,c
  1913  00178A  0E44               	movlw	68
  1914  00178C  6E07               	movwf	new_px_char@b+2,c
  1915  00178E  0E44               	movlw	68
  1916  001790  6E08               	movwf	new_px_char@b+3,c
  1917  001792  EC99  F019         	call	_new_px_char	;wreg free
  1918  001796  CFE9 FFD9          	movff	fsr0l,fsr2l
  1919  00179A  CFEA FFDA          	movff	fsr0h,fsr2h
  1920  00179E  EE00  F011         	lfsr	0,?_px_map
  1921  0017A2  0E07               	movlw	7
  1922  0017A4                     u1871:
  1923  0017A4  CFDB FFEB          	movff	plusw2,plusw0
  1924  0017A8  06E8               	decf	wreg,f,c
  1925  0017AA  E2FC               	bc	u1871
  1926  0017AC  0012               	return	
  1927  0017AE  0E00               	movlw	0
  1928  0017B0  6E01               	movwf	new_px_char@a,c
  1929  0017B2  0E1F               	movlw	31
  1930  0017B4  6E02               	movwf	new_px_char@a+1,c
  1931  0017B6  0E00               	movlw	0
  1932  0017B8  6E03               	movwf	new_px_char@a+2,c
  1933  0017BA  0E00               	movlw	0
  1934  0017BC  6E04               	movwf	new_px_char@a+3,c
  1935  0017BE  0E00               	movlw	0
  1936  0017C0  6E05               	movwf	new_px_char@b,c
  1937  0017C2  0E00               	movlw	0
  1938  0017C4  6E06               	movwf	new_px_char@b+1,c
  1939  0017C6  0E00               	movlw	0
  1940  0017C8  6E07               	movwf	new_px_char@b+2,c
  1941  0017CA  0E3E               	movlw	62
  1942  0017CC  6E08               	movwf	new_px_char@b+3,c
  1943  0017CE  EC99  F019         	call	_new_px_char	;wreg free
  1944  0017D2  CFE9 FFD9          	movff	fsr0l,fsr2l
  1945  0017D6  CFEA FFDA          	movff	fsr0h,fsr2h
  1946  0017DA  EE00  F011         	lfsr	0,?_px_map
  1947  0017DE  0E07               	movlw	7
  1948  0017E0                     u1881:
  1949  0017E0  CFDB FFEB          	movff	plusw2,plusw0
  1950  0017E4  06E8               	decf	wreg,f,c
  1951  0017E6  E2FC               	bc	u1881
  1952  0017E8  0012               	return	
  1953  0017EA  0E44               	movlw	68
  1954  0017EC  6E01               	movwf	new_px_char@a,c
  1955  0017EE  0E44               	movlw	68
  1956  0017F0  6E02               	movwf	new_px_char@a+1,c
  1957  0017F2  0E04               	movlw	4
  1958  0017F4  6E03               	movwf	new_px_char@a+2,c
  1959  0017F6  0E00               	movlw	0
  1960  0017F8  6E04               	movwf	new_px_char@a+3,c
  1961  0017FA  0E00               	movlw	0
  1962  0017FC  6E05               	movwf	new_px_char@b,c
  1963  0017FE  0E04               	movlw	4
  1964  001800  6E06               	movwf	new_px_char@b+1,c
  1965  001802  0E41               	movlw	65
  1966  001804  6E07               	movwf	new_px_char@b+2,c
  1967  001806  0E10               	movlw	16
  1968  001808  6E08               	movwf	new_px_char@b+3,c
  1969  00180A  EC99  F019         	call	_new_px_char	;wreg free
  1970  00180E  CFE9 FFD9          	movff	fsr0l,fsr2l
  1971  001812  CFEA FFDA          	movff	fsr0h,fsr2h
  1972  001816  EE00  F011         	lfsr	0,?_px_map
  1973  00181A  0E07               	movlw	7
  1974  00181C                     u1891:
  1975  00181C  CFDB FFEB          	movff	plusw2,plusw0
  1976  001820  06E8               	decf	wreg,f,c
  1977  001822  E2FC               	bc	u1891
  1978  001824  0012               	return	
  1979  001826  0E22               	movlw	34
  1980  001828  6E01               	movwf	new_px_char@a,c
  1981  00182A  0E04               	movlw	4
  1982  00182C  6E02               	movwf	new_px_char@a+1,c
  1983  00182E  0E10               	movlw	16
  1984  001830  6E03               	movwf	new_px_char@a+2,c
  1985  001832  0E00               	movlw	0
  1986  001834  6E04               	movwf	new_px_char@a+3,c
  1987  001836  0E00               	movlw	0
  1988  001838  6E05               	movwf	new_px_char@b,c
  1989  00183A  0EB8               	movlw	184
  1990  00183C  6E06               	movwf	new_px_char@b+1,c
  1991  00183E  0E18               	movlw	24
  1992  001840  6E07               	movwf	new_px_char@b+2,c
  1993  001842  0E21               	movlw	33
  1994  001844  6E08               	movwf	new_px_char@b+3,c
  1995  001846  EC99  F019         	call	_new_px_char	;wreg free
  1996  00184A  CFE9 FFD9          	movff	fsr0l,fsr2l
  1997  00184E  CFEA FFDA          	movff	fsr0h,fsr2h
  1998  001852  EE00  F011         	lfsr	0,?_px_map
  1999  001856  0E07               	movlw	7
  2000  001858                     u1901:
  2001  001858  CFDB FFEB          	movff	plusw2,plusw0
  2002  00185C  06E8               	decf	wreg,f,c
  2003  00185E  E2FC               	bc	u1901
  2004  001860  0012               	return	
  2005  001862  0EAD               	movlw	173
  2006  001864  6E01               	movwf	new_px_char@a,c
  2007  001866  0E2D               	movlw	45
  2008  001868  6E02               	movwf	new_px_char@a+1,c
  2009  00186A  0E78               	movlw	120
  2010  00186C  6E03               	movwf	new_px_char@a+2,c
  2011  00186E  0E00               	movlw	0
  2012  001870  6E04               	movwf	new_px_char@a+3,c
  2013  001872  0E00               	movlw	0
  2014  001874  6E05               	movwf	new_px_char@b,c
  2015  001876  0EB8               	movlw	184
  2016  001878  6E06               	movwf	new_px_char@b+1,c
  2017  00187A  0E18               	movlw	24
  2018  00187C  6E07               	movwf	new_px_char@b+2,c
  2019  00187E  0E73               	movlw	115
  2020  001880  6E08               	movwf	new_px_char@b+3,c
  2021  001882  EC99  F019         	call	_new_px_char	;wreg free
  2022  001886  CFE9 FFD9          	movff	fsr0l,fsr2l
  2023  00188A  CFEA FFDA          	movff	fsr0h,fsr2h
  2024  00188E  EE00  F011         	lfsr	0,?_px_map
  2025  001892  0E07               	movlw	7
  2026  001894                     u1911:
  2027  001894  CFDB FFEB          	movff	plusw2,plusw0
  2028  001898  06E8               	decf	wreg,f,c
  2029  00189A  E2FC               	bc	u1911
  2030  00189C  0012               	return	
  2031  00189E  0E8F               	movlw	143
  2032  0018A0  6E01               	movwf	new_px_char@a,c
  2033  0018A2  0E31               	movlw	49
  2034  0018A4  6E02               	movwf	new_px_char@a+1,c
  2035  0018A6  0E02               	movlw	2
  2036  0018A8  6E03               	movwf	new_px_char@a+2,c
  2037  0018AA  0E00               	movlw	0
  2038  0018AC  6E04               	movwf	new_px_char@a+3,c
  2039  0018AE  0E80               	movlw	128
  2040  0018B0  6E05               	movwf	new_px_char@b,c
  2041  0018B2  0EA8               	movlw	168
  2042  0018B4  6E06               	movwf	new_px_char@b+1,c
  2043  0018B6  0E18               	movlw	24
  2044  0018B8  6E07               	movwf	new_px_char@b+2,c
  2045  0018BA  0EE3               	movlw	227
  2046  0018BC  6E08               	movwf	new_px_char@b+3,c
  2047  0018BE  EC99  F019         	call	_new_px_char	;wreg free
  2048  0018C2  CFE9 FFD9          	movff	fsr0l,fsr2l
  2049  0018C6  CFEA FFDA          	movff	fsr0h,fsr2h
  2050  0018CA  EE00  F011         	lfsr	0,?_px_map
  2051  0018CE  0E07               	movlw	7
  2052  0018D0                     u1921:
  2053  0018D0  CFDB FFEB          	movff	plusw2,plusw0
  2054  0018D4  06E8               	decf	wreg,f,c
  2055  0018D6  E2FC               	bc	u1921
  2056  0018D8  0012               	return	
  2057  0018DA  0E94               	movlw	148
  2058  0018DC  6E01               	movwf	new_px_char@a,c
  2059  0018DE  0EF2               	movlw	242
  2060  0018E0  6E02               	movwf	new_px_char@a+1,c
  2061  0018E2  0E01               	movlw	1
  2062  0018E4  6E03               	movwf	new_px_char@a+2,c
  2063  0018E6  0E00               	movlw	0
  2064  0018E8  6E04               	movwf	new_px_char@a+3,c
  2065  0018EA  0EE0               	movlw	224
  2066  0018EC  6E05               	movwf	new_px_char@b,c
  2067  0018EE  0E49               	movlw	73
  2068  0018F0  6E06               	movwf	new_px_char@b+1,c
  2069  0018F2  0E29               	movlw	41
  2070  0018F4  6E07               	movwf	new_px_char@b+2,c
  2071  0018F6  0E9D               	movlw	157
  2072  0018F8  6E08               	movwf	new_px_char@b+3,c
  2073  0018FA  EC99  F019         	call	_new_px_char	;wreg free
  2074  0018FE  CFE9 FFD9          	movff	fsr0l,fsr2l
  2075  001902  CFEA FFDA          	movff	fsr0h,fsr2h
  2076  001906  EE00  F011         	lfsr	0,?_px_map
  2077  00190A  0E07               	movlw	7
  2078  00190C                     u1931:
  2079  00190C  CFDB FFEB          	movff	plusw2,plusw0
  2080  001910  06E8               	decf	wreg,f,c
  2081  001912  E2FC               	bc	u1931
  2082  001914  0012               	return	
  2083  001916  0E08               	movlw	8
  2084  001918  6E01               	movwf	new_px_char@a,c
  2085  00191A  0ED1               	movlw	209
  2086  00191C  6E02               	movwf	new_px_char@a+1,c
  2087  00191E  0E01               	movlw	1
  2088  001920  6E03               	movwf	new_px_char@a+2,c
  2089  001922  0E00               	movlw	0
  2090  001924  6E04               	movwf	new_px_char@a+3,c
  2091  001926  0EC0               	movlw	192
  2092  001928  6E05               	movwf	new_px_char@b,c
  2093  00192A  0EC5               	movlw	197
  2094  00192C  6E06               	movwf	new_px_char@b+1,c
  2095  00192E  0E10               	movlw	16
  2096  001930  6E07               	movwf	new_px_char@b+2,c
  2097  001932  0E42               	movlw	66
  2098  001934  6E08               	movwf	new_px_char@b+3,c
  2099  001936  EC99  F019         	call	_new_px_char	;wreg free
  2100  00193A  CFE9 FFD9          	movff	fsr0l,fsr2l
  2101  00193E  CFEA FFDA          	movff	fsr0h,fsr2h
  2102  001942  EE00  F011         	lfsr	0,?_px_map
  2103  001946  0E07               	movlw	7
  2104  001948                     u1941:
  2105  001948  CFDB FFEB          	movff	plusw2,plusw0
  2106  00194C  06E8               	decf	wreg,f,c
  2107  00194E  E2FC               	bc	u1941
  2108  001950  0012               	return	
  2109  001952  0E94               	movlw	148
  2110  001954  6E01               	movwf	new_px_char@a,c
  2111  001956  0EF2               	movlw	242
  2112  001958  6E02               	movwf	new_px_char@a+1,c
  2113  00195A  0E01               	movlw	1
  2114  00195C  6E03               	movwf	new_px_char@a+2,c
  2115  00195E  0E00               	movlw	0
  2116  001960  6E04               	movwf	new_px_char@a+3,c
  2117  001962  0EE0               	movlw	224
  2118  001964  6E05               	movwf	new_px_char@b,c
  2119  001966  0E49               	movlw	73
  2120  001968  6E06               	movwf	new_px_char@b+1,c
  2121  00196A  0E29               	movlw	41
  2122  00196C  6E07               	movwf	new_px_char@b+2,c
  2123  00196E  0EA5               	movlw	165
  2124  001970  6E08               	movwf	new_px_char@b+3,c
  2125  001972  EC99  F019         	call	_new_px_char	;wreg free
  2126  001976  CFE9 FFD9          	movff	fsr0l,fsr2l
  2127  00197A  CFEA FFDA          	movff	fsr0h,fsr2h
  2128  00197E  EE00  F011         	lfsr	0,?_px_map
  2129  001982  0E07               	movlw	7
  2130  001984                     u1951:
  2131  001984  CFDB FFEB          	movff	plusw2,plusw0
  2132  001988  06E8               	decf	wreg,f,c
  2133  00198A  E2FC               	bc	u1951
  2134  00198C  0012               	return	
  2135  00198E  0E08               	movlw	8
  2136  001990  6E01               	movwf	new_px_char@a,c
  2137  001992  0EE1               	movlw	225
  2138  001994  6E02               	movwf	new_px_char@a+1,c
  2139  001996  0E03               	movlw	3
  2140  001998  6E03               	movwf	new_px_char@a+2,c
  2141  00199A  0E00               	movlw	0
  2142  00199C  6E04               	movwf	new_px_char@a+3,c
  2143  00199E  0EE0               	movlw	224
  2144  0019A0  6E05               	movwf	new_px_char@b,c
  2145  0019A2  0E87               	movlw	135
  2146  0019A4  6E06               	movwf	new_px_char@b+1,c
  2147  0019A6  0E10               	movlw	16
  2148  0019A8  6E07               	movwf	new_px_char@b+2,c
  2149  0019AA  0E5E               	movlw	94
  2150  0019AC  6E08               	movwf	new_px_char@b+3,c
  2151  0019AE  EC99  F019         	call	_new_px_char	;wreg free
  2152  0019B2  CFE9 FFD9          	movff	fsr0l,fsr2l
  2153  0019B6  CFEA FFDA          	movff	fsr0h,fsr2h
  2154  0019BA  EE00  F011         	lfsr	0,?_px_map
  2155  0019BE  0E07               	movlw	7
  2156  0019C0                     u1961:
  2157  0019C0  CFDB FFEB          	movff	plusw2,plusw0
  2158  0019C4  06E8               	decf	wreg,f,c
  2159  0019C6  E2FC               	bc	u1961
  2160  0019C8  0012               	return	
  2161  0019CA  0E08               	movlw	8
  2162  0019CC  6E01               	movwf	new_px_char@a,c
  2163  0019CE  0E21               	movlw	33
  2164  0019D0  6E02               	movwf	new_px_char@a+1,c
  2165  0019D2  0E00               	movlw	0
  2166  0019D4  6E03               	movwf	new_px_char@a+2,c
  2167  0019D6  0E00               	movlw	0
  2168  0019D8  6E04               	movwf	new_px_char@a+3,c
  2169  0019DA  0EE0               	movlw	224
  2170  0019DC  6E05               	movwf	new_px_char@b,c
  2171  0019DE  0E87               	movlw	135
  2172  0019E0  6E06               	movwf	new_px_char@b+1,c
  2173  0019E2  0E10               	movlw	16
  2174  0019E4  6E07               	movwf	new_px_char@b+2,c
  2175  0019E6  0E5E               	movlw	94
  2176  0019E8  6E08               	movwf	new_px_char@b+3,c
  2177  0019EA  EC99  F019         	call	_new_px_char	;wreg free
  2178  0019EE  CFE9 FFD9          	movff	fsr0l,fsr2l
  2179  0019F2  CFEA FFDA          	movff	fsr0h,fsr2h
  2180  0019F6  EE00  F011         	lfsr	0,?_px_map
  2181  0019FA  0E07               	movlw	7
  2182  0019FC                     u1971:
  2183  0019FC  CFDB FFEB          	movff	plusw2,plusw0
  2184  001A00  06E8               	decf	wreg,f,c
  2185  001A02  E2FC               	bc	u1971
  2186  001A04  0012               	return	
  2187  001A06  0E8E               	movlw	142
  2188  001A08  6E01               	movwf	new_px_char@a,c
  2189  001A0A  0ED1               	movlw	209
  2190  001A0C  6E02               	movwf	new_px_char@a+1,c
  2191  001A0E  0E01               	movlw	1
  2192  001A10  6E03               	movwf	new_px_char@a+2,c
  2193  001A12  0E00               	movlw	0
  2194  001A14  6E04               	movwf	new_px_char@a+3,c
  2195  001A16  0EC0               	movlw	192
  2196  001A18  6E05               	movwf	new_px_char@b,c
  2197  001A1A  0EC5               	movlw	197
  2198  001A1C  6E06               	movwf	new_px_char@b+1,c
  2199  001A1E  0E10               	movlw	16
  2200  001A20  6E07               	movwf	new_px_char@b+2,c
  2201  001A22  0E42               	movlw	66
  2202  001A24  6E08               	movwf	new_px_char@b+3,c
  2203  001A26  EC99  F019         	call	_new_px_char	;wreg free
  2204  001A2A  CFE9 FFD9          	movff	fsr0l,fsr2l
  2205  001A2E  CFEA FFDA          	movff	fsr0h,fsr2h
  2206  001A32  EE00  F011         	lfsr	0,?_px_map
  2207  001A36  0E07               	movlw	7
  2208  001A38                     u1981:
  2209  001A38  CFDB FFEB          	movff	plusw2,plusw0
  2210  001A3C  06E8               	decf	wreg,f,c
  2211  001A3E  E2FC               	bc	u1981
  2212  001A40  0012               	return	
  2213  001A42  0E8C               	movlw	140
  2214  001A44  6E01               	movwf	new_px_char@a,c
  2215  001A46  0E31               	movlw	49
  2216  001A48  6E02               	movwf	new_px_char@a+1,c
  2217  001A4A  0E02               	movlw	2
  2218  001A4C  6E03               	movwf	new_px_char@a+2,c
  2219  001A4E  0E00               	movlw	0
  2220  001A50  6E04               	movwf	new_px_char@a+3,c
  2221  001A52  0E20               	movlw	32
  2222  001A54  6E05               	movwf	new_px_char@b,c
  2223  001A56  0EC6               	movlw	198
  2224  001A58  6E06               	movwf	new_px_char@b+1,c
  2225  001A5A  0E18               	movlw	24
  2226  001A5C  6E07               	movwf	new_px_char@b+2,c
  2227  001A5E  0E7F               	movlw	127
  2228  001A60  6E08               	movwf	new_px_char@b+3,c
  2229  001A62  EC99  F019         	call	_new_px_char	;wreg free
  2230  001A66  CFE9 FFD9          	movff	fsr0l,fsr2l
  2231  001A6A  CFEA FFDA          	movff	fsr0h,fsr2h
  2232  001A6E  EE00  F011         	lfsr	0,?_px_map
  2233  001A72  0E07               	movlw	7
  2234  001A74                     u1991:
  2235  001A74  CFDB FFEB          	movff	plusw2,plusw0
  2236  001A78  06E8               	decf	wreg,f,c
  2237  001A7A  E2FC               	bc	u1991
  2238  001A7C  0012               	return	
  2239  001A7E  0E21               	movlw	33
  2240  001A80  6E01               	movwf	new_px_char@a,c
  2241  001A82  0EC4               	movlw	196
  2242  001A84  6E02               	movwf	new_px_char@a+1,c
  2243  001A86  0E01               	movlw	1
  2244  001A88  6E03               	movwf	new_px_char@a+2,c
  2245  001A8A  0E00               	movlw	0
  2246  001A8C  6E04               	movwf	new_px_char@a+3,c
  2247  001A8E  0EC0               	movlw	192
  2248  001A90  6E05               	movwf	new_px_char@b,c
  2249  001A92  0E11               	movlw	17
  2250  001A94  6E06               	movwf	new_px_char@b+1,c
  2251  001A96  0E42               	movlw	66
  2252  001A98  6E07               	movwf	new_px_char@b+2,c
  2253  001A9A  0E08               	movlw	8
  2254  001A9C  6E08               	movwf	new_px_char@b+3,c
  2255  001A9E  EC99  F019         	call	_new_px_char	;wreg free
  2256  001AA2  CFE9 FFD9          	movff	fsr0l,fsr2l
  2257  001AA6  CFEA FFDA          	movff	fsr0h,fsr2h
  2258  001AAA  EE00  F011         	lfsr	0,?_px_map
  2259  001AAE  0E07               	movlw	7
  2260  001AB0                     u2001:
  2261  001AB0  CFDB FFEB          	movff	plusw2,plusw0
  2262  001AB4  06E8               	decf	wreg,f,c
  2263  001AB6  E2FC               	bc	u2001
  2264  001AB8  0012               	return	
  2265  001ABA  0E42               	movlw	66
  2266  001ABC  6E01               	movwf	new_px_char@a,c
  2267  001ABE  0EC9               	movlw	201
  2268  001AC0  6E02               	movwf	new_px_char@a+1,c
  2269  001AC2  0E00               	movlw	0
  2270  001AC4  6E03               	movwf	new_px_char@a+2,c
  2271  001AC6  0E00               	movlw	0
  2272  001AC8  6E04               	movwf	new_px_char@a+3,c
  2273  001ACA  0E80               	movlw	128
  2274  001ACC  6E05               	movwf	new_px_char@b,c
  2275  001ACE  0E23               	movlw	35
  2276  001AD0  6E06               	movwf	new_px_char@b+1,c
  2277  001AD2  0E84               	movlw	132
  2278  001AD4  6E07               	movwf	new_px_char@b+2,c
  2279  001AD6  0E10               	movlw	16
  2280  001AD8  6E08               	movwf	new_px_char@b+3,c
  2281  001ADA  EC99  F019         	call	_new_px_char	;wreg free
  2282  001ADE  CFE9 FFD9          	movff	fsr0l,fsr2l
  2283  001AE2  CFEA FFDA          	movff	fsr0h,fsr2h
  2284  001AE6  EE00  F011         	lfsr	0,?_px_map
  2285  001AEA  0E07               	movlw	7
  2286  001AEC                     u2011:
  2287  001AEC  CFDB FFEB          	movff	plusw2,plusw0
  2288  001AF0  06E8               	decf	wreg,f,c
  2289  001AF2  E2FC               	bc	u2011
  2290  001AF4  0012               	return	
  2291  001AF6  0E49               	movlw	73
  2292  001AF8  6E01               	movwf	new_px_char@a,c
  2293  001AFA  0E31               	movlw	49
  2294  001AFC  6E02               	movwf	new_px_char@a+1,c
  2295  001AFE  0E02               	movlw	2
  2296  001B00  6E03               	movwf	new_px_char@a+2,c
  2297  001B02  0E00               	movlw	0
  2298  001B04  6E04               	movwf	new_px_char@a+3,c
  2299  001B06  0E20               	movlw	32
  2300  001B08  6E05               	movwf	new_px_char@b,c
  2301  001B0A  0EC6               	movlw	198
  2302  001B0C  6E06               	movwf	new_px_char@b+1,c
  2303  001B0E  0E54               	movlw	84
  2304  001B10  6E07               	movwf	new_px_char@b+2,c
  2305  001B12  0E46               	movlw	70
  2306  001B14  6E08               	movwf	new_px_char@b+3,c
  2307  001B16  EC99  F019         	call	_new_px_char	;wreg free
  2308  001B1A  CFE9 FFD9          	movff	fsr0l,fsr2l
  2309  001B1E  CFEA FFDA          	movff	fsr0h,fsr2h
  2310  001B22  EE00  F011         	lfsr	0,?_px_map
  2311  001B26  0E07               	movlw	7
  2312  001B28                     u2021:
  2313  001B28  CFDB FFEB          	movff	plusw2,plusw0
  2314  001B2C  06E8               	decf	wreg,f,c
  2315  001B2E  E2FC               	bc	u2021
  2316  001B30  0012               	return	
  2317  001B32  0E08               	movlw	8
  2318  001B34  6E01               	movwf	new_px_char@a,c
  2319  001B36  0EE1               	movlw	225
  2320  001B38  6E02               	movwf	new_px_char@a+1,c
  2321  001B3A  0E03               	movlw	3
  2322  001B3C  6E03               	movwf	new_px_char@a+2,c
  2323  001B3E  0E00               	movlw	0
  2324  001B40  6E04               	movwf	new_px_char@a+3,c
  2325  001B42  0E20               	movlw	32
  2326  001B44  6E05               	movwf	new_px_char@b,c
  2327  001B46  0E84               	movlw	132
  2328  001B48  6E06               	movwf	new_px_char@b+1,c
  2329  001B4A  0E10               	movlw	16
  2330  001B4C  6E07               	movwf	new_px_char@b+2,c
  2331  001B4E  0E42               	movlw	66
  2332  001B50  6E08               	movwf	new_px_char@b+3,c
  2333  001B52  EC99  F019         	call	_new_px_char	;wreg free
  2334  001B56  CFE9 FFD9          	movff	fsr0l,fsr2l
  2335  001B5A  CFEA FFDA          	movff	fsr0h,fsr2h
  2336  001B5E  EE00  F011         	lfsr	0,?_px_map
  2337  001B62  0E07               	movlw	7
  2338  001B64                     u2031:
  2339  001B64  CFDB FFEB          	movff	plusw2,plusw0
  2340  001B68  06E8               	decf	wreg,f,c
  2341  001B6A  E2FC               	bc	u2031
  2342  001B6C  0012               	return	
  2343  001B6E  0E8C               	movlw	140
  2344  001B70  6E01               	movwf	new_px_char@a,c
  2345  001B72  0E31               	movlw	49
  2346  001B74  6E02               	movwf	new_px_char@a+1,c
  2347  001B76  0E02               	movlw	2
  2348  001B78  6E03               	movwf	new_px_char@a+2,c
  2349  001B7A  0E00               	movlw	0
  2350  001B7C  6E04               	movwf	new_px_char@a+3,c
  2351  001B7E  0E20               	movlw	32
  2352  001B80  6E05               	movwf	new_px_char@b,c
  2353  001B82  0EC6               	movlw	198
  2354  001B84  6E06               	movwf	new_px_char@b+1,c
  2355  001B86  0E5D               	movlw	93
  2356  001B88  6E07               	movwf	new_px_char@b+2,c
  2357  001B8A  0E6B               	movlw	107
  2358  001B8C  6E08               	movwf	new_px_char@b+3,c
  2359  001B8E  EC99  F019         	call	_new_px_char	;wreg free
  2360  001B92  CFE9 FFD9          	movff	fsr0l,fsr2l
  2361  001B96  CFEA FFDA          	movff	fsr0h,fsr2h
  2362  001B9A  EE00  F011         	lfsr	0,?_px_map
  2363  001B9E  0E07               	movlw	7
  2364  001BA0                     u2041:
  2365  001BA0  CFDB FFEB          	movff	plusw2,plusw0
  2366  001BA4  06E8               	decf	wreg,f,c
  2367  001BA6  E2FC               	bc	u2041
  2368  001BA8  0012               	return	
  2369  001BAA  0ECE               	movlw	206
  2370  001BAC  6E01               	movwf	new_px_char@a,c
  2371  001BAE  0E31               	movlw	49
  2372  001BB0  6E02               	movwf	new_px_char@a+1,c
  2373  001BB2  0E02               	movlw	2
  2374  001BB4  6E03               	movwf	new_px_char@a+2,c
  2375  001BB6  0E00               	movlw	0
  2376  001BB8  6E04               	movwf	new_px_char@a+3,c
  2377  001BBA  0E20               	movlw	32
  2378  001BBC  6E05               	movwf	new_px_char@b,c
  2379  001BBE  0ECE               	movlw	206
  2380  001BC0  6E06               	movwf	new_px_char@b+1,c
  2381  001BC2  0E59               	movlw	89
  2382  001BC4  6E07               	movwf	new_px_char@b+2,c
  2383  001BC6  0E6B               	movlw	107
  2384  001BC8  6E08               	movwf	new_px_char@b+3,c
  2385  001BCA  EC99  F019         	call	_new_px_char	;wreg free
  2386  001BCE  CFE9 FFD9          	movff	fsr0l,fsr2l
  2387  001BD2  CFEA FFDA          	movff	fsr0h,fsr2h
  2388  001BD6  EE00  F011         	lfsr	0,?_px_map
  2389  001BDA  0E07               	movlw	7
  2390  001BDC                     u2051:
  2391  001BDC  CFDB FFEB          	movff	plusw2,plusw0
  2392  001BE0  06E8               	decf	wreg,f,c
  2393  001BE2  E2FC               	bc	u2051
  2394  001BE4  0012               	return	
  2395  001BE6  0E8C               	movlw	140
  2396  001BE8  6E01               	movwf	new_px_char@a,c
  2397  001BEA  0ED1               	movlw	209
  2398  001BEC  6E02               	movwf	new_px_char@a+1,c
  2399  001BEE  0E01               	movlw	1
  2400  001BF0  6E03               	movwf	new_px_char@a+2,c
  2401  001BF2  0E00               	movlw	0
  2402  001BF4  6E04               	movwf	new_px_char@a+3,c
  2403  001BF6  0EC0               	movlw	192
  2404  001BF8  6E05               	movwf	new_px_char@b,c
  2405  001BFA  0EC5               	movlw	197
  2406  001BFC  6E06               	movwf	new_px_char@b+1,c
  2407  001BFE  0E18               	movlw	24
  2408  001C00  6E07               	movwf	new_px_char@b+2,c
  2409  001C02  0E63               	movlw	99
  2410  001C04  6E08               	movwf	new_px_char@b+3,c
  2411  001C06  EC99  F019         	call	_new_px_char	;wreg free
  2412  001C0A  CFE9 FFD9          	movff	fsr0l,fsr2l
  2413  001C0E  CFEA FFDA          	movff	fsr0h,fsr2h
  2414  001C12  EE00  F011         	lfsr	0,?_px_map
  2415  001C16  0E07               	movlw	7
  2416  001C18                     u2061:
  2417  001C18  CFDB FFEB          	movff	plusw2,plusw0
  2418  001C1C  06E8               	decf	wreg,f,c
  2419  001C1E  E2FC               	bc	u2061
  2420  001C20  0012               	return	
  2421  001C22  0E08               	movlw	8
  2422  001C24  6E01               	movwf	new_px_char@a,c
  2423  001C26  0E21               	movlw	33
  2424  001C28  6E02               	movwf	new_px_char@a+1,c
  2425  001C2A  0E00               	movlw	0
  2426  001C2C  6E03               	movwf	new_px_char@a+2,c
  2427  001C2E  0E00               	movlw	0
  2428  001C30  6E04               	movwf	new_px_char@a+3,c
  2429  001C32  0EE0               	movlw	224
  2430  001C34  6E05               	movwf	new_px_char@b,c
  2431  001C36  0EC5               	movlw	197
  2432  001C38  6E06               	movwf	new_px_char@b+1,c
  2433  001C3A  0E18               	movlw	24
  2434  001C3C  6E07               	movwf	new_px_char@b+2,c
  2435  001C3E  0E5F               	movlw	95
  2436  001C40  6E08               	movwf	new_px_char@b+3,c
  2437  001C42  EC99  F019         	call	_new_px_char	;wreg free
  2438  001C46  CFE9 FFD9          	movff	fsr0l,fsr2l
  2439  001C4A  CFEA FFDA          	movff	fsr0h,fsr2h
  2440  001C4E  EE00  F011         	lfsr	0,?_px_map
  2441  001C52  0E07               	movlw	7
  2442  001C54                     u2071:
  2443  001C54  CFDB FFEB          	movff	plusw2,plusw0
  2444  001C58  06E8               	decf	wreg,f,c
  2445  001C5A  E2FC               	bc	u2071
  2446  001C5C  0012               	return	
  2447  001C5E  0E8C               	movlw	140
  2448  001C60  6E01               	movwf	new_px_char@a,c
  2449  001C62  0ED5               	movlw	213
  2450  001C64  6E02               	movwf	new_px_char@a+1,c
  2451  001C66  0E41               	movlw	65
  2452  001C68  6E03               	movwf	new_px_char@a+2,c
  2453  001C6A  0E00               	movlw	0
  2454  001C6C  6E04               	movwf	new_px_char@a+3,c
  2455  001C6E  0EC0               	movlw	192
  2456  001C70  6E05               	movwf	new_px_char@b,c
  2457  001C72  0EC5               	movlw	197
  2458  001C74  6E06               	movwf	new_px_char@b+1,c
  2459  001C76  0E18               	movlw	24
  2460  001C78  6E07               	movwf	new_px_char@b+2,c
  2461  001C7A  0E63               	movlw	99
  2462  001C7C  6E08               	movwf	new_px_char@b+3,c
  2463  001C7E  EC99  F019         	call	_new_px_char	;wreg free
  2464  001C82  CFE9 FFD9          	movff	fsr0l,fsr2l
  2465  001C86  CFEA FFDA          	movff	fsr0h,fsr2h
  2466  001C8A  EE00  F011         	lfsr	0,?_px_map
  2467  001C8E  0E07               	movlw	7
  2468  001C90                     u2081:
  2469  001C90  CFDB FFEB          	movff	plusw2,plusw0
  2470  001C94  06E8               	decf	wreg,f,c
  2471  001C96  E2FC               	bc	u2081
  2472  001C98  0012               	return	
  2473  001C9A  0E49               	movlw	73
  2474  001C9C  6E01               	movwf	new_px_char@a,c
  2475  001C9E  0E31               	movlw	49
  2476  001CA0  6E02               	movwf	new_px_char@a+1,c
  2477  001CA2  0E02               	movlw	2
  2478  001CA4  6E03               	movwf	new_px_char@a+2,c
  2479  001CA6  0E00               	movlw	0
  2480  001CA8  6E04               	movwf	new_px_char@a+3,c
  2481  001CAA  0EE0               	movlw	224
  2482  001CAC  6E05               	movwf	new_px_char@b,c
  2483  001CAE  0EC5               	movlw	197
  2484  001CB0  6E06               	movwf	new_px_char@b+1,c
  2485  001CB2  0E18               	movlw	24
  2486  001CB4  6E07               	movwf	new_px_char@b+2,c
  2487  001CB6  0E5F               	movlw	95
  2488  001CB8  6E08               	movwf	new_px_char@b+3,c
  2489  001CBA  EC99  F019         	call	_new_px_char	;wreg free
  2490  001CBE  CFE9 FFD9          	movff	fsr0l,fsr2l
  2491  001CC2  CFEA FFDA          	movff	fsr0h,fsr2h
  2492  001CC6  EE00  F011         	lfsr	0,?_px_map
  2493  001CCA  0E07               	movlw	7
  2494  001CCC                     u2091:
  2495  001CCC  CFDB FFEB          	movff	plusw2,plusw0
  2496  001CD0  06E8               	decf	wreg,f,c
  2497  001CD2  E2FC               	bc	u2091
  2498  001CD4  0012               	return	
  2499  001CD6  0E84               	movlw	132
  2500  001CD8  6E01               	movwf	new_px_char@a,c
  2501  001CDA  0ED1               	movlw	209
  2502  001CDC  6E02               	movwf	new_px_char@a+1,c
  2503  001CDE  0E01               	movlw	1
  2504  001CE0  6E03               	movwf	new_px_char@a+2,c
  2505  001CE2  0E00               	movlw	0
  2506  001CE4  6E04               	movwf	new_px_char@a+3,c
  2507  001CE6  0EC0               	movlw	192
  2508  001CE8  6E05               	movwf	new_px_char@b,c
  2509  001CEA  0EC5               	movlw	197
  2510  001CEC  6E06               	movwf	new_px_char@b+1,c
  2511  001CEE  0E10               	movlw	16
  2512  001CF0  6E07               	movwf	new_px_char@b+2,c
  2513  001CF2  0E1C               	movlw	28
  2514  001CF4  6E08               	movwf	new_px_char@b+3,c
  2515  001CF6  EC99  F019         	call	_new_px_char	;wreg free
  2516  001CFA  CFE9 FFD9          	movff	fsr0l,fsr2l
  2517  001CFE  CFEA FFDA          	movff	fsr0h,fsr2h
  2518  001D02  EE00  F011         	lfsr	0,?_px_map
  2519  001D06  0E07               	movlw	7
  2520  001D08                     u2101:
  2521  001D08  CFDB FFEB          	movff	plusw2,plusw0
  2522  001D0C  06E8               	decf	wreg,f,c
  2523  001D0E  E2FC               	bc	u2101
  2524  001D10  0012               	return	
  2525  001D12  0E21               	movlw	33
  2526  001D14  6E01               	movwf	new_px_char@a,c
  2527  001D16  0E84               	movlw	132
  2528  001D18  6E02               	movwf	new_px_char@a+1,c
  2529  001D1A  0E00               	movlw	0
  2530  001D1C  6E03               	movwf	new_px_char@a+2,c
  2531  001D1E  0E00               	movlw	0
  2532  001D20  6E04               	movwf	new_px_char@a+3,c
  2533  001D22  0EE0               	movlw	224
  2534  001D24  6E05               	movwf	new_px_char@b,c
  2535  001D26  0E13               	movlw	19
  2536  001D28  6E06               	movwf	new_px_char@b+1,c
  2537  001D2A  0E42               	movlw	66
  2538  001D2C  6E07               	movwf	new_px_char@b+2,c
  2539  001D2E  0E08               	movlw	8
  2540  001D30  6E08               	movwf	new_px_char@b+3,c
  2541  001D32  EC99  F019         	call	_new_px_char	;wreg free
  2542  001D36  CFE9 FFD9          	movff	fsr0l,fsr2l
  2543  001D3A  CFEA FFDA          	movff	fsr0h,fsr2h
  2544  001D3E  EE00  F011         	lfsr	0,?_px_map
  2545  001D42  0E07               	movlw	7
  2546  001D44                     u2111:
  2547  001D44  CFDB FFEB          	movff	plusw2,plusw0
  2548  001D48  06E8               	decf	wreg,f,c
  2549  001D4A  E2FC               	bc	u2111
  2550  001D4C  0012               	return	
  2551  001D4E  0E8C               	movlw	140
  2552  001D50  6E01               	movwf	new_px_char@a,c
  2553  001D52  0ED1               	movlw	209
  2554  001D54  6E02               	movwf	new_px_char@a+1,c
  2555  001D56  0E01               	movlw	1
  2556  001D58  6E03               	movwf	new_px_char@a+2,c
  2557  001D5A  0E00               	movlw	0
  2558  001D5C  6E04               	movwf	new_px_char@a+3,c
  2559  001D5E  0E20               	movlw	32
  2560  001D60  6E05               	movwf	new_px_char@b,c
  2561  001D62  0EC6               	movlw	198
  2562  001D64  6E06               	movwf	new_px_char@b+1,c
  2563  001D66  0E18               	movlw	24
  2564  001D68  6E07               	movwf	new_px_char@b+2,c
  2565  001D6A  0E63               	movlw	99
  2566  001D6C  6E08               	movwf	new_px_char@b+3,c
  2567  001D6E  EC99  F019         	call	_new_px_char	;wreg free
  2568  001D72  CFE9 FFD9          	movff	fsr0l,fsr2l
  2569  001D76  CFEA FFDA          	movff	fsr0h,fsr2h
  2570  001D7A  EE00  F011         	lfsr	0,?_px_map
  2571  001D7E  0E07               	movlw	7
  2572  001D80                     u2121:
  2573  001D80  CFDB FFEB          	movff	plusw2,plusw0
  2574  001D84  06E8               	decf	wreg,f,c
  2575  001D86  E2FC               	bc	u2121
  2576  001D88  0012               	return	
  2577  001D8A  0E52               	movlw	82
  2578  001D8C  6E01               	movwf	new_px_char@a,c
  2579  001D8E  0E84               	movlw	132
  2580  001D90  6E02               	movwf	new_px_char@a+1,c
  2581  001D92  0E00               	movlw	0
  2582  001D94  6E03               	movwf	new_px_char@a+2,c
  2583  001D96  0E00               	movlw	0
  2584  001D98  6E04               	movwf	new_px_char@a+3,c
  2585  001D9A  0E20               	movlw	32
  2586  001D9C  6E05               	movwf	new_px_char@b,c
  2587  001D9E  0EC6               	movlw	198
  2588  001DA0  6E06               	movwf	new_px_char@b+1,c
  2589  001DA2  0E18               	movlw	24
  2590  001DA4  6E07               	movwf	new_px_char@b+2,c
  2591  001DA6  0EA3               	movlw	163
  2592  001DA8  6E08               	movwf	new_px_char@b+3,c
  2593  001DAA  EC99  F019         	call	_new_px_char	;wreg free
  2594  001DAE  CFE9 FFD9          	movff	fsr0l,fsr2l
  2595  001DB2  CFEA FFDA          	movff	fsr0h,fsr2h
  2596  001DB6  EE00  F011         	lfsr	0,?_px_map
  2597  001DBA  0E07               	movlw	7
  2598  001DBC                     u2131:
  2599  001DBC  CFDB FFEB          	movff	plusw2,plusw0
  2600  001DC0  06E8               	decf	wreg,f,c
  2601  001DC2  E2FC               	bc	u2131
  2602  001DC4  0012               	return	
  2603  001DC6  0EAD               	movlw	173
  2604  001DC8  6E01               	movwf	new_px_char@a,c
  2605  001DCA  0E55               	movlw	85
  2606  001DCC  6E02               	movwf	new_px_char@a+1,c
  2607  001DCE  0E01               	movlw	1
  2608  001DD0  6E03               	movwf	new_px_char@a+2,c
  2609  001DD2  0E00               	movlw	0
  2610  001DD4  6E04               	movwf	new_px_char@a+3,c
  2611  001DD6  0E20               	movlw	32
  2612  001DD8  6E05               	movwf	new_px_char@b,c
  2613  001DDA  0EC6               	movlw	198
  2614  001DDC  6E06               	movwf	new_px_char@b+1,c
  2615  001DDE  0E18               	movlw	24
  2616  001DE0  6E07               	movwf	new_px_char@b+2,c
  2617  001DE2  0E6B               	movlw	107
  2618  001DE4  6E08               	movwf	new_px_char@b+3,c
  2619  001DE6  EC99  F019         	call	_new_px_char	;wreg free
  2620  001DEA  CFE9 FFD9          	movff	fsr0l,fsr2l
  2621  001DEE  CFEA FFDA          	movff	fsr0h,fsr2h
  2622  001DF2  EE00  F011         	lfsr	0,?_px_map
  2623  001DF6  0E07               	movlw	7
  2624  001DF8                     u2141:
  2625  001DF8  CFDB FFEB          	movff	plusw2,plusw0
  2626  001DFC  06E8               	decf	wreg,f,c
  2627  001DFE  E2FC               	bc	u2141
  2628  001E00  0012               	return	
  2629  001E02  0E52               	movlw	82
  2630  001E04  6E01               	movwf	new_px_char@a,c
  2631  001E06  0E31               	movlw	49
  2632  001E08  6E02               	movwf	new_px_char@a+1,c
  2633  001E0A  0E02               	movlw	2
  2634  001E0C  6E03               	movwf	new_px_char@a+2,c
  2635  001E0E  0E00               	movlw	0
  2636  001E10  6E04               	movwf	new_px_char@a+3,c
  2637  001E12  0E20               	movlw	32
  2638  001E14  6E05               	movwf	new_px_char@b,c
  2639  001E16  0E46               	movlw	70
  2640  001E18  6E06               	movwf	new_px_char@b+1,c
  2641  001E1A  0EA5               	movlw	165
  2642  001E1C  6E07               	movwf	new_px_char@b+2,c
  2643  001E1E  0E88               	movlw	136
  2644  001E20  6E08               	movwf	new_px_char@b+3,c
  2645  001E22  EC99  F019         	call	_new_px_char	;wreg free
  2646  001E26  CFE9 FFD9          	movff	fsr0l,fsr2l
  2647  001E2A  CFEA FFDA          	movff	fsr0h,fsr2h
  2648  001E2E  EE00  F011         	lfsr	0,?_px_map
  2649  001E32  0E07               	movlw	7
  2650  001E34                     u2151:
  2651  001E34  CFDB FFEB          	movff	plusw2,plusw0
  2652  001E38  06E8               	decf	wreg,f,c
  2653  001E3A  E2FC               	bc	u2151
  2654  001E3C  0012               	return	
  2655  001E3E  0E21               	movlw	33
  2656  001E40  6E01               	movwf	new_px_char@a,c
  2657  001E42  0E84               	movlw	132
  2658  001E44  6E02               	movwf	new_px_char@a+1,c
  2659  001E46  0E00               	movlw	0
  2660  001E48  6E03               	movwf	new_px_char@a+2,c
  2661  001E4A  0E00               	movlw	0
  2662  001E4C  6E04               	movwf	new_px_char@a+3,c
  2663  001E4E  0E20               	movlw	32
  2664  001E50  6E05               	movwf	new_px_char@b,c
  2665  001E52  0E46               	movlw	70
  2666  001E54  6E06               	movwf	new_px_char@b+1,c
  2667  001E56  0EA5               	movlw	165
  2668  001E58  6E07               	movwf	new_px_char@b+2,c
  2669  001E5A  0E08               	movlw	8
  2670  001E5C  6E08               	movwf	new_px_char@b+3,c
  2671  001E5E  EC99  F019         	call	_new_px_char	;wreg free
  2672  001E62  CFE9 FFD9          	movff	fsr0l,fsr2l
  2673  001E66  CFEA FFDA          	movff	fsr0h,fsr2h
  2674  001E6A  EE00  F011         	lfsr	0,?_px_map
  2675  001E6E  0E07               	movlw	7
  2676  001E70                     u2161:
  2677  001E70  CFDB FFEB          	movff	plusw2,plusw0
  2678  001E74  06E8               	decf	wreg,f,c
  2679  001E76  E2FC               	bc	u2161
  2680  001E78  0012               	return	
  2681  001E7A  0E10               	movlw	16
  2682  001E7C  6E01               	movwf	new_px_char@a,c
  2683  001E7E  0EE1               	movlw	225
  2684  001E80  6E02               	movwf	new_px_char@a+1,c
  2685  001E82  0E03               	movlw	3
  2686  001E84  6E03               	movwf	new_px_char@a+2,c
  2687  001E86  0E00               	movlw	0
  2688  001E88  6E04               	movwf	new_px_char@a+3,c
  2689  001E8A  0EE0               	movlw	224
  2690  001E8C  6E05               	movwf	new_px_char@b,c
  2691  001E8E  0E43               	movlw	67
  2692  001E90  6E06               	movwf	new_px_char@b+1,c
  2693  001E92  0E84               	movlw	132
  2694  001E94  6E07               	movwf	new_px_char@b+2,c
  2695  001E96  0E88               	movlw	136
  2696  001E98  6E08               	movwf	new_px_char@b+3,c
  2697  001E9A  EC99  F019         	call	_new_px_char	;wreg free
  2698  001E9E  CFE9 FFD9          	movff	fsr0l,fsr2l
  2699  001EA2  CFEA FFDA          	movff	fsr0h,fsr2h
  2700  001EA6  EE00  F011         	lfsr	0,?_px_map
  2701  001EAA  0E07               	movlw	7
  2702  001EAC                     u2171:
  2703  001EAC  CFDB FFEB          	movff	plusw2,plusw0
  2704  001EB0  06E8               	decf	wreg,f,c
  2705  001EB2  E2FC               	bc	u2171
  2706  001EB4  0012               	return	
  2707  001EB6  0E10               	movlw	16
  2708  001EB8  6E01               	movwf	new_px_char@a,c
  2709  001EBA  0E42               	movlw	66
  2710  001EBC  6E02               	movwf	new_px_char@a+1,c
  2711  001EBE  0E08               	movlw	8
  2712  001EC0  6E03               	movwf	new_px_char@a+2,c
  2713  001EC2  0E07               	movlw	7
  2714  001EC4  6E04               	movwf	new_px_char@a+3,c
  2715  001EC6  0EC0               	movlw	192
  2716  001EC8  6E05               	movwf	new_px_char@b,c
  2717  001ECA  0E09               	movlw	9
  2718  001ECC  6E06               	movwf	new_px_char@b+1,c
  2719  001ECE  0E21               	movlw	33
  2720  001ED0  6E07               	movwf	new_px_char@b+2,c
  2721  001ED2  0E84               	movlw	132
  2722  001ED4  6E08               	movwf	new_px_char@b+3,c
  2723  001ED6  EC99  F019         	call	_new_px_char	;wreg free
  2724  001EDA  CFE9 FFD9          	movff	fsr0l,fsr2l
  2725  001EDE  CFEA FFDA          	movff	fsr0h,fsr2h
  2726  001EE2  EE00  F011         	lfsr	0,?_px_map
  2727  001EE6  0E07               	movlw	7
  2728  001EE8                     u2181:
  2729  001EE8  CFDB FFEB          	movff	plusw2,plusw0
  2730  001EEC  06E8               	decf	wreg,f,c
  2731  001EEE  E2FC               	bc	u2181
  2732  001EF0  0012               	return	
  2733  001EF2  0E41               	movlw	65
  2734  001EF4  6E01               	movwf	new_px_char@a,c
  2735  001EF6  0E08               	movlw	8
  2736  001EF8  6E02               	movwf	new_px_char@a+1,c
  2737  001EFA  0E42               	movlw	66
  2738  001EFC  6E03               	movwf	new_px_char@a+2,c
  2739  001EFE  0E00               	movlw	0
  2740  001F00  6E04               	movwf	new_px_char@a+3,c
  2741  001F02  0E00               	movlw	0
  2742  001F04  6E05               	movwf	new_px_char@b,c
  2743  001F06  0E84               	movlw	132
  2744  001F08  6E06               	movwf	new_px_char@b+1,c
  2745  001F0A  0E20               	movlw	32
  2746  001F0C  6E07               	movwf	new_px_char@b+2,c
  2747  001F0E  0E04               	movlw	4
  2748  001F10  6E08               	movwf	new_px_char@b+3,c
  2749  001F12  EC99  F019         	call	_new_px_char	;wreg free
  2750  001F16  CFE9 FFD9          	movff	fsr0l,fsr2l
  2751  001F1A  CFEA FFDA          	movff	fsr0h,fsr2h
  2752  001F1E  EE00  F011         	lfsr	0,?_px_map
  2753  001F22  0E07               	movlw	7
  2754  001F24                     u2191:
  2755  001F24  CFDB FFEB          	movff	plusw2,plusw0
  2756  001F28  06E8               	decf	wreg,f,c
  2757  001F2A  E2FC               	bc	u2191
  2758  001F2C  0012               	return	
  2759  001F2E  0E42               	movlw	66
  2760  001F30  6E01               	movwf	new_px_char@a,c
  2761  001F32  0E08               	movlw	8
  2762  001F34  6E02               	movwf	new_px_char@a+1,c
  2763  001F36  0E21               	movlw	33
  2764  001F38  6E03               	movwf	new_px_char@a+2,c
  2765  001F3A  0E07               	movlw	7
  2766  001F3C  6E04               	movwf	new_px_char@a+3,c
  2767  001F3E  0EC0               	movlw	192
  2768  001F40  6E05               	movwf	new_px_char@b,c
  2769  001F42  0E21               	movlw	33
  2770  001F44  6E06               	movwf	new_px_char@b+1,c
  2771  001F46  0E84               	movlw	132
  2772  001F48  6E07               	movwf	new_px_char@b+2,c
  2773  001F4A  0E10               	movlw	16
  2774  001F4C  6E08               	movwf	new_px_char@b+3,c
  2775  001F4E  EC99  F019         	call	_new_px_char	;wreg free
  2776  001F52  CFE9 FFD9          	movff	fsr0l,fsr2l
  2777  001F56  CFEA FFDA          	movff	fsr0h,fsr2h
  2778  001F5A  EE00  F011         	lfsr	0,?_px_map
  2779  001F5E  0E07               	movlw	7
  2780  001F60                     u2201:
  2781  001F60  CFDB FFEB          	movff	plusw2,plusw0
  2782  001F64  06E8               	decf	wreg,f,c
  2783  001F66  E2FC               	bc	u2201
  2784  001F68  0012               	return	
  2785  001F6A  0E00               	movlw	0
  2786  001F6C  6E01               	movwf	new_px_char@a,c
  2787  001F6E  0E00               	movlw	0
  2788  001F70  6E02               	movwf	new_px_char@a+1,c
  2789  001F72  0E00               	movlw	0
  2790  001F74  6E03               	movwf	new_px_char@a+2,c
  2791  001F76  0E00               	movlw	0
  2792  001F78  6E04               	movwf	new_px_char@a+3,c
  2793  001F7A  0E00               	movlw	0
  2794  001F7C  6E05               	movwf	new_px_char@b,c
  2795  001F7E  0E10               	movlw	16
  2796  001F80  6E06               	movwf	new_px_char@b+1,c
  2797  001F82  0E15               	movlw	21
  2798  001F84  6E07               	movwf	new_px_char@b+2,c
  2799  001F86  0E01               	movlw	1
  2800  001F88  6E08               	movwf	new_px_char@b+3,c
  2801  001F8A  EC99  F019         	call	_new_px_char	;wreg free
  2802  001F8E  CFE9 FFD9          	movff	fsr0l,fsr2l
  2803  001F92  CFEA FFDA          	movff	fsr0h,fsr2h
  2804  001F96  EE00  F011         	lfsr	0,?_px_map
  2805  001F9A  0E07               	movlw	7
  2806  001F9C                     u2211:
  2807  001F9C  CFDB FFEB          	movff	plusw2,plusw0
  2808  001FA0  06E8               	decf	wreg,f,c
  2809  001FA2  E2FC               	bc	u2211
  2810  001FA4  0012               	return	
  2811  001FA6  0E00               	movlw	0
  2812  001FA8  6E01               	movwf	new_px_char@a,c
  2813  001FAA  0E00               	movlw	0
  2814  001FAC  6E02               	movwf	new_px_char@a+1,c
  2815  001FAE  0E80               	movlw	128
  2816  001FB0  6E03               	movwf	new_px_char@a+2,c
  2817  001FB2  0E0F               	movlw	15
  2818  001FB4  6E04               	movwf	new_px_char@a+3,c
  2819  001FB6  0E00               	movlw	0
  2820  001FB8  6E05               	movwf	new_px_char@b,c
  2821  001FBA  0E00               	movlw	0
  2822  001FBC  6E06               	movwf	new_px_char@b+1,c
  2823  001FBE  0E00               	movlw	0
  2824  001FC0  6E07               	movwf	new_px_char@b+2,c
  2825  001FC2  0E00               	movlw	0
  2826  001FC4  6E08               	movwf	new_px_char@b+3,c
  2827  001FC6  EC99  F019         	call	_new_px_char	;wreg free
  2828  001FCA  CFE9 FFD9          	movff	fsr0l,fsr2l
  2829  001FCE  CFEA FFDA          	movff	fsr0h,fsr2h
  2830  001FD2  EE00  F011         	lfsr	0,?_px_map
  2831  001FD6  0E07               	movlw	7
  2832  001FD8                     u2221:
  2833  001FD8  CFDB FFEB          	movff	plusw2,plusw0
  2834  001FDC  06E8               	decf	wreg,f,c
  2835  001FDE  E2FC               	bc	u2221
  2836  001FE0  0012               	return	
  2837  001FE2  0E00               	movlw	0
  2838  001FE4  6E01               	movwf	new_px_char@a,c
  2839  001FE6  0E00               	movlw	0
  2840  001FE8  6E02               	movwf	new_px_char@a+1,c
  2841  001FEA  0E00               	movlw	0
  2842  001FEC  6E03               	movwf	new_px_char@a+2,c
  2843  001FEE  0E00               	movlw	0
  2844  001FF0  6E04               	movwf	new_px_char@a+3,c
  2845  001FF2  0EC0               	movlw	192
  2846  001FF4  6E05               	movwf	new_px_char@b,c
  2847  001FF6  0E10               	movlw	16
  2848  001FF8  6E06               	movwf	new_px_char@b+1,c
  2849  001FFA  0E04               	movlw	4
  2850  001FFC  6E07               	movwf	new_px_char@b+2,c
  2851  001FFE  0E00               	movlw	0
  2852  002000  6E08               	movwf	new_px_char@b+3,c
  2853  002002  EC99  F019         	call	_new_px_char	;wreg free
  2854  002006  CFE9 FFD9          	movff	fsr0l,fsr2l
  2855  00200A  CFEA FFDA          	movff	fsr0h,fsr2h
  2856  00200E  EE00  F011         	lfsr	0,?_px_map
  2857  002012  0E07               	movlw	7
  2858  002014                     u2231:
  2859  002014  CFDB FFEB          	movff	plusw2,plusw0
  2860  002018  06E8               	decf	wreg,f,c
  2861  00201A  E2FC               	bc	u2231
  2862  00201C  0012               	return	
  2863  00201E  0E8F               	movlw	143
  2864  002020  6E01               	movwf	new_px_char@a,c
  2865  002022  0ED9               	movlw	217
  2866  002024  6E02               	movwf	new_px_char@a+1,c
  2867  002026  0E02               	movlw	2
  2868  002028  6E03               	movwf	new_px_char@a+2,c
  2869  00202A  0E00               	movlw	0
  2870  00202C  6E04               	movwf	new_px_char@a+3,c
  2871  00202E  0E00               	movlw	0
  2872  002030  6E05               	movwf	new_px_char@b,c
  2873  002032  0E00               	movlw	0
  2874  002034  6E06               	movwf	new_px_char@b+1,c
  2875  002036  0EE0               	movlw	224
  2876  002038  6E07               	movwf	new_px_char@b+2,c
  2877  00203A  0EA0               	movlw	160
  2878  00203C  6E08               	movwf	new_px_char@b+3,c
  2879  00203E  EC99  F019         	call	_new_px_char	;wreg free
  2880  002042  CFE9 FFD9          	movff	fsr0l,fsr2l
  2881  002046  CFEA FFDA          	movff	fsr0h,fsr2h
  2882  00204A  EE00  F011         	lfsr	0,?_px_map
  2883  00204E  0E07               	movlw	7
  2884  002050                     u2241:
  2885  002050  CFDB FFEB          	movff	plusw2,plusw0
  2886  002054  06E8               	decf	wreg,f,c
  2887  002056  E2FC               	bc	u2241
  2888  002058  0012               	return	
  2889  00205A  0E8C               	movlw	140
  2890  00205C  6E01               	movwf	new_px_char@a,c
  2891  00205E  0EF1               	movlw	241
  2892  002060  6E02               	movwf	new_px_char@a+1,c
  2893  002062  0E01               	movlw	1
  2894  002064  6E03               	movwf	new_px_char@a+2,c
  2895  002066  0E00               	movlw	0
  2896  002068  6E04               	movwf	new_px_char@a+3,c
  2897  00206A  0E20               	movlw	32
  2898  00206C  6E05               	movwf	new_px_char@b,c
  2899  00206E  0E84               	movlw	132
  2900  002070  6E06               	movwf	new_px_char@b+1,c
  2901  002072  0EF0               	movlw	240
  2902  002074  6E07               	movwf	new_px_char@b+2,c
  2903  002076  0E62               	movlw	98
  2904  002078  6E08               	movwf	new_px_char@b+3,c
  2905  00207A  EC99  F019         	call	_new_px_char	;wreg free
  2906  00207E  CFE9 FFD9          	movff	fsr0l,fsr2l
  2907  002082  CFEA FFDA          	movff	fsr0h,fsr2h
  2908  002086  EE00  F011         	lfsr	0,?_px_map
  2909  00208A  0E07               	movlw	7
  2910  00208C                     u2251:
  2911  00208C  CFDB FFEB          	movff	plusw2,plusw0
  2912  002090  06E8               	decf	wreg,f,c
  2913  002092  E2FC               	bc	u2251
  2914  002094  0012               	return	
  2915  002096  0E08               	movlw	8
  2916  002098  6E01               	movwf	new_px_char@a,c
  2917  00209A  0ED1               	movlw	209
  2918  00209C  6E02               	movwf	new_px_char@a+1,c
  2919  00209E  0E01               	movlw	1
  2920  0020A0  6E03               	movwf	new_px_char@a+2,c
  2921  0020A2  0E00               	movlw	0
  2922  0020A4  6E04               	movwf	new_px_char@a+3,c
  2923  0020A6  0E00               	movlw	0
  2924  0020A8  6E05               	movwf	new_px_char@b,c
  2925  0020AA  0E00               	movlw	0
  2926  0020AC  6E06               	movwf	new_px_char@b+1,c
  2927  0020AE  0EE0               	movlw	224
  2928  0020B0  6E07               	movwf	new_px_char@b+2,c
  2929  0020B2  0E62               	movlw	98
  2930  0020B4  6E08               	movwf	new_px_char@b+3,c
  2931  0020B6  EC99  F019         	call	_new_px_char	;wreg free
  2932  0020BA  CFE9 FFD9          	movff	fsr0l,fsr2l
  2933  0020BE  CFEA FFDA          	movff	fsr0h,fsr2h
  2934  0020C2  EE00  F011         	lfsr	0,?_px_map
  2935  0020C6  0E07               	movlw	7
  2936  0020C8                     u2261:
  2937  0020C8  CFDB FFEB          	movff	plusw2,plusw0
  2938  0020CC  06E8               	decf	wreg,f,c
  2939  0020CE  E2FC               	bc	u2261
  2940  0020D0  0012               	return	
  2941  0020D2  0E8C               	movlw	140
  2942  0020D4  6E01               	movwf	new_px_char@a,c
  2943  0020D6  0ED1               	movlw	209
  2944  0020D8  6E02               	movwf	new_px_char@a+1,c
  2945  0020DA  0E03               	movlw	3
  2946  0020DC  6E03               	movwf	new_px_char@a+2,c
  2947  0020DE  0E00               	movlw	0
  2948  0020E0  6E04               	movwf	new_px_char@a+3,c
  2949  0020E2  0E00               	movlw	0
  2950  0020E4  6E05               	movwf	new_px_char@b,c
  2951  0020E6  0E42               	movlw	66
  2952  0020E8  6E06               	movwf	new_px_char@b+1,c
  2953  0020EA  0EE8               	movlw	232
  2954  0020EC  6E07               	movwf	new_px_char@b+2,c
  2955  0020EE  0E63               	movlw	99
  2956  0020F0  6E08               	movwf	new_px_char@b+3,c
  2957  0020F2  EC99  F019         	call	_new_px_char	;wreg free
  2958  0020F6  CFE9 FFD9          	movff	fsr0l,fsr2l
  2959  0020FA  CFEA FFDA          	movff	fsr0h,fsr2h
  2960  0020FE  EE00  F011         	lfsr	0,?_px_map
  2961  002102  0E07               	movlw	7
  2962  002104                     u2271:
  2963  002104  CFDB FFEB          	movff	plusw2,plusw0
  2964  002108  06E8               	decf	wreg,f,c
  2965  00210A  E2FC               	bc	u2271
  2966  00210C  0012               	return	
  2967  00210E  0E0F               	movlw	15
  2968  002110  6E01               	movwf	new_px_char@a,c
  2969  002112  0ED1               	movlw	209
  2970  002114  6E02               	movwf	new_px_char@a+1,c
  2971  002116  0E01               	movlw	1
  2972  002118  6E03               	movwf	new_px_char@a+2,c
  2973  00211A  0E00               	movlw	0
  2974  00211C  6E04               	movwf	new_px_char@a+3,c
  2975  00211E  0E00               	movlw	0
  2976  002120  6E05               	movwf	new_px_char@b,c
  2977  002122  0E00               	movlw	0
  2978  002124  6E06               	movwf	new_px_char@b+1,c
  2979  002126  0EE0               	movlw	224
  2980  002128  6E07               	movwf	new_px_char@b+2,c
  2981  00212A  0EE2               	movlw	226
  2982  00212C  6E08               	movwf	new_px_char@b+3,c
  2983  00212E  EC99  F019         	call	_new_px_char	;wreg free
  2984  002132  CFE9 FFD9          	movff	fsr0l,fsr2l
  2985  002136  CFEA FFDA          	movff	fsr0h,fsr2h
  2986  00213A  EE00  F011         	lfsr	0,?_px_map
  2987  00213E  0E07               	movlw	7
  2988  002140                     u2281:
  2989  002140  CFDB FFEB          	movff	plusw2,plusw0
  2990  002144  06E8               	decf	wreg,f,c
  2991  002146  E2FC               	bc	u2281
  2992  002148  0012               	return	
  2993  00214A  0E10               	movlw	16
  2994  00214C  6E01               	movwf	new_px_char@a,c
  2995  00214E  0E42               	movlw	66
  2996  002150  6E02               	movwf	new_px_char@a+1,c
  2997  002152  0E00               	movlw	0
  2998  002154  6E03               	movwf	new_px_char@a+2,c
  2999  002156  0E00               	movlw	0
  3000  002158  6E04               	movwf	new_px_char@a+3,c
  3001  00215A  0E80               	movlw	128
  3002  00215C  6E05               	movwf	new_px_char@b,c
  3003  00215E  0E49               	movlw	73
  3004  002160  6E06               	movwf	new_px_char@b+1,c
  3005  002162  0E21               	movlw	33
  3006  002164  6E07               	movwf	new_px_char@b+2,c
  3007  002166  0E9E               	movlw	158
  3008  002168  6E08               	movwf	new_px_char@b+3,c
  3009  00216A  EC99  F019         	call	_new_px_char	;wreg free
  3010  00216E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3011  002172  CFEA FFDA          	movff	fsr0h,fsr2h
  3012  002176  EE00  F011         	lfsr	0,?_px_map
  3013  00217A  0E07               	movlw	7
  3014  00217C                     u2291:
  3015  00217C  CFDB FFEB          	movff	plusw2,plusw0
  3016  002180  06E8               	decf	wreg,f,c
  3017  002182  E2FC               	bc	u2291
  3018  002184  0012               	return	
  3019  002186  0E8C               	movlw	140
  3020  002188  6E01               	movwf	new_px_char@a,c
  3021  00218A  0E1E               	movlw	30
  3022  00218C  6E02               	movwf	new_px_char@a+1,c
  3023  00218E  0E46               	movlw	70
  3024  002190  6E03               	movwf	new_px_char@a+2,c
  3025  002192  0E07               	movlw	7
  3026  002194  6E04               	movwf	new_px_char@a+3,c
  3027  002196  0E00               	movlw	0
  3028  002198  6E05               	movwf	new_px_char@b,c
  3029  00219A  0E00               	movlw	0
  3030  00219C  6E06               	movwf	new_px_char@b+1,c
  3031  00219E  0EE0               	movlw	224
  3032  0021A0  6E07               	movwf	new_px_char@b+2,c
  3033  0021A2  0E62               	movlw	98
  3034  0021A4  6E08               	movwf	new_px_char@b+3,c
  3035  0021A6  EC99  F019         	call	_new_px_char	;wreg free
  3036  0021AA  CFE9 FFD9          	movff	fsr0l,fsr2l
  3037  0021AE  CFEA FFDA          	movff	fsr0h,fsr2h
  3038  0021B2  EE00  F011         	lfsr	0,?_px_map
  3039  0021B6  0E07               	movlw	7
  3040  0021B8                     u2301:
  3041  0021B8  CFDB FFEB          	movff	plusw2,plusw0
  3042  0021BC  06E8               	decf	wreg,f,c
  3043  0021BE  E2FC               	bc	u2301
  3044  0021C0  0012               	return	
  3045  0021C2  0E8C               	movlw	140
  3046  0021C4  6E01               	movwf	new_px_char@a,c
  3047  0021C6  0E31               	movlw	49
  3048  0021C8  6E02               	movwf	new_px_char@a+1,c
  3049  0021CA  0E02               	movlw	2
  3050  0021CC  6E03               	movwf	new_px_char@a+2,c
  3051  0021CE  0E00               	movlw	0
  3052  0021D0  6E04               	movwf	new_px_char@a+3,c
  3053  0021D2  0E20               	movlw	32
  3054  0021D4  6E05               	movwf	new_px_char@b,c
  3055  0021D6  0E84               	movlw	132
  3056  0021D8  6E06               	movwf	new_px_char@b+1,c
  3057  0021DA  0ED0               	movlw	208
  3058  0021DC  6E07               	movwf	new_px_char@b+2,c
  3059  0021DE  0E66               	movlw	102
  3060  0021E0  6E08               	movwf	new_px_char@b+3,c
  3061  0021E2  EC99  F019         	call	_new_px_char	;wreg free
  3062  0021E6  CFE9 FFD9          	movff	fsr0l,fsr2l
  3063  0021EA  CFEA FFDA          	movff	fsr0h,fsr2h
  3064  0021EE  EE00  F011         	lfsr	0,?_px_map
  3065  0021F2  0E07               	movlw	7
  3066  0021F4                     u2311:
  3067  0021F4  CFDB FFEB          	movff	plusw2,plusw0
  3068  0021F8  06E8               	decf	wreg,f,c
  3069  0021FA  E2FC               	bc	u2311
  3070  0021FC  0012               	return	
  3071  0021FE  0E21               	movlw	33
  3072  002200  6E01               	movwf	new_px_char@a,c
  3073  002202  0EC4               	movlw	196
  3074  002204  6E02               	movwf	new_px_char@a+1,c
  3075  002206  0E01               	movlw	1
  3076  002208  6E03               	movwf	new_px_char@a+2,c
  3077  00220A  0E00               	movlw	0
  3078  00220C  6E04               	movwf	new_px_char@a+3,c
  3079  00220E  0E00               	movlw	0
  3080  002210  6E05               	movwf	new_px_char@b,c
  3081  002212  0E10               	movlw	16
  3082  002214  6E06               	movwf	new_px_char@b+1,c
  3083  002216  0E60               	movlw	96
  3084  002218  6E07               	movwf	new_px_char@b+2,c
  3085  00221A  0E08               	movlw	8
  3086  00221C  6E08               	movwf	new_px_char@b+3,c
  3087  00221E  EC99  F019         	call	_new_px_char	;wreg free
  3088  002222  CFE9 FFD9          	movff	fsr0l,fsr2l
  3089  002226  CFEA FFDA          	movff	fsr0h,fsr2h
  3090  00222A  EE00  F011         	lfsr	0,?_px_map
  3091  00222E  0E07               	movlw	7
  3092  002230                     u2321:
  3093  002230  CFDB FFEB          	movff	plusw2,plusw0
  3094  002234  06E8               	decf	wreg,f,c
  3095  002236  E2FC               	bc	u2321
  3096  002238  0012               	return	
  3097  00223A  0E42               	movlw	66
  3098  00223C  6E01               	movwf	new_px_char@a,c
  3099  00223E  0E28               	movlw	40
  3100  002240  6E02               	movwf	new_px_char@a+1,c
  3101  002242  0E25               	movlw	37
  3102  002244  6E03               	movwf	new_px_char@a+2,c
  3103  002246  0E03               	movlw	3
  3104  002248  6E04               	movwf	new_px_char@a+3,c
  3105  00224A  0E00               	movlw	0
  3106  00224C  6E05               	movwf	new_px_char@b,c
  3107  00224E  0E01               	movlw	1
  3108  002250  6E06               	movwf	new_px_char@b+1,c
  3109  002252  0E86               	movlw	134
  3110  002254  6E07               	movwf	new_px_char@b+2,c
  3111  002256  0E10               	movlw	16
  3112  002258  6E08               	movwf	new_px_char@b+3,c
  3113  00225A  EC99  F019         	call	_new_px_char	;wreg free
  3114  00225E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3115  002262  CFEA FFDA          	movff	fsr0h,fsr2h
  3116  002266  EE00  F011         	lfsr	0,?_px_map
  3117  00226A  0E07               	movlw	7
  3118  00226C                     u2331:
  3119  00226C  CFDB FFEB          	movff	plusw2,plusw0
  3120  002270  06E8               	decf	wreg,f,c
  3121  002272  E2FC               	bc	u2331
  3122  002274  0012               	return	
  3123  002276  0E28               	movlw	40
  3124  002278  6E01               	movwf	new_px_char@a,c
  3125  00227A  0E29               	movlw	41
  3126  00227C  6E02               	movwf	new_px_char@a+1,c
  3127  00227E  0E02               	movlw	2
  3128  002280  6E03               	movwf	new_px_char@a+2,c
  3129  002282  0E00               	movlw	0
  3130  002284  6E04               	movwf	new_px_char@a+3,c
  3131  002286  0E20               	movlw	32
  3132  002288  6E05               	movwf	new_px_char@b,c
  3133  00228A  0E84               	movlw	132
  3134  00228C  6E06               	movwf	new_px_char@b+1,c
  3135  00228E  0E90               	movlw	144
  3136  002290  6E07               	movwf	new_px_char@b+2,c
  3137  002292  0ECA               	movlw	202
  3138  002294  6E08               	movwf	new_px_char@b+3,c
  3139  002296  EC99  F019         	call	_new_px_char	;wreg free
  3140  00229A  CFE9 FFD9          	movff	fsr0l,fsr2l
  3141  00229E  CFEA FFDA          	movff	fsr0h,fsr2h
  3142  0022A2  EE00  F011         	lfsr	0,?_px_map
  3143  0022A6  0E07               	movlw	7
  3144  0022A8                     u2341:
  3145  0022A8  CFDB FFEB          	movff	plusw2,plusw0
  3146  0022AC  06E8               	decf	wreg,f,c
  3147  0022AE  E2FC               	bc	u2341
  3148  0022B0  0012               	return	
  3149  0022B2  0E21               	movlw	33
  3150  0022B4  6E01               	movwf	new_px_char@a,c
  3151  0022B6  0EC4               	movlw	196
  3152  0022B8  6E02               	movwf	new_px_char@a+1,c
  3153  0022BA  0E01               	movlw	1
  3154  0022BC  6E03               	movwf	new_px_char@a+2,c
  3155  0022BE  0E00               	movlw	0
  3156  0022C0  6E04               	movwf	new_px_char@a+3,c
  3157  0022C2  0EC0               	movlw	192
  3158  0022C4  6E05               	movwf	new_px_char@b,c
  3159  0022C6  0E10               	movlw	16
  3160  0022C8  6E06               	movwf	new_px_char@b+1,c
  3161  0022CA  0E42               	movlw	66
  3162  0022CC  6E07               	movwf	new_px_char@b+2,c
  3163  0022CE  0E08               	movlw	8
  3164  0022D0  6E08               	movwf	new_px_char@b+3,c
  3165  0022D2  EC99  F019         	call	_new_px_char	;wreg free
  3166  0022D6  CFE9 FFD9          	movff	fsr0l,fsr2l
  3167  0022DA  CFEA FFDA          	movff	fsr0h,fsr2h
  3168  0022DE  EE00  F011         	lfsr	0,?_px_map
  3169  0022E2  0E07               	movlw	7
  3170  0022E4                     u2351:
  3171  0022E4  CFDB FFEB          	movff	plusw2,plusw0
  3172  0022E8  06E8               	decf	wreg,f,c
  3173  0022EA  E2FC               	bc	u2351
  3174  0022EC  0012               	return	
  3175  0022EE  0EAD               	movlw	173
  3176  0022F0  6E01               	movwf	new_px_char@a,c
  3177  0022F2  0E35               	movlw	53
  3178  0022F4  6E02               	movwf	new_px_char@a+1,c
  3179  0022F6  0E02               	movlw	2
  3180  0022F8  6E03               	movwf	new_px_char@a+2,c
  3181  0022FA  0E00               	movlw	0
  3182  0022FC  6E04               	movwf	new_px_char@a+3,c
  3183  0022FE  0E00               	movlw	0
  3184  002300  6E05               	movwf	new_px_char@b,c
  3185  002302  0E00               	movlw	0
  3186  002304  6E06               	movwf	new_px_char@b+1,c
  3187  002306  0EB0               	movlw	176
  3188  002308  6E07               	movwf	new_px_char@b+2,c
  3189  00230A  0E6A               	movlw	106
  3190  00230C  6E08               	movwf	new_px_char@b+3,c
  3191  00230E  EC99  F019         	call	_new_px_char	;wreg free
  3192  002312  CFE9 FFD9          	movff	fsr0l,fsr2l
  3193  002316  CFEA FFDA          	movff	fsr0h,fsr2h
  3194  00231A  EE00  F011         	lfsr	0,?_px_map
  3195  00231E  0E07               	movlw	7
  3196  002320                     u2361:
  3197  002320  CFDB FFEB          	movff	plusw2,plusw0
  3198  002324  06E8               	decf	wreg,f,c
  3199  002326  E2FC               	bc	u2361
  3200  002328  0012               	return	
  3201  00232A  0E8C               	movlw	140
  3202  00232C  6E01               	movwf	new_px_char@a,c
  3203  00232E  0E31               	movlw	49
  3204  002330  6E02               	movwf	new_px_char@a+1,c
  3205  002332  0E02               	movlw	2
  3206  002334  6E03               	movwf	new_px_char@a+2,c
  3207  002336  0E00               	movlw	0
  3208  002338  6E04               	movwf	new_px_char@a+3,c
  3209  00233A  0E00               	movlw	0
  3210  00233C  6E05               	movwf	new_px_char@b,c
  3211  00233E  0E00               	movlw	0
  3212  002340  6E06               	movwf	new_px_char@b+1,c
  3213  002342  0ED0               	movlw	208
  3214  002344  6E07               	movwf	new_px_char@b+2,c
  3215  002346  0E66               	movlw	102
  3216  002348  6E08               	movwf	new_px_char@b+3,c
  3217  00234A  EC99  F019         	call	_new_px_char	;wreg free
  3218  00234E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3219  002352  CFEA FFDA          	movff	fsr0h,fsr2h
  3220  002356  EE00  F011         	lfsr	0,?_px_map
  3221  00235A  0E07               	movlw	7
  3222  00235C                     u2371:
  3223  00235C  CFDB FFEB          	movff	plusw2,plusw0
  3224  002360  06E8               	decf	wreg,f,c
  3225  002362  E2FC               	bc	u2371
  3226  002364  0012               	return	
  3227  002366  0E8C               	movlw	140
  3228  002368  6E01               	movwf	new_px_char@a,c
  3229  00236A  0ED1               	movlw	209
  3230  00236C  6E02               	movwf	new_px_char@a+1,c
  3231  00236E  0E01               	movlw	1
  3232  002370  6E03               	movwf	new_px_char@a+2,c
  3233  002372  0E00               	movlw	0
  3234  002374  6E04               	movwf	new_px_char@a+3,c
  3235  002376  0E00               	movlw	0
  3236  002378  6E05               	movwf	new_px_char@b,c
  3237  00237A  0E00               	movlw	0
  3238  00237C  6E06               	movwf	new_px_char@b+1,c
  3239  00237E  0EE0               	movlw	224
  3240  002380  6E07               	movwf	new_px_char@b+2,c
  3241  002382  0E62               	movlw	98
  3242  002384  6E08               	movwf	new_px_char@b+3,c
  3243  002386  EC99  F019         	call	_new_px_char	;wreg free
  3244  00238A  CFE9 FFD9          	movff	fsr0l,fsr2l
  3245  00238E  CFEA FFDA          	movff	fsr0h,fsr2h
  3246  002392  EE00  F011         	lfsr	0,?_px_map
  3247  002396  0E07               	movlw	7
  3248  002398                     u2381:
  3249  002398  CFDB FFEB          	movff	plusw2,plusw0
  3250  00239C  06E8               	decf	wreg,f,c
  3251  00239E  E2FC               	bc	u2381
  3252  0023A0  0012               	return	
  3253  0023A2  0E8C               	movlw	140
  3254  0023A4  6E01               	movwf	new_px_char@a,c
  3255  0023A6  0E2F               	movlw	47
  3256  0023A8  6E02               	movwf	new_px_char@a+1,c
  3257  0023AA  0E84               	movlw	132
  3258  0023AC  6E03               	movwf	new_px_char@a+2,c
  3259  0023AE  0E00               	movlw	0
  3260  0023B0  6E04               	movwf	new_px_char@a+3,c
  3261  0023B2  0E00               	movlw	0
  3262  0023B4  6E05               	movwf	new_px_char@b,c
  3263  0023B6  0E00               	movlw	0
  3264  0023B8  6E06               	movwf	new_px_char@b+1,c
  3265  0023BA  0EF0               	movlw	240
  3266  0023BC  6E07               	movwf	new_px_char@b+2,c
  3267  0023BE  0E62               	movlw	98
  3268  0023C0  6E08               	movwf	new_px_char@b+3,c
  3269  0023C2  EC99  F019         	call	_new_px_char	;wreg free
  3270  0023C6  CFE9 FFD9          	movff	fsr0l,fsr2l
  3271  0023CA  CFEA FFDA          	movff	fsr0h,fsr2h
  3272  0023CE  EE00  F011         	lfsr	0,?_px_map
  3273  0023D2  0E07               	movlw	7
  3274  0023D4                     u2391:
  3275  0023D4  CFDB FFEB          	movff	plusw2,plusw0
  3276  0023D8  06E8               	decf	wreg,f,c
  3277  0023DA  E2FC               	bc	u2391
  3278  0023DC  0012               	return	
  3279  0023DE  0E8C               	movlw	140
  3280  0023E0  6E01               	movwf	new_px_char@a,c
  3281  0023E2  0E1E               	movlw	30
  3282  0023E4  6E02               	movwf	new_px_char@a+1,c
  3283  0023E6  0E42               	movlw	66
  3284  0023E8  6E03               	movwf	new_px_char@a+2,c
  3285  0023EA  0E08               	movlw	8
  3286  0023EC  6E04               	movwf	new_px_char@a+3,c
  3287  0023EE  0E00               	movlw	0
  3288  0023F0  6E05               	movwf	new_px_char@b,c
  3289  0023F2  0E00               	movlw	0
  3290  0023F4  6E06               	movwf	new_px_char@b+1,c
  3291  0023F6  0EE0               	movlw	224
  3292  0023F8  6E07               	movwf	new_px_char@b+2,c
  3293  0023FA  0E63               	movlw	99
  3294  0023FC  6E08               	movwf	new_px_char@b+3,c
  3295  0023FE  EC99  F019         	call	_new_px_char	;wreg free
  3296  002402  CFE9 FFD9          	movff	fsr0l,fsr2l
  3297  002406  CFEA FFDA          	movff	fsr0h,fsr2h
  3298  00240A  EE00  F011         	lfsr	0,?_px_map
  3299  00240E  0E07               	movlw	7
  3300  002410                     u2401:
  3301  002410  CFDB FFEB          	movff	plusw2,plusw0
  3302  002414  06E8               	decf	wreg,f,c
  3303  002416  E2FC               	bc	u2401
  3304  002418  0012               	return	
  3305  00241A  0E08               	movlw	8
  3306  00241C  6E01               	movwf	new_px_char@a,c
  3307  00241E  0E21               	movlw	33
  3308  002420  6E02               	movwf	new_px_char@a+1,c
  3309  002422  0E00               	movlw	0
  3310  002424  6E03               	movwf	new_px_char@a+2,c
  3311  002426  0E00               	movlw	0
  3312  002428  6E04               	movwf	new_px_char@a+3,c
  3313  00242A  0E00               	movlw	0
  3314  00242C  6E05               	movwf	new_px_char@b,c
  3315  00242E  0E00               	movlw	0
  3316  002430  6E06               	movwf	new_px_char@b+1,c
  3317  002432  0ED0               	movlw	208
  3318  002434  6E07               	movwf	new_px_char@b+2,c
  3319  002436  0E66               	movlw	102
  3320  002438  6E08               	movwf	new_px_char@b+3,c
  3321  00243A  EC99  F019         	call	_new_px_char	;wreg free
  3322  00243E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3323  002442  CFEA FFDA          	movff	fsr0h,fsr2h
  3324  002446  EE00  F011         	lfsr	0,?_px_map
  3325  00244A  0E07               	movlw	7
  3326  00244C                     u2411:
  3327  00244C  CFDB FFEB          	movff	plusw2,plusw0
  3328  002450  06E8               	decf	wreg,f,c
  3329  002452  E2FC               	bc	u2411
  3330  002454  0012               	return	
  3331  002456  0E41               	movlw	65
  3332  002458  6E01               	movwf	new_px_char@a,c
  3333  00245A  0ED1               	movlw	209
  3334  00245C  6E02               	movwf	new_px_char@a+1,c
  3335  00245E  0E01               	movlw	1
  3336  002460  6E03               	movwf	new_px_char@a+2,c
  3337  002462  0E00               	movlw	0
  3338  002464  6E04               	movwf	new_px_char@a+3,c
  3339  002466  0E00               	movlw	0
  3340  002468  6E05               	movwf	new_px_char@b,c
  3341  00246A  0E00               	movlw	0
  3342  00246C  6E06               	movwf	new_px_char@b+1,c
  3343  00246E  0EE0               	movlw	224
  3344  002470  6E07               	movwf	new_px_char@b+2,c
  3345  002472  0EA2               	movlw	162
  3346  002474  6E08               	movwf	new_px_char@b+3,c
  3347  002476  EC99  F019         	call	_new_px_char	;wreg free
  3348  00247A  CFE9 FFD9          	movff	fsr0l,fsr2l
  3349  00247E  CFEA FFDA          	movff	fsr0h,fsr2h
  3350  002482  EE00  F011         	lfsr	0,?_px_map
  3351  002486  0E07               	movlw	7
  3352  002488                     u2421:
  3353  002488  CFDB FFEB          	movff	plusw2,plusw0
  3354  00248C  06E8               	decf	wreg,f,c
  3355  00248E  E2FC               	bc	u2421
  3356  002490  0012               	return	
  3357  002492  0E10               	movlw	16
  3358  002494  6E01               	movwf	new_px_char@a,c
  3359  002496  0E92               	movlw	146
  3360  002498  6E02               	movwf	new_px_char@a+1,c
  3361  00249A  0E01               	movlw	1
  3362  00249C  6E03               	movwf	new_px_char@a+2,c
  3363  00249E  0E00               	movlw	0
  3364  0024A0  6E04               	movwf	new_px_char@a+3,c
  3365  0024A2  0E00               	movlw	0
  3366  0024A4  6E05               	movwf	new_px_char@b,c
  3367  0024A6  0E08               	movlw	8
  3368  0024A8  6E06               	movwf	new_px_char@b+1,c
  3369  0024AA  0EF1               	movlw	241
  3370  0024AC  6E07               	movwf	new_px_char@b+2,c
  3371  0024AE  0E84               	movlw	132
  3372  0024B0  6E08               	movwf	new_px_char@b+3,c
  3373  0024B2  EC99  F019         	call	_new_px_char	;wreg free
  3374  0024B6  CFE9 FFD9          	movff	fsr0l,fsr2l
  3375  0024BA  CFEA FFDA          	movff	fsr0h,fsr2h
  3376  0024BE  EE00  F011         	lfsr	0,?_px_map
  3377  0024C2  0E07               	movlw	7
  3378  0024C4                     u2431:
  3379  0024C4  CFDB FFEB          	movff	plusw2,plusw0
  3380  0024C8  06E8               	decf	wreg,f,c
  3381  0024CA  E2FC               	bc	u2431
  3382  0024CC  0012               	return	
  3383  0024CE  0E8C               	movlw	140
  3384  0024D0  6E01               	movwf	new_px_char@a,c
  3385  0024D2  0ED9               	movlw	217
  3386  0024D4  6E02               	movwf	new_px_char@a+1,c
  3387  0024D6  0E02               	movlw	2
  3388  0024D8  6E03               	movwf	new_px_char@a+2,c
  3389  0024DA  0E00               	movlw	0
  3390  0024DC  6E04               	movwf	new_px_char@a+3,c
  3391  0024DE  0E00               	movlw	0
  3392  0024E0  6E05               	movwf	new_px_char@b,c
  3393  0024E2  0E00               	movlw	0
  3394  0024E4  6E06               	movwf	new_px_char@b+1,c
  3395  0024E6  0E10               	movlw	16
  3396  0024E8  6E07               	movwf	new_px_char@b+2,c
  3397  0024EA  0E63               	movlw	99
  3398  0024EC  6E08               	movwf	new_px_char@b+3,c
  3399  0024EE  EC99  F019         	call	_new_px_char	;wreg free
  3400  0024F2  CFE9 FFD9          	movff	fsr0l,fsr2l
  3401  0024F6  CFEA FFDA          	movff	fsr0h,fsr2h
  3402  0024FA  EE00  F011         	lfsr	0,?_px_map
  3403  0024FE  0E07               	movlw	7
  3404  002500                     u2441:
  3405  002500  CFDB FFEB          	movff	plusw2,plusw0
  3406  002504  06E8               	decf	wreg,f,c
  3407  002506  E2FC               	bc	u2441
  3408  002508  0012               	return	
  3409  00250A  0E54               	movlw	84
  3410  00250C  6E01               	movwf	new_px_char@a,c
  3411  00250E  0E8A               	movlw	138
  3412  002510  6E02               	movwf	new_px_char@a+1,c
  3413  002512  0E00               	movlw	0
  3414  002514  6E03               	movwf	new_px_char@a+2,c
  3415  002516  0E00               	movlw	0
  3416  002518  6E04               	movwf	new_px_char@a+3,c
  3417  00251A  0E00               	movlw	0
  3418  00251C  6E05               	movwf	new_px_char@b,c
  3419  00251E  0E00               	movlw	0
  3420  002520  6E06               	movwf	new_px_char@b+1,c
  3421  002522  0E10               	movlw	16
  3422  002524  6E07               	movwf	new_px_char@b+2,c
  3423  002526  0E63               	movlw	99
  3424  002528  6E08               	movwf	new_px_char@b+3,c
  3425  00252A  EC99  F019         	call	_new_px_char	;wreg free
  3426  00252E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3427  002532  CFEA FFDA          	movff	fsr0h,fsr2h
  3428  002536  EE00  F011         	lfsr	0,?_px_map
  3429  00253A  0E07               	movlw	7
  3430  00253C                     u2451:
  3431  00253C  CFDB FFEB          	movff	plusw2,plusw0
  3432  002540  06E8               	decf	wreg,f,c
  3433  002542  E2FC               	bc	u2451
  3434  002544  0012               	return	
  3435  002546  0EAD               	movlw	173
  3436  002548  6E01               	movwf	new_px_char@a,c
  3437  00254A  0E55               	movlw	85
  3438  00254C  6E02               	movwf	new_px_char@a+1,c
  3439  00254E  0E01               	movlw	1
  3440  002550  6E03               	movwf	new_px_char@a+2,c
  3441  002552  0E00               	movlw	0
  3442  002554  6E04               	movwf	new_px_char@a+3,c
  3443  002556  0E00               	movlw	0
  3444  002558  6E05               	movwf	new_px_char@b,c
  3445  00255A  0E00               	movlw	0
  3446  00255C  6E06               	movwf	new_px_char@b+1,c
  3447  00255E  0E10               	movlw	16
  3448  002560  6E07               	movwf	new_px_char@b+2,c
  3449  002562  0E63               	movlw	99
  3450  002564  6E08               	movwf	new_px_char@b+3,c
  3451  002566  EC99  F019         	call	_new_px_char	;wreg free
  3452  00256A  CFE9 FFD9          	movff	fsr0l,fsr2l
  3453  00256E  CFEA FFDA          	movff	fsr0h,fsr2h
  3454  002572  EE00  F011         	lfsr	0,?_px_map
  3455  002576  0E07               	movlw	7
  3456  002578                     u2461:
  3457  002578  CFDB FFEB          	movff	plusw2,plusw0
  3458  00257C  06E8               	decf	wreg,f,c
  3459  00257E  E2FC               	bc	u2461
  3460  002580  0012               	return	
  3461  002582  0E21               	movlw	33
  3462  002584  6E01               	movwf	new_px_char@a,c
  3463  002586  0E2A               	movlw	42
  3464  002588  6E02               	movwf	new_px_char@a+1,c
  3465  00258A  0E02               	movlw	2
  3466  00258C  6E03               	movwf	new_px_char@a+2,c
  3467  00258E  0E00               	movlw	0
  3468  002590  6E04               	movwf	new_px_char@a+3,c
  3469  002592  0E00               	movlw	0
  3470  002594  6E05               	movwf	new_px_char@b,c
  3471  002596  0E00               	movlw	0
  3472  002598  6E06               	movwf	new_px_char@b+1,c
  3473  00259A  0E10               	movlw	16
  3474  00259C  6E07               	movwf	new_px_char@b+2,c
  3475  00259E  0E15               	movlw	21
  3476  0025A0  6E08               	movwf	new_px_char@b+3,c
  3477  0025A2  EC99  F019         	call	_new_px_char	;wreg free
  3478  0025A6  CFE9 FFD9          	movff	fsr0l,fsr2l
  3479  0025AA  CFEA FFDA          	movff	fsr0h,fsr2h
  3480  0025AE  EE00  F011         	lfsr	0,?_px_map
  3481  0025B2  0E07               	movlw	7
  3482  0025B4                     u2471:
  3483  0025B4  CFDB FFEB          	movff	plusw2,plusw0
  3484  0025B8  06E8               	decf	wreg,f,c
  3485  0025BA  E2FC               	bc	u2471
  3486  0025BC  0012               	return	
  3487  0025BE  0ECC               	movlw	204
  3488  0025C0  6E01               	movwf	new_px_char@a,c
  3489  0025C2  0E16               	movlw	22
  3490  0025C4  6E02               	movwf	new_px_char@a+1,c
  3491  0025C6  0E46               	movlw	70
  3492  0025C8  6E03               	movwf	new_px_char@a+2,c
  3493  0025CA  0E07               	movlw	7
  3494  0025CC  6E04               	movwf	new_px_char@a+3,c
  3495  0025CE  0E00               	movlw	0
  3496  0025D0  6E05               	movwf	new_px_char@b,c
  3497  0025D2  0E00               	movlw	0
  3498  0025D4  6E06               	movwf	new_px_char@b+1,c
  3499  0025D6  0E10               	movlw	16
  3500  0025D8  6E07               	movwf	new_px_char@b+2,c
  3501  0025DA  0E63               	movlw	99
  3502  0025DC  6E08               	movwf	new_px_char@b+3,c
  3503  0025DE  EC99  F019         	call	_new_px_char	;wreg free
  3504  0025E2  CFE9 FFD9          	movff	fsr0l,fsr2l
  3505  0025E6  CFEA FFDA          	movff	fsr0h,fsr2h
  3506  0025EA  EE00  F011         	lfsr	0,?_px_map
  3507  0025EE  0E07               	movlw	7
  3508  0025F0                     u2481:
  3509  0025F0  CFDB FFEB          	movff	plusw2,plusw0
  3510  0025F4  06E8               	decf	wreg,f,c
  3511  0025F6  E2FC               	bc	u2481
  3512  0025F8  0012               	return	
  3513  0025FA  0E11               	movlw	17
  3514  0025FC  6E01               	movwf	new_px_char@a,c
  3515  0025FE  0EE1               	movlw	225
  3516  002600  6E02               	movwf	new_px_char@a+1,c
  3517  002602  0E03               	movlw	3
  3518  002604  6E03               	movwf	new_px_char@a+2,c
  3519  002606  0E00               	movlw	0
  3520  002608  6E04               	movwf	new_px_char@a+3,c
  3521  00260A  0E00               	movlw	0
  3522  00260C  6E05               	movwf	new_px_char@b,c
  3523  00260E  0E00               	movlw	0
  3524  002610  6E06               	movwf	new_px_char@b+1,c
  3525  002612  0EF0               	movlw	240
  3526  002614  6E07               	movwf	new_px_char@b+2,c
  3527  002616  0E11               	movlw	17
  3528  002618  6E08               	movwf	new_px_char@b+3,c
  3529  00261A  EC99  F019         	call	_new_px_char	;wreg free
  3530  00261E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3531  002622  CFEA FFDA          	movff	fsr0h,fsr2h
  3532  002626  EE00  F011         	lfsr	0,?_px_map
  3533  00262A  0E07               	movlw	7
  3534  00262C                     u2491:
  3535  00262C  CFDB FFEB          	movff	plusw2,plusw0
  3536  002630  06E8               	decf	wreg,f,c
  3537  002632  E2FC               	bc	u2491
  3538  002634  0012               	return	
  3539  002636  0E20               	movlw	32
  3540  002638  6E01               	movwf	new_px_char@a,c
  3541  00263A  0E84               	movlw	132
  3542  00263C  6E02               	movwf	new_px_char@a+1,c
  3543  00263E  0E10               	movlw	16
  3544  002640  6E03               	movwf	new_px_char@a+2,c
  3545  002642  0E0C               	movlw	12
  3546  002644  6E04               	movwf	new_px_char@a+3,c
  3547  002646  0E00               	movlw	0
  3548  002648  6E05               	movwf	new_px_char@b,c
  3549  00264A  0E13               	movlw	19
  3550  00264C  6E06               	movwf	new_px_char@b+1,c
  3551  00264E  0E42               	movlw	66
  3552  002650  6E07               	movwf	new_px_char@b+2,c
  3553  002652  0EC8               	movlw	200
  3554  002654  6E08               	movwf	new_px_char@b+3,c
  3555  002656  EC99  F019         	call	_new_px_char	;wreg free
  3556  00265A  CFE9 FFD9          	movff	fsr0l,fsr2l
  3557  00265E  CFEA FFDA          	movff	fsr0h,fsr2h
  3558  002662  EE00  F011         	lfsr	0,?_px_map
  3559  002666  0E07               	movlw	7
  3560  002668                     u2501:
  3561  002668  CFDB FFEB          	movff	plusw2,plusw0
  3562  00266C  06E8               	decf	wreg,f,c
  3563  00266E  E2FC               	bc	u2501
  3564  002670  0012               	return	
  3565  002672  0E21               	movlw	33
  3566  002674  6E01               	movwf	new_px_char@a,c
  3567  002676  0E84               	movlw	132
  3568  002678  6E02               	movwf	new_px_char@a+1,c
  3569  00267A  0E10               	movlw	16
  3570  00267C  6E03               	movwf	new_px_char@a+2,c
  3571  00267E  0E00               	movlw	0
  3572  002680  6E04               	movwf	new_px_char@a+3,c
  3573  002682  0E00               	movlw	0
  3574  002684  6E05               	movwf	new_px_char@b,c
  3575  002686  0E10               	movlw	16
  3576  002688  6E06               	movwf	new_px_char@b+1,c
  3577  00268A  0E42               	movlw	66
  3578  00268C  6E07               	movwf	new_px_char@b+2,c
  3579  00268E  0E08               	movlw	8
  3580  002690  6E08               	movwf	new_px_char@b+3,c
  3581  002692  EC99  F019         	call	_new_px_char	;wreg free
  3582  002696  CFE9 FFD9          	movff	fsr0l,fsr2l
  3583  00269A  CFEA FFDA          	movff	fsr0h,fsr2h
  3584  00269E  EE00  F011         	lfsr	0,?_px_map
  3585  0026A2  0E07               	movlw	7
  3586  0026A4                     u2511:
  3587  0026A4  CFDB FFEB          	movff	plusw2,plusw0
  3588  0026A8  06E8               	decf	wreg,f,c
  3589  0026AA  E2FC               	bc	u2511
  3590  0026AC  0012               	return	
  3591  0026AE  0E26               	movlw	38
  3592  0026B0  6E01               	movwf	new_px_char@a,c
  3593  0026B2  0E84               	movlw	132
  3594  0026B4  6E02               	movwf	new_px_char@a+1,c
  3595  0026B6  0E90               	movlw	144
  3596  0026B8  6E03               	movwf	new_px_char@a+2,c
  3597  0026BA  0E01               	movlw	1
  3598  0026BC  6E04               	movwf	new_px_char@a+3,c
  3599  0026BE  0E60               	movlw	96
  3600  0026C0  6E05               	movwf	new_px_char@b,c
  3601  0026C2  0E10               	movlw	16
  3602  0026C4  6E06               	movwf	new_px_char@b+1,c
  3603  0026C6  0E42               	movlw	66
  3604  0026C8  6E07               	movwf	new_px_char@b+2,c
  3605  0026CA  0E08               	movlw	8
  3606  0026CC  6E08               	movwf	new_px_char@b+3,c
  3607  0026CE  EC99  F019         	call	_new_px_char	;wreg free
  3608  0026D2  CFE9 FFD9          	movff	fsr0l,fsr2l
  3609  0026D6  CFEA FFDA          	movff	fsr0h,fsr2h
  3610  0026DA  EE00  F011         	lfsr	0,?_px_map
  3611  0026DE  0E07               	movlw	7
  3612  0026E0                     u2521:
  3613  0026E0  CFDB FFEB          	movff	plusw2,plusw0
  3614  0026E4  06E8               	decf	wreg,f,c
  3615  0026E6  E2FC               	bc	u2521
  3616  0026E8  0012               	return	
  3617  0026EA  0E00               	movlw	0
  3618  0026EC  6E01               	movwf	new_px_char@a,c
  3619  0026EE  0E00               	movlw	0
  3620  0026F0  6E02               	movwf	new_px_char@a+1,c
  3621  0026F2  0E00               	movlw	0
  3622  0026F4  6E03               	movwf	new_px_char@a+2,c
  3623  0026F6  0E00               	movlw	0
  3624  0026F8  6E04               	movwf	new_px_char@a+3,c
  3625  0026FA  0E00               	movlw	0
  3626  0026FC  6E05               	movwf	new_px_char@b,c
  3627  0026FE  0EC8               	movlw	200
  3628  002700  6E06               	movwf	new_px_char@b+1,c
  3629  002702  0E9A               	movlw	154
  3630  002704  6E07               	movwf	new_px_char@b+2,c
  3631  002706  0E00               	movlw	0
  3632  002708  6E08               	movwf	new_px_char@b+3,c
  3633  00270A  EC99  F019         	call	_new_px_char	;wreg free
  3634  00270E  CFE9 FFD9          	movff	fsr0l,fsr2l
  3635  002712  CFEA FFDA          	movff	fsr0h,fsr2h
  3636  002716  EE00  F011         	lfsr	0,?_px_map
  3637  00271A  0E07               	movlw	7
  3638  00271C                     u2531:
  3639  00271C  CFDB FFEB          	movff	plusw2,plusw0
  3640  002720  06E8               	decf	wreg,f,c
  3641  002722  E2FC               	bc	u2531
  3642  002724  0012               	return	
  3643  002726  0E00               	movlw	0
  3644  002728  6E01               	movwf	new_px_char@a,c
  3645  00272A  0E00               	movlw	0
  3646  00272C  6E02               	movwf	new_px_char@a+1,c
  3647  00272E  0E00               	movlw	0
  3648  002730  6E03               	movwf	new_px_char@a+2,c
  3649  002732  0E00               	movlw	0
  3650  002734  6E04               	movwf	new_px_char@a+3,c
  3651  002736  0E00               	movlw	0
  3652  002738  6E05               	movwf	new_px_char@b,c
  3653  00273A  0E00               	movlw	0
  3654  00273C  6E06               	movwf	new_px_char@b+1,c
  3655  00273E  0E00               	movlw	0
  3656  002740  6E07               	movwf	new_px_char@b+2,c
  3657  002742  0E00               	movlw	0
  3658  002744  6E08               	movwf	new_px_char@b+3,c
  3659  002746  EC99  F019         	call	_new_px_char	;wreg free
  3660  00274A  CFE9 FFD9          	movff	fsr0l,fsr2l
  3661  00274E  CFEA FFDA          	movff	fsr0h,fsr2h
  3662  002752  EE00  F011         	lfsr	0,?_px_map
  3663  002756  0E07               	movlw	7
  3664  002758                     u2541:
  3665  002758  CFDB FFEB          	movff	plusw2,plusw0
  3666  00275C  06E8               	decf	wreg,f,c
  3667  00275E  E2FC               	bc	u2541
  3668                           
  3669                           ;px_ascii.c: 120: }
  3670  002760  0012               	return	
  3671  002762                     l333:
  3672  002762  501A               	movf	px_map@c,w,c
  3673                           
  3674                           ; Switch size 1, requested type "space"
  3675                           ; Number of cases is 95, Range of values is 32 to 126
  3676                           ; switch strategies available:
  3677                           ; Name         Instructions Cycles
  3678                           ; simple_byte          286   144 (average)
  3679                           ;	Chosen strategy is simple_byte
  3680  002764  0A20               	xorlw	32	; case 32
  3681  002766  B4D8               	btfsc	status,2,c
  3682  002768  EF71  F008         	goto	l334
  3683  00276C  0A01               	xorlw	1	; case 33
  3684  00276E  B4D8               	btfsc	status,2,c
  3685  002770  EF8F  F008         	goto	l336
  3686  002774  0A03               	xorlw	3	; case 34
  3687  002776  B4D8               	btfsc	status,2,c
  3688  002778  EFAD  F008         	goto	l337
  3689  00277C  0A01               	xorlw	1	; case 35
  3690  00277E  B4D8               	btfsc	status,2,c
  3691  002780  EFCB  F008         	goto	l338
  3692  002784  0A07               	xorlw	7	; case 36
  3693  002786  B4D8               	btfsc	status,2,c
  3694  002788  EFE9  F008         	goto	l339
  3695  00278C  0A01               	xorlw	1	; case 37
  3696  00278E  B4D8               	btfsc	status,2,c
  3697  002790  EF07  F009         	goto	l340
  3698  002794  0A03               	xorlw	3	; case 38
  3699  002796  B4D8               	btfsc	status,2,c
  3700  002798  EF25  F009         	goto	l341
  3701  00279C  0A01               	xorlw	1	; case 39
  3702  00279E  B4D8               	btfsc	status,2,c
  3703  0027A0  EF43  F009         	goto	l342
  3704  0027A4  0A0F               	xorlw	15	; case 40
  3705  0027A6  B4D8               	btfsc	status,2,c
  3706  0027A8  EF61  F009         	goto	l343
  3707  0027AC  0A01               	xorlw	1	; case 41
  3708  0027AE  B4D8               	btfsc	status,2,c
  3709  0027B0  EF7F  F009         	goto	l344
  3710  0027B4  0A03               	xorlw	3	; case 42
  3711  0027B6  B4D8               	btfsc	status,2,c
  3712  0027B8  EF9D  F009         	goto	l345
  3713  0027BC  0A01               	xorlw	1	; case 43
  3714  0027BE  B4D8               	btfsc	status,2,c
  3715  0027C0  EFBB  F009         	goto	l346
  3716  0027C4  0A07               	xorlw	7	; case 44
  3717  0027C6  B4D8               	btfsc	status,2,c
  3718  0027C8  EFD9  F009         	goto	l347
  3719  0027CC  0A01               	xorlw	1	; case 45
  3720  0027CE  B4D8               	btfsc	status,2,c
  3721  0027D0  EFF7  F009         	goto	l348
  3722  0027D4  0A03               	xorlw	3	; case 46
  3723  0027D6  B4D8               	btfsc	status,2,c
  3724  0027D8  EF15  F00A         	goto	l349
  3725  0027DC  0A01               	xorlw	1	; case 47
  3726  0027DE  B4D8               	btfsc	status,2,c
  3727  0027E0  EF33  F00A         	goto	l350
  3728  0027E4  0A1F               	xorlw	31	; case 48
  3729  0027E6  B4D8               	btfsc	status,2,c
  3730  0027E8  EF51  F00A         	goto	l351
  3731  0027EC  0A01               	xorlw	1	; case 49
  3732  0027EE  B4D8               	btfsc	status,2,c
  3733  0027F0  EF6F  F00A         	goto	l352
  3734  0027F4  0A03               	xorlw	3	; case 50
  3735  0027F6  B4D8               	btfsc	status,2,c
  3736  0027F8  EF8D  F00A         	goto	l353
  3737  0027FC  0A01               	xorlw	1	; case 51
  3738  0027FE  B4D8               	btfsc	status,2,c
  3739  002800  EFAB  F00A         	goto	l354
  3740  002804  0A07               	xorlw	7	; case 52
  3741  002806  B4D8               	btfsc	status,2,c
  3742  002808  EFC9  F00A         	goto	l355
  3743  00280C  0A01               	xorlw	1	; case 53
  3744  00280E  B4D8               	btfsc	status,2,c
  3745  002810  EFE7  F00A         	goto	l356
  3746  002814  0A03               	xorlw	3	; case 54
  3747  002816  B4D8               	btfsc	status,2,c
  3748  002818  EF05  F00B         	goto	l357
  3749  00281C  0A01               	xorlw	1	; case 55
  3750  00281E  B4D8               	btfsc	status,2,c
  3751  002820  EF23  F00B         	goto	l358
  3752  002824  0A0F               	xorlw	15	; case 56
  3753  002826  B4D8               	btfsc	status,2,c
  3754  002828  EF41  F00B         	goto	l359
  3755  00282C  0A01               	xorlw	1	; case 57
  3756  00282E  B4D8               	btfsc	status,2,c
  3757  002830  EF5F  F00B         	goto	l360
  3758  002834  0A03               	xorlw	3	; case 58
  3759  002836  B4D8               	btfsc	status,2,c
  3760  002838  EF7D  F00B         	goto	l361
  3761  00283C  0A01               	xorlw	1	; case 59
  3762  00283E  B4D8               	btfsc	status,2,c
  3763  002840  EF9B  F00B         	goto	l362
  3764  002844  0A07               	xorlw	7	; case 60
  3765  002846  B4D8               	btfsc	status,2,c
  3766  002848  EFB9  F00B         	goto	l363
  3767  00284C  0A01               	xorlw	1	; case 61
  3768  00284E  B4D8               	btfsc	status,2,c
  3769  002850  EFD7  F00B         	goto	l364
  3770  002854  0A03               	xorlw	3	; case 62
  3771  002856  B4D8               	btfsc	status,2,c
  3772  002858  EFF5  F00B         	goto	l365
  3773  00285C  0A01               	xorlw	1	; case 63
  3774  00285E  B4D8               	btfsc	status,2,c
  3775  002860  EF13  F00C         	goto	l366
  3776  002864  0A7F               	xorlw	127	; case 64
  3777  002866  B4D8               	btfsc	status,2,c
  3778  002868  EF31  F00C         	goto	l367
  3779  00286C  0A01               	xorlw	1	; case 65
  3780  00286E  B4D8               	btfsc	status,2,c
  3781  002870  EF4F  F00C         	goto	l368
  3782  002874  0A03               	xorlw	3	; case 66
  3783  002876  B4D8               	btfsc	status,2,c
  3784  002878  EF6D  F00C         	goto	l369
  3785  00287C  0A01               	xorlw	1	; case 67
  3786  00287E  B4D8               	btfsc	status,2,c
  3787  002880  EF8B  F00C         	goto	l370
  3788  002884  0A07               	xorlw	7	; case 68
  3789  002886  B4D8               	btfsc	status,2,c
  3790  002888  EFA9  F00C         	goto	l371
  3791  00288C  0A01               	xorlw	1	; case 69
  3792  00288E  B4D8               	btfsc	status,2,c
  3793  002890  EFC7  F00C         	goto	l372
  3794  002894  0A03               	xorlw	3	; case 70
  3795  002896  B4D8               	btfsc	status,2,c
  3796  002898  EFE5  F00C         	goto	l373
  3797  00289C  0A01               	xorlw	1	; case 71
  3798  00289E  B4D8               	btfsc	status,2,c
  3799  0028A0  EF03  F00D         	goto	l374
  3800  0028A4  0A0F               	xorlw	15	; case 72
  3801  0028A6  B4D8               	btfsc	status,2,c
  3802  0028A8  EF21  F00D         	goto	l375
  3803  0028AC  0A01               	xorlw	1	; case 73
  3804  0028AE  B4D8               	btfsc	status,2,c
  3805  0028B0  EF3F  F00D         	goto	l376
  3806  0028B4  0A03               	xorlw	3	; case 74
  3807  0028B6  B4D8               	btfsc	status,2,c
  3808  0028B8  EF5D  F00D         	goto	l377
  3809  0028BC  0A01               	xorlw	1	; case 75
  3810  0028BE  B4D8               	btfsc	status,2,c
  3811  0028C0  EF7B  F00D         	goto	l378
  3812  0028C4  0A07               	xorlw	7	; case 76
  3813  0028C6  B4D8               	btfsc	status,2,c
  3814  0028C8  EF99  F00D         	goto	l379
  3815  0028CC  0A01               	xorlw	1	; case 77
  3816  0028CE  B4D8               	btfsc	status,2,c
  3817  0028D0  EFB7  F00D         	goto	l380
  3818  0028D4  0A03               	xorlw	3	; case 78
  3819  0028D6  B4D8               	btfsc	status,2,c
  3820  0028D8  EFD5  F00D         	goto	l381
  3821  0028DC  0A01               	xorlw	1	; case 79
  3822  0028DE  B4D8               	btfsc	status,2,c
  3823  0028E0  EFF3  F00D         	goto	l382
  3824  0028E4  0A1F               	xorlw	31	; case 80
  3825  0028E6  B4D8               	btfsc	status,2,c
  3826  0028E8  EF11  F00E         	goto	l383
  3827  0028EC  0A01               	xorlw	1	; case 81
  3828  0028EE  B4D8               	btfsc	status,2,c
  3829  0028F0  EF2F  F00E         	goto	l384
  3830  0028F4  0A03               	xorlw	3	; case 82
  3831  0028F6  B4D8               	btfsc	status,2,c
  3832  0028F8  EF4D  F00E         	goto	l385
  3833  0028FC  0A01               	xorlw	1	; case 83
  3834  0028FE  B4D8               	btfsc	status,2,c
  3835  002900  EF6B  F00E         	goto	l386
  3836  002904  0A07               	xorlw	7	; case 84
  3837  002906  B4D8               	btfsc	status,2,c
  3838  002908  EF89  F00E         	goto	l387
  3839  00290C  0A01               	xorlw	1	; case 85
  3840  00290E  B4D8               	btfsc	status,2,c
  3841  002910  EFA7  F00E         	goto	l388
  3842  002914  0A03               	xorlw	3	; case 86
  3843  002916  B4D8               	btfsc	status,2,c
  3844  002918  EFC5  F00E         	goto	l389
  3845  00291C  0A01               	xorlw	1	; case 87
  3846  00291E  B4D8               	btfsc	status,2,c
  3847  002920  EFE3  F00E         	goto	l390
  3848  002924  0A0F               	xorlw	15	; case 88
  3849  002926  B4D8               	btfsc	status,2,c
  3850  002928  EF01  F00F         	goto	l391
  3851  00292C  0A01               	xorlw	1	; case 89
  3852  00292E  B4D8               	btfsc	status,2,c
  3853  002930  EF1F  F00F         	goto	l392
  3854  002934  0A03               	xorlw	3	; case 90
  3855  002936  B4D8               	btfsc	status,2,c
  3856  002938  EF3D  F00F         	goto	l393
  3857  00293C  0A01               	xorlw	1	; case 91
  3858  00293E  B4D8               	btfsc	status,2,c
  3859  002940  EF5B  F00F         	goto	l394
  3860  002944  0A07               	xorlw	7	; case 92
  3861  002946  B4D8               	btfsc	status,2,c
  3862  002948  EF79  F00F         	goto	l395
  3863  00294C  0A01               	xorlw	1	; case 93
  3864  00294E  B4D8               	btfsc	status,2,c
  3865  002950  EF97  F00F         	goto	l396
  3866  002954  0A03               	xorlw	3	; case 94
  3867  002956  B4D8               	btfsc	status,2,c
  3868  002958  EFB5  F00F         	goto	l397
  3869  00295C  0A01               	xorlw	1	; case 95
  3870  00295E  B4D8               	btfsc	status,2,c
  3871  002960  EFD3  F00F         	goto	l398
  3872  002964  0A3F               	xorlw	63	; case 96
  3873  002966  B4D8               	btfsc	status,2,c
  3874  002968  EFF1  F00F         	goto	l399
  3875  00296C  0A01               	xorlw	1	; case 97
  3876  00296E  B4D8               	btfsc	status,2,c
  3877  002970  EF0F  F010         	goto	l400
  3878  002974  0A03               	xorlw	3	; case 98
  3879  002976  B4D8               	btfsc	status,2,c
  3880  002978  EF2D  F010         	goto	l401
  3881  00297C  0A01               	xorlw	1	; case 99
  3882  00297E  B4D8               	btfsc	status,2,c
  3883  002980  EF4B  F010         	goto	l402
  3884  002984  0A07               	xorlw	7	; case 100
  3885  002986  B4D8               	btfsc	status,2,c
  3886  002988  EF69  F010         	goto	l403
  3887  00298C  0A01               	xorlw	1	; case 101
  3888  00298E  B4D8               	btfsc	status,2,c
  3889  002990  EF87  F010         	goto	l404
  3890  002994  0A03               	xorlw	3	; case 102
  3891  002996  B4D8               	btfsc	status,2,c
  3892  002998  EFA5  F010         	goto	l405
  3893  00299C  0A01               	xorlw	1	; case 103
  3894  00299E  B4D8               	btfsc	status,2,c
  3895  0029A0  EFC3  F010         	goto	l406
  3896  0029A4  0A0F               	xorlw	15	; case 104
  3897  0029A6  B4D8               	btfsc	status,2,c
  3898  0029A8  D40C               	goto	l407
  3899  0029AA  0A01               	xorlw	1	; case 105
  3900  0029AC  B4D8               	btfsc	status,2,c
  3901  0029AE  D427               	goto	l408
  3902  0029B0  0A03               	xorlw	3	; case 106
  3903  0029B2  B4D8               	btfsc	status,2,c
  3904  0029B4  D442               	goto	l409
  3905  0029B6  0A01               	xorlw	1	; case 107
  3906  0029B8  B4D8               	btfsc	status,2,c
  3907  0029BA  D45D               	goto	l410
  3908  0029BC  0A07               	xorlw	7	; case 108
  3909  0029BE  B4D8               	btfsc	status,2,c
  3910  0029C0  D478               	goto	l411
  3911  0029C2  0A01               	xorlw	1	; case 109
  3912  0029C4  B4D8               	btfsc	status,2,c
  3913  0029C6  D493               	goto	l412
  3914  0029C8  0A03               	xorlw	3	; case 110
  3915  0029CA  B4D8               	btfsc	status,2,c
  3916  0029CC  D4AE               	goto	l413
  3917  0029CE  0A01               	xorlw	1	; case 111
  3918  0029D0  B4D8               	btfsc	status,2,c
  3919  0029D2  D4C9               	goto	l414
  3920  0029D4  0A1F               	xorlw	31	; case 112
  3921  0029D6  B4D8               	btfsc	status,2,c
  3922  0029D8  D4E4               	goto	l415
  3923  0029DA  0A01               	xorlw	1	; case 113
  3924  0029DC  B4D8               	btfsc	status,2,c
  3925  0029DE  D4FF               	goto	l416
  3926  0029E0  0A03               	xorlw	3	; case 114
  3927  0029E2  B4D8               	btfsc	status,2,c
  3928  0029E4  D51A               	goto	l417
  3929  0029E6  0A01               	xorlw	1	; case 115
  3930  0029E8  B4D8               	btfsc	status,2,c
  3931  0029EA  D535               	goto	l418
  3932  0029EC  0A07               	xorlw	7	; case 116
  3933  0029EE  B4D8               	btfsc	status,2,c
  3934  0029F0  D550               	goto	l419
  3935  0029F2  0A01               	xorlw	1	; case 117
  3936  0029F4  B4D8               	btfsc	status,2,c
  3937  0029F6  D56B               	goto	l420
  3938  0029F8  0A03               	xorlw	3	; case 118
  3939  0029FA  B4D8               	btfsc	status,2,c
  3940  0029FC  D586               	goto	l421
  3941  0029FE  0A01               	xorlw	1	; case 119
  3942  002A00  B4D8               	btfsc	status,2,c
  3943  002A02  D5A1               	goto	l422
  3944  002A04  0A0F               	xorlw	15	; case 120
  3945  002A06  B4D8               	btfsc	status,2,c
  3946  002A08  D5BC               	goto	l423
  3947  002A0A  0A01               	xorlw	1	; case 121
  3948  002A0C  B4D8               	btfsc	status,2,c
  3949  002A0E  D5D7               	goto	l424
  3950  002A10  0A03               	xorlw	3	; case 122
  3951  002A12  B4D8               	btfsc	status,2,c
  3952  002A14  D5F2               	goto	l425
  3953  002A16  0A01               	xorlw	1	; case 123
  3954  002A18  B4D8               	btfsc	status,2,c
  3955  002A1A  D60D               	goto	l426
  3956  002A1C  0A07               	xorlw	7	; case 124
  3957  002A1E  B4D8               	btfsc	status,2,c
  3958  002A20  D628               	goto	l427
  3959  002A22  0A01               	xorlw	1	; case 125
  3960  002A24  B4D8               	btfsc	status,2,c
  3961  002A26  D643               	goto	l428
  3962  002A28  0A03               	xorlw	3	; case 126
  3963  002A2A  B4D8               	btfsc	status,2,c
  3964  002A2C  D65E               	goto	l429
  3965  002A2E  D67B               	goto	l430
  3966  002A30                     __end_of_px_map:
  3967                           	opt stack 0
  3968                           tblptru	equ	0xFF8
  3969                           tblptrh	equ	0xFF7
  3970                           tblptrl	equ	0xFF6
  3971                           tablat	equ	0xFF5
  3972                           plusw0	equ	0xFEB
  3973                           fsr0h	equ	0xFEA
  3974                           fsr0l	equ	0xFE9
  3975                           wreg	equ	0xFE8
  3976                           plusw2	equ	0xFDB
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _new_px_char *****************
  3982 ;; Defined at:
  3983 ;;		line 14 in file "px_ascii.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  a               4    0[COMRAM] unsigned long 
  3986 ;;  b               4    4[COMRAM] unsigned long 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  p               8    8[COMRAM] struct .
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  8    0[COMRAM] struct .
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:       16 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_px_map
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text4
  4012  003332                     __ptext4:
  4013                           	opt stack 0
  4014  003332                     _new_px_char:
  4015                           	opt stack 27
  4016                           
  4017                           ;px_ascii.c: 15: px_char p;
  4018                           ;px_ascii.c: 16: p.part[1] = a;
  4019                           
  4020                           ;incstack = 0
  4021  003332  C001  F00D         	movff	new_px_char@a,new_px_char@p+4
  4022  003336  C002  F00E         	movff	new_px_char@a+1,new_px_char@p+5
  4023  00333A  C003  F00F         	movff	new_px_char@a+2,new_px_char@p+6
  4024  00333E  C004  F010         	movff	new_px_char@a+3,new_px_char@p+7
  4025                           
  4026                           ;px_ascii.c: 17: p.part[0] = b;
  4027  003342  C005  F009         	movff	new_px_char@b,new_px_char@p
  4028  003346  C006  F00A         	movff	new_px_char@b+1,new_px_char@p+1
  4029  00334A  C007  F00B         	movff	new_px_char@b+2,new_px_char@p+2
  4030  00334E  C008  F00C         	movff	new_px_char@b+3,new_px_char@p+3
  4031                           
  4032                           ;px_ascii.c: 18: return p;
  4033  003352  EE20  F009         	lfsr	2,new_px_char@p
  4034  003356  EE00  F001         	lfsr	0,?_new_px_char
  4035  00335A  0E07               	movlw	7
  4036  00335C                     u1421:
  4037  00335C  CFDB FFEB          	movff	plusw2,plusw0
  4038  003360  06E8               	decf	wreg,f,c
  4039  003362  E2FC               	bc	u1421
  4040  003364  0012               	return	
  4041  003366                     __end_of_new_px_char:
  4042                           	opt stack 0
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           plusw0	equ	0xFEB
  4048                           fsr0h	equ	0xFEA
  4049                           fsr0l	equ	0xFE9
  4050                           wreg	equ	0xFE8
  4051                           plusw2	equ	0xFDB
  4052                           fsr2h	equ	0xFDA
  4053                           fsr2l	equ	0xFD9
  4054                           status	equ	0xFD8
  4055                           
  4056 ;; *************** function _draw_px_char *****************
  4057 ;; Defined at:
  4058 ;;		line 60 in file "main.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  x               2   32[COMRAM] int 
  4061 ;;  y               2   34[COMRAM] int 
  4062 ;;  p               8   36[COMRAM] struct .
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  i               2   52[COMRAM] int 
  4065 ;;  m               4   48[COMRAM] unsigned long 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4075 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;Total ram usage:       22 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    5
  4082 ;; This function calls:
  4083 ;;		___awdiv
  4084 ;;		___awmod
  4085 ;;		_glcdDrawPixel
  4086 ;; This function is called by:
  4087 ;;		_print_px_char
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text5
  4092  002EBC                     __ptext5:
  4093                           	opt stack 0
  4094  002EBC                     _draw_px_char:
  4095                           	opt stack 23
  4096                           
  4097                           ;main.c: 61: uint32_t m = 0b1;
  4098                           
  4099                           ;incstack = 0
  4100  002EBC  0E01               	movlw	1
  4101  002EBE  6E31               	movwf	draw_px_char@m,c
  4102  002EC0  0E00               	movlw	0
  4103  002EC2  6E32               	movwf	draw_px_char@m+1,c
  4104  002EC4  0E00               	movlw	0
  4105  002EC6  6E33               	movwf	draw_px_char@m+2,c
  4106  002EC8  0E00               	movlw	0
  4107  002ECA  6E34               	movwf	draw_px_char@m+3,c
  4108                           
  4109                           ;main.c: 62: for(int i = 0; i < 32; i++) {
  4110  002ECC  0E00               	movlw	0
  4111  002ECE  6E36               	movwf	draw_px_char@i+1,c
  4112  002ED0  0E00               	movlw	0
  4113  002ED2  6E35               	movwf	draw_px_char@i,c
  4114  002ED4  BE36               	btfsc	draw_px_char@i+1,7,c
  4115  002ED6  D008               	goto	l130
  4116  002ED8  5036               	movf	draw_px_char@i+1,w,c
  4117  002EDA  E105               	bnz	u1550
  4118  002EDC  0E20               	movlw	32
  4119  002EDE  5C35               	subwf	draw_px_char@i,w,c
  4120  002EE0  B0D8               	btfsc	status,0,c
  4121  002EE2  0012               	return	
  4122  002EE4  D001               	goto	l130
  4123  002EE6                     u1550:
  4124  002EE6  0012               	return	
  4125  002EE8                     l130:
  4126                           
  4127                           ;main.c: 63: if(m & p.part[0]) glcdDrawPixel(x+i%5, y+i/5, BLACK);
  4128  002EE8  5031               	movf	draw_px_char@m,w,c
  4129  002EEA  1425               	andwf	draw_px_char@p,w,c
  4130  002EEC  6E2D               	movwf	??_draw_px_char& (0+255),c
  4131  002EEE  5032               	movf	draw_px_char@m+1,w,c
  4132  002EF0  1426               	andwf	draw_px_char@p+1,w,c
  4133  002EF2  6E2E               	movwf	(??_draw_px_char+1)& (0+255),c
  4134  002EF4  5033               	movf	draw_px_char@m+2,w,c
  4135  002EF6  1427               	andwf	draw_px_char@p+2,w,c
  4136  002EF8  6E2F               	movwf	(??_draw_px_char+2)& (0+255),c
  4137  002EFA  5034               	movf	draw_px_char@m+3,w,c
  4138  002EFC  1428               	andwf	draw_px_char@p+3,w,c
  4139  002EFE  6E30               	movwf	(??_draw_px_char+3)& (0+255),c
  4140  002F00  502D               	movf	??_draw_px_char,w,c
  4141  002F02  102E               	iorwf	??_draw_px_char+1,w,c
  4142  002F04  102F               	iorwf	??_draw_px_char+2,w,c
  4143  002F06  1030               	iorwf	??_draw_px_char+3,w,c
  4144  002F08  B4D8               	btfsc	status,2,c
  4145  002F0A  D02B               	goto	l132
  4146  002F0C  C035  F001         	movff	draw_px_char@i,___awdiv@dividend
  4147  002F10  C036  F002         	movff	draw_px_char@i+1,___awdiv@dividend+1
  4148  002F14  0E00               	movlw	0
  4149  002F16  6E04               	movwf	___awdiv@divisor+1,c
  4150  002F18  0E05               	movlw	5
  4151  002F1A  6E03               	movwf	___awdiv@divisor,c
  4152  002F1C  EC66  F018         	call	___awdiv	;wreg free
  4153  002F20  5001               	movf	?___awdiv,w,c
  4154  002F22  2423               	addwf	draw_px_char@y,w,c
  4155  002F24  6E1A               	movwf	glcdDrawPixel@YS,c
  4156  002F26  0E25               	movlw	low _BLACK
  4157  002F28  6EF6               	movwf	tblptrl,c
  4158  002F2A                     	if	1	;There is more than 1 active tblptr byte
  4159  002F2A  0E10               	movlw	high _BLACK
  4160  002F2C  6EF7               	movwf	tblptrh,c
  4161  002F2E                     	endif
  4162  002F2E                     	if	0	;There are less than 3 active tblptr bytes
  4163  002F2E                     	endif
  4164  002F2E  0009               	tblrd		*+
  4165  002F30  CFF5 F01B          	movff	tablat,glcdDrawPixel@color
  4166  002F34  0009               	tblrd		*+
  4167  002F36  CFF5 F01C          	movff	tablat,glcdDrawPixel@color+1
  4168  002F3A  0009               	tblrd		*+
  4169  002F3C  CFF5 F01D          	movff	tablat,glcdDrawPixel@color+2
  4170  002F40  000A               	tblrd		*-
  4171  002F42  CFF5 F01E          	movff	tablat,glcdDrawPixel@color+3
  4172  002F46  C035  F001         	movff	draw_px_char@i,___awmod@dividend
  4173  002F4A  C036  F002         	movff	draw_px_char@i+1,___awmod@dividend+1
  4174  002F4E  0E00               	movlw	0
  4175  002F50  6E04               	movwf	___awmod@divisor+1,c
  4176  002F52  0E05               	movlw	5
  4177  002F54  6E03               	movwf	___awmod@divisor,c
  4178  002F56  ECE6  F018         	call	___awmod	;wreg free
  4179  002F5A  5001               	movf	?___awmod,w,c
  4180  002F5C  2421               	addwf	draw_px_char@x,w,c
  4181  002F5E  EC1E  F019         	call	_glcdDrawPixel
  4182  002F62                     l132:
  4183                           
  4184                           ;main.c: 64: if(m & p.part[1]) glcdDrawPixel(x+(i+32)%5, y+(i+32)/5, BLACK);
  4185  002F62  5031               	movf	draw_px_char@m,w,c
  4186  002F64  1429               	andwf	draw_px_char@p+4,w,c
  4187  002F66  6E2D               	movwf	??_draw_px_char& (0+255),c
  4188  002F68  5032               	movf	draw_px_char@m+1,w,c
  4189  002F6A  142A               	andwf	draw_px_char@p+5,w,c
  4190  002F6C  6E2E               	movwf	(??_draw_px_char+1)& (0+255),c
  4191  002F6E  5033               	movf	draw_px_char@m+2,w,c
  4192  002F70  142B               	andwf	draw_px_char@p+6,w,c
  4193  002F72  6E2F               	movwf	(??_draw_px_char+2)& (0+255),c
  4194  002F74  5034               	movf	draw_px_char@m+3,w,c
  4195  002F76  142C               	andwf	draw_px_char@p+7,w,c
  4196  002F78  6E30               	movwf	(??_draw_px_char+3)& (0+255),c
  4197  002F7A  502D               	movf	??_draw_px_char,w,c
  4198  002F7C  102E               	iorwf	??_draw_px_char+1,w,c
  4199  002F7E  102F               	iorwf	??_draw_px_char+2,w,c
  4200  002F80  1030               	iorwf	??_draw_px_char+3,w,c
  4201  002F82  B4D8               	btfsc	status,2,c
  4202  002F84  D02F               	goto	l133
  4203  002F86  0E20               	movlw	32
  4204  002F88  2435               	addwf	draw_px_char@i,w,c
  4205  002F8A  6E01               	movwf	___awdiv@dividend,c
  4206  002F8C  0E00               	movlw	0
  4207  002F8E  2036               	addwfc	draw_px_char@i+1,w,c
  4208  002F90  6E02               	movwf	___awdiv@dividend+1,c
  4209  002F92  0E00               	movlw	0
  4210  002F94  6E04               	movwf	___awdiv@divisor+1,c
  4211  002F96  0E05               	movlw	5
  4212  002F98  6E03               	movwf	___awdiv@divisor,c
  4213  002F9A  EC66  F018         	call	___awdiv	;wreg free
  4214  002F9E  5001               	movf	?___awdiv,w,c
  4215  002FA0  2423               	addwf	draw_px_char@y,w,c
  4216  002FA2  6E1A               	movwf	glcdDrawPixel@YS,c
  4217  002FA4  0E25               	movlw	low _BLACK
  4218  002FA6  6EF6               	movwf	tblptrl,c
  4219  002FA8                     	if	1	;There is more than 1 active tblptr byte
  4220  002FA8  0E10               	movlw	high _BLACK
  4221  002FAA  6EF7               	movwf	tblptrh,c
  4222  002FAC                     	endif
  4223  002FAC                     	if	0	;There are less than 3 active tblptr bytes
  4224  002FAC                     	endif
  4225  002FAC  0009               	tblrd		*+
  4226  002FAE  CFF5 F01B          	movff	tablat,glcdDrawPixel@color
  4227  002FB2  0009               	tblrd		*+
  4228  002FB4  CFF5 F01C          	movff	tablat,glcdDrawPixel@color+1
  4229  002FB8  0009               	tblrd		*+
  4230  002FBA  CFF5 F01D          	movff	tablat,glcdDrawPixel@color+2
  4231  002FBE  000A               	tblrd		*-
  4232  002FC0  CFF5 F01E          	movff	tablat,glcdDrawPixel@color+3
  4233  002FC4  0E20               	movlw	32
  4234  002FC6  2435               	addwf	draw_px_char@i,w,c
  4235  002FC8  6E01               	movwf	___awmod@dividend,c
  4236  002FCA  0E00               	movlw	0
  4237  002FCC  2036               	addwfc	draw_px_char@i+1,w,c
  4238  002FCE  6E02               	movwf	___awmod@dividend+1,c
  4239  002FD0  0E00               	movlw	0
  4240  002FD2  6E04               	movwf	___awmod@divisor+1,c
  4241  002FD4  0E05               	movlw	5
  4242  002FD6  6E03               	movwf	___awmod@divisor,c
  4243  002FD8  ECE6  F018         	call	___awmod	;wreg free
  4244  002FDC  5001               	movf	?___awmod,w,c
  4245  002FDE  2421               	addwf	draw_px_char@x,w,c
  4246  002FE0  EC1E  F019         	call	_glcdDrawPixel
  4247  002FE4                     l133:
  4248                           
  4249                           ;main.c: 66: m <<= 1;
  4250  002FE4  90D8               	bcf	status,0,c
  4251  002FE6  3631               	rlcf	draw_px_char@m,f,c
  4252  002FE8  3632               	rlcf	draw_px_char@m+1,f,c
  4253  002FEA  3633               	rlcf	draw_px_char@m+2,f,c
  4254  002FEC  3634               	rlcf	draw_px_char@m+3,f,c
  4255  002FEE  4A35               	infsnz	draw_px_char@i,f,c
  4256  002FF0  2A36               	incf	draw_px_char@i+1,f,c
  4257  002FF2  BE36               	btfsc	draw_px_char@i+1,7,c
  4258  002FF4  D779               	goto	l130
  4259  002FF6  5036               	movf	draw_px_char@i+1,w,c
  4260  002FF8  E101               	bnz	l134
  4261  002FFA  D770               	goto	L1
  4262  002FFC                     l134:
  4263  002FFC  0012               	return		;funcret
  4264  002FFE                     __end_of_draw_px_char:
  4265                           	opt stack 0
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           plusw0	equ	0xFEB
  4271                           fsr0h	equ	0xFEA
  4272                           fsr0l	equ	0xFE9
  4273                           wreg	equ	0xFE8
  4274                           plusw2	equ	0xFDB
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function _glcdDrawPixel *****************
  4280 ;; Defined at:
  4281 ;;		line 147 in file "GLCD_PIC_V1.1.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  XS              1    wreg     unsigned char 
  4284 ;;  YS              1   25[COMRAM] unsigned char 
  4285 ;;  color           4   26[COMRAM] unsigned long 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  XS              1   31[COMRAM] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4297 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;Total ram usage:        7 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    4
  4304 ;; This function calls:
  4305 ;;		_glcdDrawRectangle
  4306 ;; This function is called by:
  4307 ;;		_draw_px_char
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text6
  4312  00323C                     __ptext6:
  4313                           	opt stack 0
  4314  00323C                     _glcdDrawPixel:
  4315                           	opt stack 23
  4316                           
  4317                           ;incstack = 0
  4318                           ;glcdDrawPixel@XS stored from wreg
  4319  00323C  6E20               	movwf	glcdDrawPixel@XS,c
  4320                           
  4321                           ;GLCD_PIC_V1.1.c: 160: if(XS >= GLCD_SIZE_HORZ){ XS = GLCD_SIZE_HORZ - 1; }
  4322  00323E  0E6A               	movlw	low _GLCD_SIZE_HORZ
  4323  003240  6EF6               	movwf	tblptrl,c
  4324  003242                     	if	1	;There is more than 1 active tblptr byte
  4325  003242  0E10               	movlw	high _GLCD_SIZE_HORZ
  4326  003244  6EF7               	movwf	tblptrh,c
  4327  003246                     	endif
  4328  003246                     	if	0	;There are less than 3 active tblptr bytes
  4329  003246                     	endif
  4330  003246  0009               	tblrd		*+
  4331  003248  50F5               	movf	tablat,w,c
  4332  00324A  5C20               	subwf	glcdDrawPixel@XS,w,c
  4333  00324C  A0D8               	btfss	status,0,c
  4334  00324E  D009               	goto	l301
  4335  003250  0E6A               	movlw	low _GLCD_SIZE_HORZ
  4336  003252  6EF6               	movwf	tblptrl,c
  4337  003254                     	if	1	;There is more than 1 active tblptr byte
  4338  003254  0E10               	movlw	high _GLCD_SIZE_HORZ
  4339  003256  6EF7               	movwf	tblptrh,c
  4340  003258                     	endif
  4341  003258                     	if	0	;There are less than 3 active tblptr bytes
  4342  003258                     	endif
  4343  003258  0008               	tblrd		*
  4344  00325A  CFF5 F01F          	movff	tablat,??_glcdDrawPixel
  4345  00325E  041F               	decf	??_glcdDrawPixel,w,c
  4346  003260  6E20               	movwf	glcdDrawPixel@XS,c
  4347  003262                     l301:
  4348                           
  4349                           ;GLCD_PIC_V1.1.c: 161: if(YS >= GLCD_SIZE_VERT){ YS = GLCD_SIZE_HORZ - 1; }
  4350  003262  0E69               	movlw	low _GLCD_SIZE_VERT
  4351  003264  6EF6               	movwf	tblptrl,c
  4352  003266                     	if	1	;There is more than 1 active tblptr byte
  4353  003266  0E10               	movlw	high _GLCD_SIZE_VERT
  4354  003268  6EF7               	movwf	tblptrh,c
  4355  00326A                     	endif
  4356  00326A                     	if	0	;There are less than 3 active tblptr bytes
  4357  00326A                     	endif
  4358  00326A  0009               	tblrd		*+
  4359  00326C  50F5               	movf	tablat,w,c
  4360  00326E  5C1A               	subwf	glcdDrawPixel@YS,w,c
  4361  003270  A0D8               	btfss	status,0,c
  4362  003272  D009               	goto	l302
  4363  003274  0E6A               	movlw	low _GLCD_SIZE_HORZ
  4364  003276  6EF6               	movwf	tblptrl,c
  4365  003278                     	if	1	;There is more than 1 active tblptr byte
  4366  003278  0E10               	movlw	high _GLCD_SIZE_HORZ
  4367  00327A  6EF7               	movwf	tblptrh,c
  4368  00327C                     	endif
  4369  00327C                     	if	0	;There are less than 3 active tblptr bytes
  4370  00327C                     	endif
  4371  00327C  0008               	tblrd		*
  4372  00327E  CFF5 F01F          	movff	tablat,??_glcdDrawPixel
  4373  003282  041F               	decf	??_glcdDrawPixel,w,c
  4374  003284  6E1A               	movwf	glcdDrawPixel@YS,c
  4375  003286                     l302:
  4376                           
  4377                           ;GLCD_PIC_V1.1.c: 164: glcdDrawRectangle(XS, XS, YS, YS, color);
  4378  003286  C020  F007         	movff	glcdDrawPixel@XS,glcdDrawRectangle@XE
  4379  00328A  C01A  F008         	movff	glcdDrawPixel@YS,glcdDrawRectangle@YS
  4380  00328E  C01A  F009         	movff	glcdDrawPixel@YS,glcdDrawRectangle@YE
  4381  003292  C01B  F00A         	movff	glcdDrawPixel@color,glcdDrawRectangle@color
  4382  003296  C01C  F00B         	movff	glcdDrawPixel@color+1,glcdDrawRectangle@color+1
  4383  00329A  C01D  F00C         	movff	glcdDrawPixel@color+2,glcdDrawRectangle@color+2
  4384  00329E  C01E  F00D         	movff	glcdDrawPixel@color+3,glcdDrawRectangle@color+3
  4385  0032A2  5020               	movf	glcdDrawPixel@XS,w,c
  4386  0032A4  EC9E  F016         	call	_glcdDrawRectangle
  4387  0032A8  0012               	return		;funcret
  4388  0032AA                     __end_of_glcdDrawPixel:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           plusw0	equ	0xFEB
  4395                           fsr0h	equ	0xFEA
  4396                           fsr0l	equ	0xFE9
  4397                           wreg	equ	0xFE8
  4398                           plusw2	equ	0xFDB
  4399                           fsr2h	equ	0xFDA
  4400                           fsr2l	equ	0xFD9
  4401                           status	equ	0xFD8
  4402                           
  4403 ;; *************** function ___awmod *****************
  4404 ;; Defined at:
  4405 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/awmod.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  dividend        2    0[COMRAM] int 
  4408 ;;  divisor         2    2[COMRAM] int 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  sign            1    5[COMRAM] unsigned char 
  4411 ;;  counter         1    4[COMRAM] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  2    0[COMRAM] int 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;Total ram usage:        6 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_draw_px_char
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text7
  4435  0031CC                     __ptext7:
  4436                           	opt stack 0
  4437  0031CC                     ___awmod:
  4438                           	opt stack 27
  4439                           
  4440                           ;incstack = 0
  4441  0031CC  0E00               	movlw	0
  4442  0031CE  6E06               	movwf	___awmod@sign,c
  4443  0031D0  AE02               	btfss	___awmod@dividend+1,7,c
  4444  0031D2  D006               	goto	l621
  4445  0031D4  6C01               	negf	___awmod@dividend,c
  4446  0031D6  1E02               	comf	___awmod@dividend+1,f,c
  4447  0031D8  B0D8               	btfsc	status,0,c
  4448  0031DA  2A02               	incf	___awmod@dividend+1,f,c
  4449  0031DC  0E01               	movlw	1
  4450  0031DE  6E06               	movwf	___awmod@sign,c
  4451  0031E0                     l621:
  4452  0031E0  AE04               	btfss	___awmod@divisor+1,7,c
  4453  0031E2  D004               	goto	l622
  4454  0031E4  6C03               	negf	___awmod@divisor,c
  4455  0031E6  1E04               	comf	___awmod@divisor+1,f,c
  4456  0031E8  B0D8               	btfsc	status,0,c
  4457  0031EA  2A04               	incf	___awmod@divisor+1,f,c
  4458  0031EC                     l622:
  4459  0031EC  5003               	movf	___awmod@divisor,w,c
  4460  0031EE  1004               	iorwf	___awmod@divisor+1,w,c
  4461  0031F0  B4D8               	btfsc	status,2,c
  4462  0031F2  D018               	goto	l629
  4463  0031F4  0E01               	movlw	1
  4464  0031F6  6E05               	movwf	___awmod@counter,c
  4465  0031F8  D004               	goto	l624
  4466  0031FA  90D8               	bcf	status,0,c
  4467  0031FC  3603               	rlcf	___awmod@divisor,f,c
  4468  0031FE  3604               	rlcf	___awmod@divisor+1,f,c
  4469  003200  2A05               	incf	___awmod@counter,f,c
  4470  003202                     l624:
  4471  003202  AE04               	btfss	___awmod@divisor+1,7,c
  4472  003204  D7FA               	goto	l625
  4473  003206                     u1520:
  4474  003206  5003               	movf	___awmod@divisor,w,c
  4475  003208  5C01               	subwf	___awmod@dividend,w,c
  4476  00320A  5004               	movf	___awmod@divisor+1,w,c
  4477  00320C  5802               	subwfb	___awmod@dividend+1,w,c
  4478  00320E  A0D8               	btfss	status,0,c
  4479  003210  D004               	goto	l628
  4480  003212  5003               	movf	___awmod@divisor,w,c
  4481  003214  5E01               	subwf	___awmod@dividend,f,c
  4482  003216  5004               	movf	___awmod@divisor+1,w,c
  4483  003218  5A02               	subwfb	___awmod@dividend+1,f,c
  4484  00321A                     l628:
  4485  00321A  90D8               	bcf	status,0,c
  4486  00321C  3204               	rrcf	___awmod@divisor+1,f,c
  4487  00321E  3203               	rrcf	___awmod@divisor,f,c
  4488  003220  2E05               	decfsz	___awmod@counter,f,c
  4489  003222  D7F1               	goto	u1520
  4490  003224                     l629:
  4491  003224  5006               	movf	___awmod@sign,w,c
  4492  003226  B4D8               	btfsc	status,2,c
  4493  003228  D004               	goto	l630
  4494  00322A  6C01               	negf	___awmod@dividend,c
  4495  00322C  1E02               	comf	___awmod@dividend+1,f,c
  4496  00322E  B0D8               	btfsc	status,0,c
  4497  003230  2A02               	incf	___awmod@dividend+1,f,c
  4498  003232                     l630:
  4499  003232  C001  F001         	movff	___awmod@dividend,?___awmod
  4500  003236  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4501  00323A  0012               	return	
  4502  00323C                     __end_of___awmod:
  4503                           	opt stack 0
  4504                           tblptru	equ	0xFF8
  4505                           tblptrh	equ	0xFF7
  4506                           tblptrl	equ	0xFF6
  4507                           tablat	equ	0xFF5
  4508                           plusw0	equ	0xFEB
  4509                           fsr0h	equ	0xFEA
  4510                           fsr0l	equ	0xFE9
  4511                           wreg	equ	0xFE8
  4512                           plusw2	equ	0xFDB
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function ___awdiv *****************
  4518 ;; Defined at:
  4519 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/awdiv.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  dividend        2    0[COMRAM] int 
  4522 ;;  divisor         2    2[COMRAM] int 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  quotient        2    6[COMRAM] int 
  4525 ;;  sign            1    5[COMRAM] unsigned char 
  4526 ;;  counter         1    4[COMRAM] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  2    0[COMRAM] int 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;Total ram usage:        8 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_draw_px_char
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text8
  4550  0030CC                     __ptext8:
  4551                           	opt stack 0
  4552  0030CC                     ___awdiv:
  4553                           	opt stack 27
  4554                           
  4555                           ;incstack = 0
  4556  0030CC  0E00               	movlw	0
  4557  0030CE  6E06               	movwf	___awdiv@sign,c
  4558  0030D0  AE04               	btfss	___awdiv@divisor+1,7,c
  4559  0030D2  D006               	goto	l608
  4560  0030D4  6C03               	negf	___awdiv@divisor,c
  4561  0030D6  1E04               	comf	___awdiv@divisor+1,f,c
  4562  0030D8  B0D8               	btfsc	status,0,c
  4563  0030DA  2A04               	incf	___awdiv@divisor+1,f,c
  4564  0030DC  0E01               	movlw	1
  4565  0030DE  6E06               	movwf	___awdiv@sign,c
  4566  0030E0                     l608:
  4567  0030E0  AE02               	btfss	___awdiv@dividend+1,7,c
  4568  0030E2  D006               	goto	l609
  4569  0030E4  6C01               	negf	___awdiv@dividend,c
  4570  0030E6  1E02               	comf	___awdiv@dividend+1,f,c
  4571  0030E8  B0D8               	btfsc	status,0,c
  4572  0030EA  2A02               	incf	___awdiv@dividend+1,f,c
  4573  0030EC  0E01               	movlw	1
  4574  0030EE  1A06               	xorwf	___awdiv@sign,f,c
  4575  0030F0                     l609:
  4576  0030F0  0E00               	movlw	0
  4577  0030F2  6E08               	movwf	___awdiv@quotient+1,c
  4578  0030F4  0E00               	movlw	0
  4579  0030F6  6E07               	movwf	___awdiv@quotient,c
  4580  0030F8  5003               	movf	___awdiv@divisor,w,c
  4581  0030FA  1004               	iorwf	___awdiv@divisor+1,w,c
  4582  0030FC  B4D8               	btfsc	status,2,c
  4583  0030FE  D01C               	goto	l616
  4584  003100  0E01               	movlw	1
  4585  003102  6E05               	movwf	___awdiv@counter,c
  4586  003104  D004               	goto	l611
  4587  003106  90D8               	bcf	status,0,c
  4588  003108  3603               	rlcf	___awdiv@divisor,f,c
  4589  00310A  3604               	rlcf	___awdiv@divisor+1,f,c
  4590  00310C  2A05               	incf	___awdiv@counter,f,c
  4591  00310E                     l611:
  4592  00310E  AE04               	btfss	___awdiv@divisor+1,7,c
  4593  003110  D7FA               	goto	l612
  4594  003112                     u1460:
  4595  003112  90D8               	bcf	status,0,c
  4596  003114  3607               	rlcf	___awdiv@quotient,f,c
  4597  003116  3608               	rlcf	___awdiv@quotient+1,f,c
  4598  003118  5003               	movf	___awdiv@divisor,w,c
  4599  00311A  5C01               	subwf	___awdiv@dividend,w,c
  4600  00311C  5004               	movf	___awdiv@divisor+1,w,c
  4601  00311E  5802               	subwfb	___awdiv@dividend+1,w,c
  4602  003120  A0D8               	btfss	status,0,c
  4603  003122  D005               	goto	l615
  4604  003124  5003               	movf	___awdiv@divisor,w,c
  4605  003126  5E01               	subwf	___awdiv@dividend,f,c
  4606  003128  5004               	movf	___awdiv@divisor+1,w,c
  4607  00312A  5A02               	subwfb	___awdiv@dividend+1,f,c
  4608  00312C  8007               	bsf	___awdiv@quotient,0,c
  4609  00312E                     l615:
  4610  00312E  90D8               	bcf	status,0,c
  4611  003130  3204               	rrcf	___awdiv@divisor+1,f,c
  4612  003132  3203               	rrcf	___awdiv@divisor,f,c
  4613  003134  2E05               	decfsz	___awdiv@counter,f,c
  4614  003136  D7ED               	goto	u1460
  4615  003138                     l616:
  4616  003138  5006               	movf	___awdiv@sign,w,c
  4617  00313A  B4D8               	btfsc	status,2,c
  4618  00313C  D004               	goto	l617
  4619  00313E  6C07               	negf	___awdiv@quotient,c
  4620  003140  1E08               	comf	___awdiv@quotient+1,f,c
  4621  003142  B0D8               	btfsc	status,0,c
  4622  003144  2A08               	incf	___awdiv@quotient+1,f,c
  4623  003146                     l617:
  4624  003146  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4625  00314A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4626  00314E  0012               	return	
  4627  003150                     __end_of___awdiv:
  4628                           	opt stack 0
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           plusw0	equ	0xFEB
  4634                           fsr0h	equ	0xFEA
  4635                           fsr0l	equ	0xFE9
  4636                           wreg	equ	0xFE8
  4637                           plusw2	equ	0xFDB
  4638                           fsr2h	equ	0xFDA
  4639                           fsr2l	equ	0xFD9
  4640                           status	equ	0xFD8
  4641                           
  4642 ;; *************** function _init *****************
  4643 ;; Defined at:
  4644 ;;		line 20 in file "main.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    5
  4665 ;; This function calls:
  4666 ;;		_initGLCD
  4667 ;; This function is called by:
  4668 ;;		_main
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text9
  4673  003398                     __ptext9:
  4674                           	opt stack 0
  4675  003398                     _init:
  4676                           	opt stack 25
  4677                           
  4678                           ;main.c: 25: LATA = 0x00;
  4679                           
  4680                           ;incstack = 0
  4681  003398  0E00               	movlw	0
  4682  00339A  6E89               	movwf	3977,c	;volatile
  4683                           
  4684                           ;main.c: 26: LATB = 0x00;
  4685  00339C  0E00               	movlw	0
  4686  00339E  6E8A               	movwf	3978,c	;volatile
  4687                           
  4688                           ;main.c: 27: LATC = 0x00;
  4689  0033A0  0E00               	movlw	0
  4690  0033A2  6E8B               	movwf	3979,c	;volatile
  4691                           
  4692                           ;main.c: 28: LATD = 0x00;
  4693  0033A4  0E00               	movlw	0
  4694  0033A6  6E8C               	movwf	3980,c	;volatile
  4695                           
  4696                           ;main.c: 29: LATE = 0x00;
  4697  0033A8  0E00               	movlw	0
  4698  0033AA  6E8D               	movwf	3981,c	;volatile
  4699                           
  4700                           ;main.c: 33: TRISA = 0xFF;
  4701  0033AC  6892               	setf	3986,c	;volatile
  4702                           
  4703                           ;main.c: 34: TRISB = 0xFF;
  4704  0033AE  6893               	setf	3987,c	;volatile
  4705                           
  4706                           ;main.c: 35: TRISC = 0b10000000;
  4707  0033B0  0E80               	movlw	128
  4708  0033B2  6E94               	movwf	3988,c	;volatile
  4709                           
  4710                           ;main.c: 39: TRISD = 0b00000001;
  4711  0033B4  0E01               	movlw	1
  4712  0033B6  6E95               	movwf	3989,c	;volatile
  4713                           
  4714                           ;main.c: 45: TRISE = 0b00000100;
  4715  0033B8  0E04               	movlw	4
  4716  0033BA  6E96               	movwf	3990,c	;volatile
  4717                           
  4718                           ;main.c: 52: ADCON0 = 0x00;
  4719  0033BC  0E00               	movlw	0
  4720  0033BE  6EC2               	movwf	4034,c	;volatile
  4721                           
  4722                           ;main.c: 53: ADCON1 = 0b00001111;
  4723  0033C0  0E0F               	movlw	15
  4724  0033C2  6EC1               	movwf	4033,c	;volatile
  4725                           
  4726                           ;main.c: 57: initGLCD();
  4727  0033C4  EC18  F015         	call	_initGLCD	;wreg free
  4728  0033C8  0012               	return		;funcret
  4729  0033CA                     __end_of_init:
  4730                           	opt stack 0
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           plusw0	equ	0xFEB
  4736                           fsr0h	equ	0xFEA
  4737                           fsr0l	equ	0xFE9
  4738                           wreg	equ	0xFE8
  4739                           plusw2	equ	0xFDB
  4740                           fsr2h	equ	0xFDA
  4741                           fsr2l	equ	0xFD9
  4742                           status	equ	0xFD8
  4743                           
  4744 ;; *************** function _initGLCD *****************
  4745 ;; Defined at:
  4746 ;;		line 238 in file "GLCD_PIC_V1.1.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    4
  4767 ;; This function calls:
  4768 ;;		_glcdDrawRectangle
  4769 ;;		_glcdSetCOLMOD
  4770 ;;		_glcdTransfer
  4771 ;;		_spiInit
  4772 ;; This function is called by:
  4773 ;;		_init
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text10
  4778  002A30                     __ptext10:
  4779                           	opt stack 0
  4780  002A30                     _initGLCD:
  4781                           	opt stack 25
  4782                           
  4783                           ;GLCD_PIC_V1.1.c: 262: LATDbits.LATD0 = 1;
  4784                           
  4785                           ;incstack = 0
  4786  002A30  808C               	bsf	3980,0,c	;volatile
  4787                           
  4788                           ;GLCD_PIC_V1.1.c: 263: LATDbits.LATD1 = 1;
  4789  002A32  828C               	bsf	3980,1,c	;volatile
  4790                           
  4791                           ;GLCD_PIC_V1.1.c: 264: TRISDbits.TRISD0 = 0;
  4792  002A34  9095               	bcf	3989,0,c	;volatile
  4793                           
  4794                           ;GLCD_PIC_V1.1.c: 265: TRISDbits.TRISD1 = 0;
  4795  002A36  9295               	bcf	3989,1,c	;volatile
  4796                           
  4797                           ;GLCD_PIC_V1.1.c: 268: spiInit(4);
  4798  002A38  0E04               	movlw	4
  4799  002A3A  EC7D  F019         	call	_spiInit
  4800                           
  4801                           ;GLCD_PIC_V1.1.c: 272: _delay((unsigned long)((20)*(40000000/4000.0)));
  4802  002A3E  0E02               	movlw	2
  4803  002A40  6E1B               	movwf	(??_initGLCD+1)& (0+255),c
  4804  002A42  0E04               	movlw	4
  4805  002A44  6E1A               	movwf	??_initGLCD& (0+255),c
  4806  002A46  0EBA               	movlw	186
  4807  002A48                     u2577:
  4808  002A48  2EE8               	decfsz	wreg,f,c
  4809  002A4A  D7FE               	bra	u2577
  4810  002A4C  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  4811  002A4E  D7FC               	bra	u2577
  4812  002A50  2E1B               	decfsz	(??_initGLCD+1)& (0+255),f,c
  4813  002A52  D7FA               	bra	u2577
  4814  002A54  D000               	nop2	
  4815                           
  4816                           ;GLCD_PIC_V1.1.c: 275: { glcdTransfer(INST_SWRESET, 1); _delay((unsigned long)((130)*(40
      +                          000000/4000.0))); };
  4817  002A56  0E01               	movlw	1
  4818  002A58  6E04               	movwf	glcdTransfer@cmd,c
  4819  002A5A  0E47               	movlw	low GLCD_PIC@INST_SWRESET
  4820  002A5C  6EF6               	movwf	tblptrl,c
  4821  002A5E                     	if	1	;There is more than 1 active tblptr byte
  4822  002A5E  0E10               	movlw	high GLCD_PIC@INST_SWRESET
  4823  002A60  6EF7               	movwf	tblptrh,c
  4824  002A62                     	endif
  4825  002A62                     	if	0	;There are less than 3 active tblptr bytes
  4826  002A62                     	endif
  4827  002A62  0008               	tblrd		*
  4828  002A64  50F5               	movf	tablat,w,c
  4829  002A66  ECE5  F019         	call	_glcdTransfer
  4830  002A6A  0E07               	movlw	7
  4831  002A6C  6E1B               	movwf	(??_initGLCD+1)& (0+255),c
  4832  002A6E  0E99               	movlw	153
  4833  002A70  6E1A               	movwf	??_initGLCD& (0+255),c
  4834  002A72  0E49               	movlw	73
  4835  002A74                     u2587:
  4836  002A74  2EE8               	decfsz	wreg,f,c
  4837  002A76  D7FE               	bra	u2587
  4838  002A78  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  4839  002A7A  D7FC               	bra	u2587
  4840  002A7C  2E1B               	decfsz	(??_initGLCD+1)& (0+255),f,c
  4841  002A7E  D7FA               	bra	u2587
  4842  002A80  F000               	nop	
  4843                           
  4844                           ;GLCD_PIC_V1.1.c: 277: { glcdTransfer(INST_SLPOUT, 1); _delay((unsigned long)((130)*(400
      +                          00000/4000.0))); };
  4845  002A82  0E01               	movlw	1
  4846  002A84  6E04               	movwf	glcdTransfer@cmd,c
  4847  002A86  0E45               	movlw	low GLCD_PIC@INST_SLPOUT
  4848  002A88  6EF6               	movwf	tblptrl,c
  4849  002A8A                     	if	1	;There is more than 1 active tblptr byte
  4850  002A8A  0E10               	movlw	high GLCD_PIC@INST_SLPOUT
  4851  002A8C  6EF7               	movwf	tblptrh,c
  4852  002A8E                     	endif
  4853  002A8E                     	if	0	;There are less than 3 active tblptr bytes
  4854  002A8E                     	endif
  4855  002A8E  0008               	tblrd		*
  4856  002A90  50F5               	movf	tablat,w,c
  4857  002A92  ECE5  F019         	call	_glcdTransfer
  4858  002A96  0E07               	movlw	7
  4859  002A98  6E1B               	movwf	(??_initGLCD+1)& (0+255),c
  4860  002A9A  0E99               	movlw	153
  4861  002A9C  6E1A               	movwf	??_initGLCD& (0+255),c
  4862  002A9E  0E49               	movlw	73
  4863  002AA0                     u2597:
  4864  002AA0  2EE8               	decfsz	wreg,f,c
  4865  002AA2  D7FE               	bra	u2597
  4866  002AA4  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  4867  002AA6  D7FC               	bra	u2597
  4868  002AA8  2E1B               	decfsz	(??_initGLCD+1)& (0+255),f,c
  4869  002AAA  D7FA               	bra	u2597
  4870  002AAC  F000               	nop	
  4871                           
  4872                           ;GLCD_PIC_V1.1.c: 280: glcdTransfer(INST_FRMCTR1, 1);
  4873  002AAE  0E01               	movlw	1
  4874  002AB0  6E04               	movwf	glcdTransfer@cmd,c
  4875  002AB2  0E33               	movlw	low GLCD_PIC@INST_FRMCTR1
  4876  002AB4  6EF6               	movwf	tblptrl,c
  4877  002AB6                     	if	1	;There is more than 1 active tblptr byte
  4878  002AB6  0E10               	movlw	high GLCD_PIC@INST_FRMCTR1
  4879  002AB8  6EF7               	movwf	tblptrh,c
  4880  002ABA                     	endif
  4881  002ABA                     	if	0	;There are less than 3 active tblptr bytes
  4882  002ABA                     	endif
  4883  002ABA  0008               	tblrd		*
  4884  002ABC  50F5               	movf	tablat,w,c
  4885  002ABE  ECE5  F019         	call	_glcdTransfer
  4886                           
  4887                           ;GLCD_PIC_V1.1.c: 281: glcdTransfer(0x00, 0);
  4888  002AC2  0E00               	movlw	0
  4889  002AC4  6E04               	movwf	glcdTransfer@cmd,c
  4890  002AC6  0E00               	movlw	0
  4891  002AC8  ECE5  F019         	call	_glcdTransfer
  4892                           
  4893                           ;GLCD_PIC_V1.1.c: 282: glcdTransfer(0x06, 0);
  4894  002ACC  0E00               	movlw	0
  4895  002ACE  6E04               	movwf	glcdTransfer@cmd,c
  4896  002AD0  0E06               	movlw	6
  4897  002AD2  ECE5  F019         	call	_glcdTransfer
  4898                           
  4899                           ;GLCD_PIC_V1.1.c: 283: glcdTransfer(0x03, 0);
  4900  002AD6  0E00               	movlw	0
  4901  002AD8  6E04               	movwf	glcdTransfer@cmd,c
  4902  002ADA  0E03               	movlw	3
  4903  002ADC  ECE5  F019         	call	_glcdTransfer
  4904                           
  4905                           ;GLCD_PIC_V1.1.c: 285: glcdTransfer(INST_FRMCTR2, 1);
  4906  002AE0  0E01               	movlw	1
  4907  002AE2  6E04               	movwf	glcdTransfer@cmd,c
  4908  002AE4  0E32               	movlw	low GLCD_PIC@INST_FRMCTR2
  4909  002AE6  6EF6               	movwf	tblptrl,c
  4910  002AE8                     	if	1	;There is more than 1 active tblptr byte
  4911  002AE8  0E10               	movlw	high GLCD_PIC@INST_FRMCTR2
  4912  002AEA  6EF7               	movwf	tblptrh,c
  4913  002AEC                     	endif
  4914  002AEC                     	if	0	;There are less than 3 active tblptr bytes
  4915  002AEC                     	endif
  4916  002AEC  0008               	tblrd		*
  4917  002AEE  50F5               	movf	tablat,w,c
  4918  002AF0  ECE5  F019         	call	_glcdTransfer
  4919                           
  4920                           ;GLCD_PIC_V1.1.c: 286: glcdTransfer(0x01, 0);
  4921  002AF4  0E00               	movlw	0
  4922  002AF6  6E04               	movwf	glcdTransfer@cmd,c
  4923  002AF8  0E01               	movlw	1
  4924  002AFA  ECE5  F019         	call	_glcdTransfer
  4925                           
  4926                           ;GLCD_PIC_V1.1.c: 287: glcdTransfer(0x2C, 0);
  4927  002AFE  0E00               	movlw	0
  4928  002B00  6E04               	movwf	glcdTransfer@cmd,c
  4929  002B02  0E2C               	movlw	44
  4930  002B04  ECE5  F019         	call	_glcdTransfer
  4931                           
  4932                           ;GLCD_PIC_V1.1.c: 288: glcdTransfer(0x2D, 0);
  4933  002B08  0E00               	movlw	0
  4934  002B0A  6E04               	movwf	glcdTransfer@cmd,c
  4935  002B0C  0E2D               	movlw	45
  4936  002B0E  ECE5  F019         	call	_glcdTransfer
  4937                           
  4938                           ;GLCD_PIC_V1.1.c: 290: glcdTransfer(INST_FRMCTR3, 1);
  4939  002B12  0E01               	movlw	1
  4940  002B14  6E04               	movwf	glcdTransfer@cmd,c
  4941  002B16  0E31               	movlw	low GLCD_PIC@INST_FRMCTR3
  4942  002B18  6EF6               	movwf	tblptrl,c
  4943  002B1A                     	if	1	;There is more than 1 active tblptr byte
  4944  002B1A  0E10               	movlw	high GLCD_PIC@INST_FRMCTR3
  4945  002B1C  6EF7               	movwf	tblptrh,c
  4946  002B1E                     	endif
  4947  002B1E                     	if	0	;There are less than 3 active tblptr bytes
  4948  002B1E                     	endif
  4949  002B1E  0008               	tblrd		*
  4950  002B20  50F5               	movf	tablat,w,c
  4951  002B22  ECE5  F019         	call	_glcdTransfer
  4952                           
  4953                           ;GLCD_PIC_V1.1.c: 291: glcdTransfer(0x01, 0);
  4954  002B26  0E00               	movlw	0
  4955  002B28  6E04               	movwf	glcdTransfer@cmd,c
  4956  002B2A  0E01               	movlw	1
  4957  002B2C  ECE5  F019         	call	_glcdTransfer
  4958                           
  4959                           ;GLCD_PIC_V1.1.c: 292: glcdTransfer(0x2C, 0);
  4960  002B30  0E00               	movlw	0
  4961  002B32  6E04               	movwf	glcdTransfer@cmd,c
  4962  002B34  0E2C               	movlw	44
  4963  002B36  ECE5  F019         	call	_glcdTransfer
  4964                           
  4965                           ;GLCD_PIC_V1.1.c: 293: glcdTransfer(0x2D, 0);
  4966  002B3A  0E00               	movlw	0
  4967  002B3C  6E04               	movwf	glcdTransfer@cmd,c
  4968  002B3E  0E2D               	movlw	45
  4969  002B40  ECE5  F019         	call	_glcdTransfer
  4970                           
  4971                           ;GLCD_PIC_V1.1.c: 295: glcdTransfer(INST_INVCTR, 1);
  4972  002B44  0E01               	movlw	1
  4973  002B46  6E04               	movwf	glcdTransfer@cmd,c
  4974  002B48  0E30               	movlw	low GLCD_PIC@INST_INVCTR
  4975  002B4A  6EF6               	movwf	tblptrl,c
  4976  002B4C                     	if	1	;There is more than 1 active tblptr byte
  4977  002B4C  0E10               	movlw	high GLCD_PIC@INST_INVCTR
  4978  002B4E  6EF7               	movwf	tblptrh,c
  4979  002B50                     	endif
  4980  002B50                     	if	0	;There are less than 3 active tblptr bytes
  4981  002B50                     	endif
  4982  002B50  0008               	tblrd		*
  4983  002B52  50F5               	movf	tablat,w,c
  4984  002B54  ECE5  F019         	call	_glcdTransfer
  4985                           
  4986                           ;GLCD_PIC_V1.1.c: 296: glcdTransfer(0x00, 0);
  4987  002B58  0E00               	movlw	0
  4988  002B5A  6E04               	movwf	glcdTransfer@cmd,c
  4989  002B5C  0E00               	movlw	0
  4990  002B5E  ECE5  F019         	call	_glcdTransfer
  4991                           
  4992                           ;GLCD_PIC_V1.1.c: 299: glcdTransfer(INST_PWCTR1, 1);
  4993  002B62  0E01               	movlw	1
  4994  002B64  6E04               	movwf	glcdTransfer@cmd,c
  4995  002B66  0E2F               	movlw	low GLCD_PIC@INST_PWCTR1
  4996  002B68  6EF6               	movwf	tblptrl,c
  4997  002B6A                     	if	1	;There is more than 1 active tblptr byte
  4998  002B6A  0E10               	movlw	high GLCD_PIC@INST_PWCTR1
  4999  002B6C  6EF7               	movwf	tblptrh,c
  5000  002B6E                     	endif
  5001  002B6E                     	if	0	;There are less than 3 active tblptr bytes
  5002  002B6E                     	endif
  5003  002B6E  0008               	tblrd		*
  5004  002B70  50F5               	movf	tablat,w,c
  5005  002B72  ECE5  F019         	call	_glcdTransfer
  5006                           
  5007                           ;GLCD_PIC_V1.1.c: 300: glcdTransfer(0xA2, 0);
  5008  002B76  0E00               	movlw	0
  5009  002B78  6E04               	movwf	glcdTransfer@cmd,c
  5010  002B7A  0EA2               	movlw	162
  5011  002B7C  ECE5  F019         	call	_glcdTransfer
  5012                           
  5013                           ;GLCD_PIC_V1.1.c: 301: glcdTransfer(0x02, 0);
  5014  002B80  0E00               	movlw	0
  5015  002B82  6E04               	movwf	glcdTransfer@cmd,c
  5016  002B84  0E02               	movlw	2
  5017  002B86  ECE5  F019         	call	_glcdTransfer
  5018                           
  5019                           ;GLCD_PIC_V1.1.c: 302: glcdTransfer(0x84, 0);
  5020  002B8A  0E00               	movlw	0
  5021  002B8C  6E04               	movwf	glcdTransfer@cmd,c
  5022  002B8E  0E84               	movlw	132
  5023  002B90  ECE5  F019         	call	_glcdTransfer
  5024                           
  5025                           ;GLCD_PIC_V1.1.c: 304: glcdTransfer(INST_PWCTR2, 1);
  5026  002B94  0E01               	movlw	1
  5027  002B96  6E04               	movwf	glcdTransfer@cmd,c
  5028  002B98  0E2E               	movlw	low GLCD_PIC@INST_PWCTR2
  5029  002B9A  6EF6               	movwf	tblptrl,c
  5030  002B9C                     	if	1	;There is more than 1 active tblptr byte
  5031  002B9C  0E10               	movlw	high GLCD_PIC@INST_PWCTR2
  5032  002B9E  6EF7               	movwf	tblptrh,c
  5033  002BA0                     	endif
  5034  002BA0                     	if	0	;There are less than 3 active tblptr bytes
  5035  002BA0                     	endif
  5036  002BA0  0008               	tblrd		*
  5037  002BA2  50F5               	movf	tablat,w,c
  5038  002BA4  ECE5  F019         	call	_glcdTransfer
  5039                           
  5040                           ;GLCD_PIC_V1.1.c: 305: glcdTransfer(0xC5, 0);
  5041  002BA8  0E00               	movlw	0
  5042  002BAA  6E04               	movwf	glcdTransfer@cmd,c
  5043  002BAC  0EC5               	movlw	197
  5044  002BAE  ECE5  F019         	call	_glcdTransfer
  5045                           
  5046                           ;GLCD_PIC_V1.1.c: 307: glcdTransfer(INST_PWCTR3, 1);
  5047  002BB2  0E01               	movlw	1
  5048  002BB4  6E04               	movwf	glcdTransfer@cmd,c
  5049  002BB6  0E2D               	movlw	low GLCD_PIC@INST_PWCTR3
  5050  002BB8  6EF6               	movwf	tblptrl,c
  5051  002BBA                     	if	1	;There is more than 1 active tblptr byte
  5052  002BBA  0E10               	movlw	high GLCD_PIC@INST_PWCTR3
  5053  002BBC  6EF7               	movwf	tblptrh,c
  5054  002BBE                     	endif
  5055  002BBE                     	if	0	;There are less than 3 active tblptr bytes
  5056  002BBE                     	endif
  5057  002BBE  0008               	tblrd		*
  5058  002BC0  50F5               	movf	tablat,w,c
  5059  002BC2  ECE5  F019         	call	_glcdTransfer
  5060                           
  5061                           ;GLCD_PIC_V1.1.c: 308: glcdTransfer(0x0A, 0);
  5062  002BC6  0E00               	movlw	0
  5063  002BC8  6E04               	movwf	glcdTransfer@cmd,c
  5064  002BCA  0E0A               	movlw	10
  5065  002BCC  ECE5  F019         	call	_glcdTransfer
  5066                           
  5067                           ;GLCD_PIC_V1.1.c: 309: glcdTransfer(0x00, 0);
  5068  002BD0  0E00               	movlw	0
  5069  002BD2  6E04               	movwf	glcdTransfer@cmd,c
  5070  002BD4  0E00               	movlw	0
  5071  002BD6  ECE5  F019         	call	_glcdTransfer
  5072                           
  5073                           ;GLCD_PIC_V1.1.c: 311: glcdTransfer(INST_PWCTR4, 1);
  5074  002BDA  0E01               	movlw	1
  5075  002BDC  6E04               	movwf	glcdTransfer@cmd,c
  5076  002BDE  0E2C               	movlw	low GLCD_PIC@INST_PWCTR4
  5077  002BE0  6EF6               	movwf	tblptrl,c
  5078  002BE2                     	if	1	;There is more than 1 active tblptr byte
  5079  002BE2  0E10               	movlw	high GLCD_PIC@INST_PWCTR4
  5080  002BE4  6EF7               	movwf	tblptrh,c
  5081  002BE6                     	endif
  5082  002BE6                     	if	0	;There are less than 3 active tblptr bytes
  5083  002BE6                     	endif
  5084  002BE6  0008               	tblrd		*
  5085  002BE8  50F5               	movf	tablat,w,c
  5086  002BEA  ECE5  F019         	call	_glcdTransfer
  5087                           
  5088                           ;GLCD_PIC_V1.1.c: 312: glcdTransfer(0x8A, 0);
  5089  002BEE  0E00               	movlw	0
  5090  002BF0  6E04               	movwf	glcdTransfer@cmd,c
  5091  002BF2  0E8A               	movlw	138
  5092  002BF4  ECE5  F019         	call	_glcdTransfer
  5093                           
  5094                           ;GLCD_PIC_V1.1.c: 313: glcdTransfer(0x2A, 0);
  5095  002BF8  0E00               	movlw	0
  5096  002BFA  6E04               	movwf	glcdTransfer@cmd,c
  5097  002BFC  0E2A               	movlw	42
  5098  002BFE  ECE5  F019         	call	_glcdTransfer
  5099                           
  5100                           ;GLCD_PIC_V1.1.c: 315: glcdTransfer(INST_PWCTR5, 1);
  5101  002C02  0E01               	movlw	1
  5102  002C04  6E04               	movwf	glcdTransfer@cmd,c
  5103  002C06  0E2B               	movlw	low GLCD_PIC@INST_PWCTR5
  5104  002C08  6EF6               	movwf	tblptrl,c
  5105  002C0A                     	if	1	;There is more than 1 active tblptr byte
  5106  002C0A  0E10               	movlw	high GLCD_PIC@INST_PWCTR5
  5107  002C0C  6EF7               	movwf	tblptrh,c
  5108  002C0E                     	endif
  5109  002C0E                     	if	0	;There are less than 3 active tblptr bytes
  5110  002C0E                     	endif
  5111  002C0E  0008               	tblrd		*
  5112  002C10  50F5               	movf	tablat,w,c
  5113  002C12  ECE5  F019         	call	_glcdTransfer
  5114                           
  5115                           ;GLCD_PIC_V1.1.c: 316: glcdTransfer(0x8A, 0);
  5116  002C16  0E00               	movlw	0
  5117  002C18  6E04               	movwf	glcdTransfer@cmd,c
  5118  002C1A  0E8A               	movlw	138
  5119  002C1C  ECE5  F019         	call	_glcdTransfer
  5120                           
  5121                           ;GLCD_PIC_V1.1.c: 317: glcdTransfer(0x2A, 0);
  5122  002C20  0E00               	movlw	0
  5123  002C22  6E04               	movwf	glcdTransfer@cmd,c
  5124  002C24  0E2A               	movlw	42
  5125  002C26  ECE5  F019         	call	_glcdTransfer
  5126                           
  5127                           ;GLCD_PIC_V1.1.c: 320: glcdTransfer(INST_VMCTR1, 1);
  5128  002C2A  0E01               	movlw	1
  5129  002C2C  6E04               	movwf	glcdTransfer@cmd,c
  5130  002C2E  0E2A               	movlw	low GLCD_PIC@INST_VMCTR1
  5131  002C30  6EF6               	movwf	tblptrl,c
  5132  002C32                     	if	1	;There is more than 1 active tblptr byte
  5133  002C32  0E10               	movlw	high GLCD_PIC@INST_VMCTR1
  5134  002C34  6EF7               	movwf	tblptrh,c
  5135  002C36                     	endif
  5136  002C36                     	if	0	;There are less than 3 active tblptr bytes
  5137  002C36                     	endif
  5138  002C36  0008               	tblrd		*
  5139  002C38  50F5               	movf	tablat,w,c
  5140  002C3A  ECE5  F019         	call	_glcdTransfer
  5141                           
  5142                           ;GLCD_PIC_V1.1.c: 321: glcdTransfer(0x3C, 0);
  5143  002C3E  0E00               	movlw	0
  5144  002C40  6E04               	movwf	glcdTransfer@cmd,c
  5145  002C42  0E3C               	movlw	60
  5146  002C44  ECE5  F019         	call	_glcdTransfer
  5147                           
  5148                           ;GLCD_PIC_V1.1.c: 323: glcdTransfer(INST_INVOFF, 1);
  5149  002C48  0E01               	movlw	1
  5150  002C4A  6E04               	movwf	glcdTransfer@cmd,c
  5151  002C4C  0E42               	movlw	low GLCD_PIC@INST_INVOFF
  5152  002C4E  6EF6               	movwf	tblptrl,c
  5153  002C50                     	if	1	;There is more than 1 active tblptr byte
  5154  002C50  0E10               	movlw	high GLCD_PIC@INST_INVOFF
  5155  002C52  6EF7               	movwf	tblptrh,c
  5156  002C54                     	endif
  5157  002C54                     	if	0	;There are less than 3 active tblptr bytes
  5158  002C54                     	endif
  5159  002C54  0008               	tblrd		*
  5160  002C56  50F5               	movf	tablat,w,c
  5161  002C58  ECE5  F019         	call	_glcdTransfer
  5162                           
  5163                           ;GLCD_PIC_V1.1.c: 331: glcdSetCOLMOD(18);
  5164  002C5C  0E12               	movlw	18
  5165  002C5E  EC55  F019         	call	_glcdSetCOLMOD
  5166                           
  5167                           ;GLCD_PIC_V1.1.c: 334: glcdTransfer(INST_GAMSET, 1);
  5168  002C62  0E01               	movlw	1
  5169  002C64  6E04               	movwf	glcdTransfer@cmd,c
  5170  002C66  0E40               	movlw	low GLCD_PIC@INST_GAMSET
  5171  002C68  6EF6               	movwf	tblptrl,c
  5172  002C6A                     	if	1	;There is more than 1 active tblptr byte
  5173  002C6A  0E10               	movlw	high GLCD_PIC@INST_GAMSET
  5174  002C6C  6EF7               	movwf	tblptrh,c
  5175  002C6E                     	endif
  5176  002C6E                     	if	0	;There are less than 3 active tblptr bytes
  5177  002C6E                     	endif
  5178  002C6E  0008               	tblrd		*
  5179  002C70  50F5               	movf	tablat,w,c
  5180  002C72  ECE5  F019         	call	_glcdTransfer
  5181                           
  5182                           ;GLCD_PIC_V1.1.c: 335: glcdTransfer(0x01, 0);
  5183  002C76  0E00               	movlw	0
  5184  002C78  6E04               	movwf	glcdTransfer@cmd,c
  5185  002C7A  0E01               	movlw	1
  5186  002C7C  ECE5  F019         	call	_glcdTransfer
  5187                           
  5188                           ;GLCD_PIC_V1.1.c: 337: glcdTransfer(INST_IDMOFF, 1);
  5189  002C80  0E01               	movlw	1
  5190  002C82  6E04               	movwf	glcdTransfer@cmd,c
  5191  002C84  0E36               	movlw	low GLCD_PIC@INST_IDMOFF
  5192  002C86  6EF6               	movwf	tblptrl,c
  5193  002C88                     	if	1	;There is more than 1 active tblptr byte
  5194  002C88  0E10               	movlw	high GLCD_PIC@INST_IDMOFF
  5195  002C8A  6EF7               	movwf	tblptrh,c
  5196  002C8C                     	endif
  5197  002C8C                     	if	0	;There are less than 3 active tblptr bytes
  5198  002C8C                     	endif
  5199  002C8C  0008               	tblrd		*
  5200  002C8E  50F5               	movf	tablat,w,c
  5201  002C90  ECE5  F019         	call	_glcdTransfer
  5202                           
  5203                           ;GLCD_PIC_V1.1.c: 339: glcdTransfer(INST_NORON, 1);
  5204  002C94  0E01               	movlw	1
  5205  002C96  6E04               	movwf	glcdTransfer@cmd,c
  5206  002C98  0E43               	movlw	low GLCD_PIC@INST_NORON
  5207  002C9A  6EF6               	movwf	tblptrl,c
  5208  002C9C                     	if	1	;There is more than 1 active tblptr byte
  5209  002C9C  0E10               	movlw	high GLCD_PIC@INST_NORON
  5210  002C9E  6EF7               	movwf	tblptrh,c
  5211  002CA0                     	endif
  5212  002CA0                     	if	0	;There are less than 3 active tblptr bytes
  5213  002CA0                     	endif
  5214  002CA0  0008               	tblrd		*
  5215  002CA2  50F5               	movf	tablat,w,c
  5216  002CA4  ECE5  F019         	call	_glcdTransfer
  5217                           
  5218                           ;GLCD_PIC_V1.1.c: 342: MADCTLbits.MX = 1;
  5219  002CA8  8C48               	bsf	_MADCTLbits,6,c
  5220                           
  5221                           ;GLCD_PIC_V1.1.c: 343: MADCTLbits.MY = 1;
  5222  002CAA  8E48               	bsf	_MADCTLbits,7,c
  5223                           
  5224                           ;GLCD_PIC_V1.1.c: 344: MADCTLbits.MV = 1;
  5225  002CAC  8A48               	bsf	_MADCTLbits,5,c
  5226                           
  5227                           ;GLCD_PIC_V1.1.c: 345: MADCTLbits.ML = 0;
  5228  002CAE  9848               	bcf	_MADCTLbits,4,c
  5229                           
  5230                           ;GLCD_PIC_V1.1.c: 346: MADCTLbits.RGB = 0;
  5231  002CB0  9648               	bcf	_MADCTLbits,3,c
  5232                           
  5233                           ;GLCD_PIC_V1.1.c: 347: MADCTLbits.MH = 0;
  5234  002CB2  9448               	bcf	_MADCTLbits,2,c
  5235                           
  5236                           ;GLCD_PIC_V1.1.c: 348: { glcdTransfer(INST_MADCTL, 1); glcdTransfer(MADCTLbits.reg, 0);}
      +                          ;
  5237  002CB4  0E01               	movlw	1
  5238  002CB6  6E04               	movwf	glcdTransfer@cmd,c
  5239  002CB8  0E37               	movlw	low GLCD_PIC@INST_MADCTL
  5240  002CBA  6EF6               	movwf	tblptrl,c
  5241  002CBC                     	if	1	;There is more than 1 active tblptr byte
  5242  002CBC  0E10               	movlw	high GLCD_PIC@INST_MADCTL
  5243  002CBE  6EF7               	movwf	tblptrh,c
  5244  002CC0                     	endif
  5245  002CC0                     	if	0	;There are less than 3 active tblptr bytes
  5246  002CC0                     	endif
  5247  002CC0  0008               	tblrd		*
  5248  002CC2  50F5               	movf	tablat,w,c
  5249  002CC4  ECE5  F019         	call	_glcdTransfer
  5250  002CC8  0E00               	movlw	0
  5251  002CCA  6E04               	movwf	glcdTransfer@cmd,c
  5252  002CCC  5048               	movf	_MADCTLbits,w,c
  5253  002CCE  ECE5  F019         	call	_glcdTransfer
  5254                           
  5255                           ;GLCD_PIC_V1.1.c: 352: glcdDrawRectangle(0, GLCD_SIZE_HORZ, 0, GLCD_SIZE_VERT, BLACK);
  5256  002CD2  0E6A               	movlw	low _GLCD_SIZE_HORZ
  5257  002CD4  6EF6               	movwf	tblptrl,c
  5258  002CD6                     	if	1	;There is more than 1 active tblptr byte
  5259  002CD6  0E10               	movlw	high _GLCD_SIZE_HORZ
  5260  002CD8  6EF7               	movwf	tblptrh,c
  5261  002CDA                     	endif
  5262  002CDA                     	if	0	;There are less than 3 active tblptr bytes
  5263  002CDA                     	endif
  5264  002CDA  0008               	tblrd		*
  5265  002CDC  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
  5266  002CE0  0E00               	movlw	0
  5267  002CE2  6E08               	movwf	glcdDrawRectangle@YS,c
  5268  002CE4  0E69               	movlw	low _GLCD_SIZE_VERT
  5269  002CE6  6EF6               	movwf	tblptrl,c
  5270  002CE8                     	if	1	;There is more than 1 active tblptr byte
  5271  002CE8  0E10               	movlw	high _GLCD_SIZE_VERT
  5272  002CEA  6EF7               	movwf	tblptrh,c
  5273  002CEC                     	endif
  5274  002CEC                     	if	0	;There are less than 3 active tblptr bytes
  5275  002CEC                     	endif
  5276  002CEC  0008               	tblrd		*
  5277  002CEE  CFF5 F009          	movff	tablat,glcdDrawRectangle@YE
  5278  002CF2  0E25               	movlw	low _BLACK
  5279  002CF4  6EF6               	movwf	tblptrl,c
  5280  002CF6                     	if	1	;There is more than 1 active tblptr byte
  5281  002CF6  0E10               	movlw	high _BLACK
  5282  002CF8  6EF7               	movwf	tblptrh,c
  5283  002CFA                     	endif
  5284  002CFA                     	if	0	;There are less than 3 active tblptr bytes
  5285  002CFA                     	endif
  5286  002CFA  0009               	tblrd		*+
  5287  002CFC  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  5288  002D00  0009               	tblrd		*+
  5289  002D02  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  5290  002D06  0009               	tblrd		*+
  5291  002D08  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  5292  002D0C  000A               	tblrd		*-
  5293  002D0E  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  5294  002D12  0E00               	movlw	0
  5295  002D14  EC9E  F016         	call	_glcdDrawRectangle
  5296                           
  5297                           ;GLCD_PIC_V1.1.c: 354: glcdTransfer(INST_DISPON, 1);
  5298  002D18  0E01               	movlw	1
  5299  002D1A  6E04               	movwf	glcdTransfer@cmd,c
  5300  002D1C  0E3E               	movlw	low GLCD_PIC@INST_DISPON
  5301  002D1E  6EF6               	movwf	tblptrl,c
  5302  002D20                     	if	1	;There is more than 1 active tblptr byte
  5303  002D20  0E10               	movlw	high GLCD_PIC@INST_DISPON
  5304  002D22  6EF7               	movwf	tblptrh,c
  5305  002D24                     	endif
  5306  002D24                     	if	0	;There are less than 3 active tblptr bytes
  5307  002D24                     	endif
  5308  002D24  0008               	tblrd		*
  5309  002D26  50F5               	movf	tablat,w,c
  5310  002D28  ECE5  F019         	call	_glcdTransfer
  5311                           
  5312                           ;GLCD_PIC_V1.1.c: 355: _delay((unsigned long)((10)*(40000000/4000.0)));
  5313  002D2C  0E82               	movlw	130
  5314  002D2E  6E1A               	movwf	??_initGLCD& (0+255),c
  5315  002D30  0EDE               	movlw	222
  5316  002D32                     u2607:
  5317  002D32  2EE8               	decfsz	wreg,f,c
  5318  002D34  D7FE               	bra	u2607
  5319  002D36  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  5320  002D38  D7FC               	bra	u2607
  5321  002D3A  0012               	return		;funcret
  5322  002D3C                     __end_of_initGLCD:
  5323                           	opt stack 0
  5324                           tblptru	equ	0xFF8
  5325                           tblptrh	equ	0xFF7
  5326                           tblptrl	equ	0xFF6
  5327                           tablat	equ	0xFF5
  5328                           plusw0	equ	0xFEB
  5329                           fsr0h	equ	0xFEA
  5330                           fsr0l	equ	0xFE9
  5331                           wreg	equ	0xFE8
  5332                           plusw2	equ	0xFDB
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _spiInit *****************
  5338 ;; Defined at:
  5339 ;;		line 54 in file "SPI_PIC.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  divider         1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  divider         1    0[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        1 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_initGLCD
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text11
  5367  0032FA                     __ptext11:
  5368                           	opt stack 0
  5369  0032FA                     _spiInit:
  5370                           	opt stack 28
  5371                           
  5372                           ;incstack = 0
  5373                           ;spiInit@divider stored from wreg
  5374  0032FA  6E01               	movwf	spiInit@divider,c
  5375                           
  5376                           ;SPI_PIC.c: 65: SSPCON1bits.SSPEN = 0;
  5377  0032FC  9AC6               	bcf	4038,5,c	;volatile
  5378                           
  5379                           ;SPI_PIC.c: 66: SSPSTAT = 0x00;
  5380  0032FE  0E00               	movlw	0
  5381  003300  6EC7               	movwf	4039,c	;volatile
  5382                           
  5383                           ;SPI_PIC.c: 71: switch(divider){
  5384  003302  D007               	goto	l171
  5385  003304                     
  5386                           ;SPI_PIC.c: 76: SSPCON1 = 0b00010001;
  5387  003304  0E11               	movlw	17
  5388  003306  D003               	goto	L4
  5389  003308                     
  5390                           ;SPI_PIC.c: 79: SSPCON1 = 0b00010010;
  5391  003308  0E12               	movlw	18
  5392  00330A  D001               	goto	L4
  5393  00330C                     
  5394                           ;SPI_PIC.c: 82: SSPCON1 = 0b00010000;
  5395  00330C  0E10               	movlw	16
  5396  00330E                     L4:
  5397  00330E  6EC6               	movwf	4038,c	;volatile
  5398                           
  5399                           ;SPI_PIC.c: 83: }
  5400  003310  D00B               	goto	l173
  5401  003312                     l171:
  5402  003312  5001               	movf	spiInit@divider,w,c
  5403                           
  5404                           ; Switch size 1, requested type "space"
  5405                           ; Number of cases is 3, Range of values is 4 to 64
  5406                           ; switch strategies available:
  5407                           ; Name         Instructions Cycles
  5408                           ; simple_byte           10     6 (average)
  5409                           ;	Chosen strategy is simple_byte
  5410  003314  0A04               	xorlw	4	; case 4
  5411  003316  B4D8               	btfsc	status,2,c
  5412  003318  D7F9               	goto	l176
  5413  00331A  0A14               	xorlw	20	; case 16
  5414  00331C  B4D8               	btfsc	status,2,c
  5415  00331E  D7F2               	goto	l174
  5416  003320  0A50               	xorlw	80	; case 64
  5417  003322  B4D8               	btfsc	status,2,c
  5418  003324  D7F1               	goto	l175
  5419  003326  D7F2               	goto	l176
  5420  003328                     l173:
  5421                           
  5422                           ;SPI_PIC.c: 86: TRISCbits.TRISC5 = 0;
  5423  003328  9A94               	bcf	3988,5,c	;volatile
  5424                           
  5425                           ;SPI_PIC.c: 87: TRISCbits.TRISC4 = 1;
  5426  00332A  8894               	bsf	3988,4,c	;volatile
  5427                           
  5428                           ;SPI_PIC.c: 88: TRISCbits.TRISC3 = 0;
  5429  00332C  9694               	bcf	3988,3,c	;volatile
  5430                           
  5431                           ;SPI_PIC.c: 91: SSPCON1bits.SSPEN = 1;
  5432  00332E  8AC6               	bsf	4038,5,c	;volatile
  5433  003330  0012               	return		;funcret
  5434  003332                     __end_of_spiInit:
  5435                           	opt stack 0
  5436                           tblptru	equ	0xFF8
  5437                           tblptrh	equ	0xFF7
  5438                           tblptrl	equ	0xFF6
  5439                           tablat	equ	0xFF5
  5440                           plusw0	equ	0xFEB
  5441                           fsr0h	equ	0xFEA
  5442                           fsr0l	equ	0xFE9
  5443                           wreg	equ	0xFE8
  5444                           plusw2	equ	0xFDB
  5445                           fsr2h	equ	0xFDA
  5446                           fsr2l	equ	0xFD9
  5447                           status	equ	0xFD8
  5448                           
  5449 ;; *************** function _glcdSetCOLMOD *****************
  5450 ;; Defined at:
  5451 ;;		line 167 in file "GLCD_PIC_V1.1.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  numBitsPerPi    1    wreg     unsigned char 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  numBitsPerPi    1    6[COMRAM] unsigned char 
  5456 ;;  rawData         2    7[COMRAM] unsigned short 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;Total ram usage:        3 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    3
  5473 ;; This function calls:
  5474 ;;		_glcdTransfer
  5475 ;; This function is called by:
  5476 ;;		_initGLCD
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text12
  5481  0032AA                     __ptext12:
  5482                           	opt stack 0
  5483  0032AA                     _glcdSetCOLMOD:
  5484                           	opt stack 25
  5485                           
  5486                           ;incstack = 0
  5487                           ;glcdSetCOLMOD@numBitsPerPixel stored from wreg
  5488  0032AA  6E07               	movwf	glcdSetCOLMOD@numBitsPerPixel,c
  5489                           
  5490                           ;GLCD_PIC_V1.1.c: 176: unsigned short rawData;
  5491                           ;GLCD_PIC_V1.1.c: 177: switch(numBitsPerPixel){
  5492  0032AC  D00D               	goto	l306
  5493  0032AE                     
  5494                           ;GLCD_PIC_V1.1.c: 179: rawData = 0b00000011;
  5495  0032AE  0E00               	movlw	0
  5496  0032B0  6E09               	movwf	glcdSetCOLMOD@rawData+1,c
  5497  0032B2  0E03               	movlw	3
  5498  0032B4  D003               	goto	L6
  5499  0032B6                     
  5500                           ;GLCD_PIC_V1.1.c: 182: rawData = 0b00000101;
  5501  0032B6  0E00               	movlw	0
  5502  0032B8  6E09               	movwf	glcdSetCOLMOD@rawData+1,c
  5503  0032BA  0E05               	movlw	5
  5504  0032BC                     L6:
  5505  0032BC  6E08               	movwf	glcdSetCOLMOD@rawData,c
  5506                           
  5507                           ;GLCD_PIC_V1.1.c: 186: break;
  5508  0032BE  D00D               	goto	l308
  5509  0032C0                     
  5510                           ;GLCD_PIC_V1.1.c: 188: rawData = 0b00000110;
  5511  0032C0  0E00               	movlw	0
  5512  0032C2  6E09               	movwf	glcdSetCOLMOD@rawData+1,c
  5513  0032C4  0E06               	movlw	6
  5514  0032C6  D7FA               	goto	L6
  5515  0032C8                     l306:
  5516  0032C8  5007               	movf	glcdSetCOLMOD@numBitsPerPixel,w,c
  5517                           
  5518                           ; Switch size 1, requested type "space"
  5519                           ; Number of cases is 3, Range of values is 12 to 18
  5520                           ; switch strategies available:
  5521                           ; Name         Instructions Cycles
  5522                           ; simple_byte           10     6 (average)
  5523                           ;	Chosen strategy is simple_byte
  5524  0032CA  0A0C               	xorlw	12	; case 12
  5525  0032CC  B4D8               	btfsc	status,2,c
  5526  0032CE  D7EF               	goto	l307
  5527  0032D0  0A1C               	xorlw	28	; case 16
  5528  0032D2  B4D8               	btfsc	status,2,c
  5529  0032D4  D7F0               	goto	l309
  5530  0032D6  0A02               	xorlw	2	; case 18
  5531  0032D8  D7F3               	goto	l311
  5532  0032DA                     l308:
  5533                           
  5534                           ;GLCD_PIC_V1.1.c: 191: glcdTransfer(INST_COLMOD, 1);
  5535  0032DA  0E01               	movlw	1
  5536  0032DC  6E04               	movwf	glcdTransfer@cmd,c
  5537  0032DE  0E34               	movlw	low GLCD_PIC@INST_COLMOD
  5538  0032E0  6EF6               	movwf	tblptrl,c
  5539  0032E2                     	if	1	;There is more than 1 active tblptr byte
  5540  0032E2  0E10               	movlw	high GLCD_PIC@INST_COLMOD
  5541  0032E4  6EF7               	movwf	tblptrh,c
  5542  0032E6                     	endif
  5543  0032E6                     	if	0	;There are less than 3 active tblptr bytes
  5544  0032E6                     	endif
  5545  0032E6  0008               	tblrd		*
  5546  0032E8  50F5               	movf	tablat,w,c
  5547  0032EA  ECE5  F019         	call	_glcdTransfer
  5548                           
  5549                           ;GLCD_PIC_V1.1.c: 192: glcdTransfer(rawData, 0);
  5550  0032EE  0E00               	movlw	0
  5551  0032F0  6E04               	movwf	glcdTransfer@cmd,c
  5552  0032F2  5008               	movf	glcdSetCOLMOD@rawData,w,c
  5553  0032F4  ECE5  F019         	call	_glcdTransfer
  5554  0032F8  0012               	return		;funcret
  5555  0032FA                     __end_of_glcdSetCOLMOD:
  5556                           	opt stack 0
  5557                           tblptru	equ	0xFF8
  5558                           tblptrh	equ	0xFF7
  5559                           tblptrl	equ	0xFF6
  5560                           tablat	equ	0xFF5
  5561                           plusw0	equ	0xFEB
  5562                           fsr0h	equ	0xFEA
  5563                           fsr0l	equ	0xFE9
  5564                           wreg	equ	0xFE8
  5565                           plusw2	equ	0xFDB
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _glcdDrawRectangle *****************
  5571 ;; Defined at:
  5572 ;;		line 38 in file "GLCD_PIC_V1.1.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  XS              1    wreg     unsigned char 
  5575 ;;  XE              1    6[COMRAM] unsigned char 
  5576 ;;  YS              1    7[COMRAM] unsigned char 
  5577 ;;  YE              1    8[COMRAM] unsigned char 
  5578 ;;  color           4    9[COMRAM] unsigned long 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  XS              1   24[COMRAM] unsigned char 
  5581 ;;  i               2   19[COMRAM] unsigned short 
  5582 ;;  colorData       3   21[COMRAM] unsigned char [3]
  5583 ;;  numLoops        2   17[COMRAM] unsigned short 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5593 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;Total ram usage:       19 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    3
  5600 ;; This function calls:
  5601 ;;		___wmul
  5602 ;;		_glcdTransfer
  5603 ;;		_spiSend
  5604 ;; This function is called by:
  5605 ;;		_main
  5606 ;;		_glcdDrawPixel
  5607 ;;		_initGLCD
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text13
  5612  002D3C                     __ptext13:
  5613                           	opt stack 0
  5614  002D3C                     _glcdDrawRectangle:
  5615                           	opt stack 23
  5616                           
  5617                           ;incstack = 0
  5618                           ;glcdDrawRectangle@XS stored from wreg
  5619  002D3C  6E19               	movwf	glcdDrawRectangle@XS,c
  5620                           
  5621                           ;GLCD_PIC_V1.1.c: 58: if(MADCTLbits.MX == 1 && MADCTLbits.MV ==1){
  5622  002D3E  BC48               	btfsc	_MADCTLbits,6,c
  5623  002D40  AA48               	btfss	_MADCTLbits,5,c
  5624  002D42  D005               	goto	l287
  5625                           
  5626                           ;GLCD_PIC_V1.1.c: 60: YS += 3;
  5627  002D44  0E03               	movlw	3
  5628  002D46  2608               	addwf	glcdDrawRectangle@YS,f,c
  5629                           
  5630                           ;GLCD_PIC_V1.1.c: 61: YE += 3;
  5631  002D48  0E03               	movlw	3
  5632  002D4A  2609               	addwf	glcdDrawRectangle@YE,f,c
  5633  002D4C  D015               	goto	l1886
  5634  002D4E                     l287:
  5635                           
  5636                           ;GLCD_PIC_V1.1.c: 65: else if(MADCTLbits.MY == 1){
  5637  002D4E  AE48               	btfss	_MADCTLbits,7,c
  5638  002D50  D008               	goto	l289
  5639                           
  5640                           ;GLCD_PIC_V1.1.c: 67: YS += 2;
  5641  002D52  0E02               	movlw	2
  5642  002D54  2608               	addwf	glcdDrawRectangle@YS,f,c
  5643                           
  5644                           ;GLCD_PIC_V1.1.c: 68: YE += 2;
  5645  002D56  0E02               	movlw	2
  5646  002D58  2609               	addwf	glcdDrawRectangle@YE,f,c
  5647                           
  5648                           ;GLCD_PIC_V1.1.c: 69: XS += 3;
  5649  002D5A  0E03               	movlw	3
  5650  002D5C  2619               	addwf	glcdDrawRectangle@XS,f,c
  5651                           
  5652                           ;GLCD_PIC_V1.1.c: 70: XE += 3;
  5653  002D5E  0E03               	movlw	3
  5654  002D60  D00E               	goto	L8
  5655  002D62                     l289:
  5656                           
  5657                           ;GLCD_PIC_V1.1.c: 72: else if(MADCTLbits.MX == 1){
  5658  002D62  AC48               	btfss	_MADCTLbits,6,c
  5659  002D64  D007               	goto	l291
  5660                           
  5661                           ;GLCD_PIC_V1.1.c: 74: YS += 2;
  5662  002D66  0E02               	movlw	2
  5663  002D68  2608               	addwf	glcdDrawRectangle@YS,f,c
  5664                           
  5665                           ;GLCD_PIC_V1.1.c: 75: YE += 2;
  5666  002D6A  0E02               	movlw	2
  5667  002D6C  2609               	addwf	glcdDrawRectangle@YE,f,c
  5668                           
  5669                           ;GLCD_PIC_V1.1.c: 76: XS += 1;
  5670  002D6E  2A19               	incf	glcdDrawRectangle@XS,f,c
  5671                           
  5672                           ;GLCD_PIC_V1.1.c: 77: XE += 1;
  5673  002D70  2A07               	incf	glcdDrawRectangle@XE,f,c
  5674                           
  5675                           ;GLCD_PIC_V1.1.c: 78: }
  5676  002D72  D006               	goto	l292
  5677  002D74                     l291:
  5678                           
  5679                           ;GLCD_PIC_V1.1.c: 79: else{
  5680                           ;GLCD_PIC_V1.1.c: 81: YS += 1;
  5681  002D74  2A08               	incf	glcdDrawRectangle@YS,f,c
  5682                           
  5683                           ;GLCD_PIC_V1.1.c: 82: YE += 1;
  5684  002D76  2A09               	incf	glcdDrawRectangle@YE,f,c
  5685  002D78                     l1886:
  5686                           
  5687                           ;GLCD_PIC_V1.1.c: 83: XS += 2;
  5688  002D78  0E02               	movlw	2
  5689  002D7A  2619               	addwf	glcdDrawRectangle@XS,f,c
  5690                           
  5691                           ;GLCD_PIC_V1.1.c: 84: XE += 2;
  5692  002D7C  0E02               	movlw	2
  5693  002D7E                     L8:
  5694  002D7E  2607               	addwf	glcdDrawRectangle@XE,f,c
  5695  002D80                     l292:
  5696                           
  5697                           ;GLCD_PIC_V1.1.c: 85: }
  5698                           ;GLCD_PIC_V1.1.c: 89: glcdTransfer(INST_RASET, 1);
  5699  002D80  0E01               	movlw	1
  5700  002D82  6E04               	movwf	glcdTransfer@cmd,c
  5701  002D84  0E3C               	movlw	low GLCD_PIC@INST_RASET
  5702  002D86  6EF6               	movwf	tblptrl,c
  5703  002D88                     	if	1	;There is more than 1 active tblptr byte
  5704  002D88  0E10               	movlw	high GLCD_PIC@INST_RASET
  5705  002D8A  6EF7               	movwf	tblptrh,c
  5706  002D8C                     	endif
  5707  002D8C                     	if	0	;There are less than 3 active tblptr bytes
  5708  002D8C                     	endif
  5709  002D8C  0008               	tblrd		*
  5710  002D8E  50F5               	movf	tablat,w,c
  5711  002D90  ECE5  F019         	call	_glcdTransfer
  5712                           
  5713                           ;GLCD_PIC_V1.1.c: 90: glcdTransfer(0x00, 0);
  5714  002D94  0E00               	movlw	0
  5715  002D96  6E04               	movwf	glcdTransfer@cmd,c
  5716  002D98  0E00               	movlw	0
  5717  002D9A  ECE5  F019         	call	_glcdTransfer
  5718                           
  5719                           ;GLCD_PIC_V1.1.c: 91: glcdTransfer(XS, 0);
  5720  002D9E  0E00               	movlw	0
  5721  002DA0  6E04               	movwf	glcdTransfer@cmd,c
  5722  002DA2  5019               	movf	glcdDrawRectangle@XS,w,c
  5723  002DA4  ECE5  F019         	call	_glcdTransfer
  5724                           
  5725                           ;GLCD_PIC_V1.1.c: 92: glcdTransfer(0x00, 0);
  5726  002DA8  0E00               	movlw	0
  5727  002DAA  6E04               	movwf	glcdTransfer@cmd,c
  5728  002DAC  0E00               	movlw	0
  5729  002DAE  ECE5  F019         	call	_glcdTransfer
  5730                           
  5731                           ;GLCD_PIC_V1.1.c: 93: glcdTransfer(XE - 1, 0);
  5732  002DB2  0E00               	movlw	0
  5733  002DB4  6E04               	movwf	glcdTransfer@cmd,c
  5734  002DB6  0407               	decf	glcdDrawRectangle@XE,w,c
  5735  002DB8  ECE5  F019         	call	_glcdTransfer
  5736                           
  5737                           ;GLCD_PIC_V1.1.c: 97: glcdTransfer(INST_CASET, 1);
  5738  002DBC  0E01               	movlw	1
  5739  002DBE  6E04               	movwf	glcdTransfer@cmd,c
  5740  002DC0  0E3D               	movlw	low GLCD_PIC@INST_CASET
  5741  002DC2  6EF6               	movwf	tblptrl,c
  5742  002DC4                     	if	1	;There is more than 1 active tblptr byte
  5743  002DC4  0E10               	movlw	high GLCD_PIC@INST_CASET
  5744  002DC6  6EF7               	movwf	tblptrh,c
  5745  002DC8                     	endif
  5746  002DC8                     	if	0	;There are less than 3 active tblptr bytes
  5747  002DC8                     	endif
  5748  002DC8  0008               	tblrd		*
  5749  002DCA  50F5               	movf	tablat,w,c
  5750  002DCC  ECE5  F019         	call	_glcdTransfer
  5751                           
  5752                           ;GLCD_PIC_V1.1.c: 98: glcdTransfer(0x00, 0);
  5753  002DD0  0E00               	movlw	0
  5754  002DD2  6E04               	movwf	glcdTransfer@cmd,c
  5755  002DD4  0E00               	movlw	0
  5756  002DD6  ECE5  F019         	call	_glcdTransfer
  5757                           
  5758                           ;GLCD_PIC_V1.1.c: 99: glcdTransfer(YS, 0);
  5759  002DDA  0E00               	movlw	0
  5760  002DDC  6E04               	movwf	glcdTransfer@cmd,c
  5761  002DDE  5008               	movf	glcdDrawRectangle@YS,w,c
  5762  002DE0  ECE5  F019         	call	_glcdTransfer
  5763                           
  5764                           ;GLCD_PIC_V1.1.c: 100: glcdTransfer(0x00, 0);
  5765  002DE4  0E00               	movlw	0
  5766  002DE6  6E04               	movwf	glcdTransfer@cmd,c
  5767  002DE8  0E00               	movlw	0
  5768  002DEA  ECE5  F019         	call	_glcdTransfer
  5769                           
  5770                           ;GLCD_PIC_V1.1.c: 101: glcdTransfer(YE - 1, 0);
  5771  002DEE  0E00               	movlw	0
  5772  002DF0  6E04               	movwf	glcdTransfer@cmd,c
  5773  002DF2  0409               	decf	glcdDrawRectangle@YE,w,c
  5774  002DF4  ECE5  F019         	call	_glcdTransfer
  5775                           
  5776                           ;GLCD_PIC_V1.1.c: 103: glcdTransfer(INST_RAMWR, 1);
  5777  002DF8  0E01               	movlw	1
  5778  002DFA  6E04               	movwf	glcdTransfer@cmd,c
  5779  002DFC  0E3B               	movlw	low GLCD_PIC@INST_RAMWR
  5780  002DFE  6EF6               	movwf	tblptrl,c
  5781  002E00                     	if	1	;There is more than 1 active tblptr byte
  5782  002E00  0E10               	movlw	high GLCD_PIC@INST_RAMWR
  5783  002E02  6EF7               	movwf	tblptrh,c
  5784  002E04                     	endif
  5785  002E04                     	if	0	;There are less than 3 active tblptr bytes
  5786  002E04                     	endif
  5787  002E04  0008               	tblrd		*
  5788  002E06  50F5               	movf	tablat,w,c
  5789  002E08  ECE5  F019         	call	_glcdTransfer
  5790                           
  5791                           ;GLCD_PIC_V1.1.c: 107: if((XE == XS) && (YE == YS)){
  5792  002E0C  5019               	movf	glcdDrawRectangle@XS,w,c
  5793  002E0E  1807               	xorwf	glcdDrawRectangle@XE,w,c
  5794  002E10  A4D8               	btfss	status,2,c
  5795  002E12  D014               	goto	l293
  5796  002E14  5008               	movf	glcdDrawRectangle@YS,w,c
  5797  002E16  1809               	xorwf	glcdDrawRectangle@YE,w,c
  5798  002E18  A4D8               	btfss	status,2,c
  5799  002E1A  D010               	goto	l293
  5800                           
  5801                           ;GLCD_PIC_V1.1.c: 114: glcdTransfer(color & 0xFF, 0);
  5802  002E1C  0E00               	movlw	0
  5803  002E1E  6E04               	movwf	glcdTransfer@cmd,c
  5804  002E20  500A               	movf	glcdDrawRectangle@color,w,c
  5805  002E22  ECE5  F019         	call	_glcdTransfer
  5806                           
  5807                           ;GLCD_PIC_V1.1.c: 115: glcdTransfer((color >> 8) & 0xFF, 0);
  5808  002E26  0E00               	movlw	0
  5809  002E28  6E04               	movwf	glcdTransfer@cmd,c
  5810  002E2A  500B               	movf	glcdDrawRectangle@color+1,w,c
  5811  002E2C  ECE5  F019         	call	_glcdTransfer
  5812                           
  5813                           ;GLCD_PIC_V1.1.c: 116: glcdTransfer((color >> 16) & 0xFF, 0);
  5814  002E30  0E00               	movlw	0
  5815  002E32  6E04               	movwf	glcdTransfer@cmd,c
  5816  002E34  500C               	movf	glcdDrawRectangle@color+2,w,c
  5817  002E36  ECE5  F019         	call	_glcdTransfer
  5818                           
  5819                           ;GLCD_PIC_V1.1.c: 117: }
  5820  002E3A  0012               	return	
  5821  002E3C                     l293:
  5822                           
  5823                           ;GLCD_PIC_V1.1.c: 118: else{
  5824                           ;GLCD_PIC_V1.1.c: 130: unsigned short numLoops = (XE - XS) * (YE - YS);
  5825  002E3C  5019               	movf	glcdDrawRectangle@XS,w,c
  5826  002E3E  6E0E               	movwf	??_glcdDrawRectangle& (0+255),c
  5827  002E40  6A0F               	clrf	(??_glcdDrawRectangle+1)& (0+255),c
  5828  002E42  1E0E               	comf	??_glcdDrawRectangle,f,c
  5829  002E44  1E0F               	comf	??_glcdDrawRectangle+1,f,c
  5830  002E46  4A0E               	infsnz	??_glcdDrawRectangle,f,c
  5831  002E48  2A0F               	incf	??_glcdDrawRectangle+1,f,c
  5832  002E4A  5007               	movf	glcdDrawRectangle@XE,w,c
  5833  002E4C  240E               	addwf	??_glcdDrawRectangle,w,c
  5834  002E4E  6E01               	movwf	___wmul@multiplier,c
  5835  002E50  0E00               	movlw	0
  5836  002E52  200F               	addwfc	??_glcdDrawRectangle+1,w,c
  5837  002E54  6E02               	movwf	___wmul@multiplier+1,c
  5838  002E56  5008               	movf	glcdDrawRectangle@YS,w,c
  5839  002E58  6E10               	movwf	(??_glcdDrawRectangle+2)& (0+255),c
  5840  002E5A  6A11               	clrf	(??_glcdDrawRectangle+3)& (0+255),c
  5841  002E5C  1E10               	comf	??_glcdDrawRectangle+2,f,c
  5842  002E5E  1E11               	comf	??_glcdDrawRectangle+3,f,c
  5843  002E60  4A10               	infsnz	??_glcdDrawRectangle+2,f,c
  5844  002E62  2A11               	incf	??_glcdDrawRectangle+3,f,c
  5845  002E64  5009               	movf	glcdDrawRectangle@YE,w,c
  5846  002E66  2410               	addwf	??_glcdDrawRectangle+2,w,c
  5847  002E68  6E03               	movwf	___wmul@multiplicand,c
  5848  002E6A  0E00               	movlw	0
  5849  002E6C  2011               	addwfc	??_glcdDrawRectangle+3,w,c
  5850  002E6E  6E04               	movwf	___wmul@multiplicand+1,c
  5851  002E70  ECF9  F019         	call	___wmul	;wreg free
  5852  002E74  C001  F012         	movff	?___wmul,glcdDrawRectangle@numLoops
  5853  002E78  C002  F013         	movff	?___wmul+1,glcdDrawRectangle@numLoops+1
  5854                           
  5855                           ;GLCD_PIC_V1.1.c: 131: unsigned char colorData[3];
  5856                           ;GLCD_PIC_V1.1.c: 132: colorData[0] = color & 0xFF;
  5857  002E7C  C00A  F016         	movff	glcdDrawRectangle@color,glcdDrawRectangle@colorData
  5858                           
  5859                           ;GLCD_PIC_V1.1.c: 133: colorData[1] = (color >> 8) & 0xFF;
  5860  002E80  C00B  F017         	movff	glcdDrawRectangle@color+1,glcdDrawRectangle@colorData+1
  5861                           
  5862                           ;GLCD_PIC_V1.1.c: 134: colorData[2] = (color >> 16) & 0xFF;
  5863  002E84  C00C  F018         	movff	glcdDrawRectangle@color+2,glcdDrawRectangle@colorData+2
  5864                           
  5865                           ;GLCD_PIC_V1.1.c: 136: LATDbits.LATD0 = 0;
  5866  002E88  908C               	bcf	3980,0,c	;volatile
  5867                           
  5868                           ;GLCD_PIC_V1.1.c: 137: LATDbits.LATD1 = 1;
  5869  002E8A  828C               	bsf	3980,1,c	;volatile
  5870                           
  5871                           ;GLCD_PIC_V1.1.c: 138: for(unsigned short i = 0; i < numLoops; i++){
  5872  002E8C  0E00               	movlw	0
  5873  002E8E  6E15               	movwf	glcdDrawRectangle@i+1,c
  5874  002E90  0E00               	movlw	0
  5875  002E92  6E14               	movwf	glcdDrawRectangle@i,c
  5876  002E94  D00B               	goto	l295
  5877  002E96                     
  5878                           ;GLCD_PIC_V1.1.c: 139: spiSend(colorData[0]);
  5879  002E96  5016               	movf	glcdDrawRectangle@colorData,w,c
  5880  002E98  EC24  F01A         	call	_spiSend
  5881                           
  5882                           ;GLCD_PIC_V1.1.c: 140: spiSend(colorData[1]);
  5883  002E9C  5017               	movf	glcdDrawRectangle@colorData+1,w,c
  5884  002E9E  EC24  F01A         	call	_spiSend
  5885                           
  5886                           ;GLCD_PIC_V1.1.c: 141: spiSend(colorData[2]);
  5887  002EA2  5018               	movf	glcdDrawRectangle@colorData+2,w,c
  5888  002EA4  EC24  F01A         	call	_spiSend
  5889  002EA8  4A14               	infsnz	glcdDrawRectangle@i,f,c
  5890  002EAA  2A15               	incf	glcdDrawRectangle@i+1,f,c
  5891  002EAC                     l295:
  5892  002EAC  5012               	movf	glcdDrawRectangle@numLoops,w,c
  5893  002EAE  5C14               	subwf	glcdDrawRectangle@i,w,c
  5894  002EB0  5013               	movf	glcdDrawRectangle@numLoops+1,w,c
  5895  002EB2  5815               	subwfb	glcdDrawRectangle@i+1,w,c
  5896  002EB4  A0D8               	btfss	status,0,c
  5897  002EB6  D7EF               	goto	l296
  5898                           
  5899                           ;GLCD_PIC_V1.1.c: 142: }
  5900                           ;GLCD_PIC_V1.1.c: 143: LATDbits.LATD0 = 1;
  5901  002EB8  808C               	bsf	3980,0,c	;volatile
  5902  002EBA  0012               	return	
  5903  002EBC                     __end_of_glcdDrawRectangle:
  5904                           	opt stack 0
  5905                           tblptru	equ	0xFF8
  5906                           tblptrh	equ	0xFF7
  5907                           tblptrl	equ	0xFF6
  5908                           tablat	equ	0xFF5
  5909                           plusw0	equ	0xFEB
  5910                           fsr0h	equ	0xFEA
  5911                           fsr0l	equ	0xFE9
  5912                           wreg	equ	0xFE8
  5913                           plusw2	equ	0xFDB
  5914                           fsr2h	equ	0xFDA
  5915                           fsr2l	equ	0xFD9
  5916                           status	equ	0xFD8
  5917                           
  5918 ;; *************** function _glcdTransfer *****************
  5919 ;; Defined at:
  5920 ;;		line 18 in file "GLCD_PIC_V1.1.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  byte            1    wreg     unsigned char 
  5923 ;;  cmd             1    3[COMRAM] unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  byte            1    5[COMRAM] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5935 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;Total ram usage:        3 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    2
  5942 ;; This function calls:
  5943 ;;		_spiSend
  5944 ;; This function is called by:
  5945 ;;		_glcdDrawRectangle
  5946 ;;		_glcdSetCOLMOD
  5947 ;;		_initGLCD
  5948 ;;		_glcdSetOrigin
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text14
  5953  0033CA                     __ptext14:
  5954                           	opt stack 0
  5955  0033CA                     _glcdTransfer:
  5956                           	opt stack 23
  5957                           
  5958                           ;incstack = 0
  5959                           ;glcdTransfer@byte stored from wreg
  5960  0033CA  6E06               	movwf	glcdTransfer@byte,c
  5961                           
  5962                           ;GLCD_PIC_V1.1.c: 27: LATDbits.LATD1 = (cmd == 1) ? 0 : 1;
  5963  0033CC  0404               	decf	glcdTransfer@cmd,w,c
  5964  0033CE  B4D8               	btfsc	status,2,c
  5965  0033D0  D003               	goto	u1310
  5966  0033D2  6A05               	clrf	??_glcdTransfer& (0+255),c
  5967  0033D4  2A05               	incf	??_glcdTransfer& (0+255),f,c
  5968  0033D6  D001               	goto	u1328
  5969  0033D8                     u1310:
  5970  0033D8  6A05               	clrf	??_glcdTransfer& (0+255),c
  5971  0033DA                     u1328:
  5972  0033DA  4605               	rlncf	??_glcdTransfer,f,c
  5973  0033DC  508C               	movf	3980,w,c	;volatile
  5974  0033DE  1805               	xorwf	??_glcdTransfer,w,c
  5975  0033E0  0BFD               	andlw	-3
  5976  0033E2  1805               	xorwf	??_glcdTransfer,w,c
  5977  0033E4  6E8C               	movwf	3980,c	;volatile
  5978                           
  5979                           ;GLCD_PIC_V1.1.c: 31: LATDbits.LATD0 = 0;
  5980  0033E6  908C               	bcf	3980,0,c	;volatile
  5981                           
  5982                           ;GLCD_PIC_V1.1.c: 33: spiSend(byte);
  5983  0033E8  5006               	movf	glcdTransfer@byte,w,c
  5984  0033EA  EC24  F01A         	call	_spiSend
  5985                           
  5986                           ;GLCD_PIC_V1.1.c: 35: LATDbits.LATD0 = 1;
  5987  0033EE  808C               	bsf	3980,0,c	;volatile
  5988  0033F0  0012               	return		;funcret
  5989  0033F2                     __end_of_glcdTransfer:
  5990                           	opt stack 0
  5991                           tblptru	equ	0xFF8
  5992                           tblptrh	equ	0xFF7
  5993                           tblptrl	equ	0xFF6
  5994                           tablat	equ	0xFF5
  5995                           plusw0	equ	0xFEB
  5996                           fsr0h	equ	0xFEA
  5997                           fsr0l	equ	0xFE9
  5998                           wreg	equ	0xFE8
  5999                           plusw2	equ	0xFDB
  6000                           fsr2h	equ	0xFDA
  6001                           fsr2l	equ	0xFD9
  6002                           status	equ	0xFD8
  6003                           
  6004 ;; *************** function _spiSend *****************
  6005 ;; Defined at:
  6006 ;;		line 33 in file "SPI_PIC.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  val             1    wreg     unsigned char 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  val             1    2[COMRAM] unsigned char 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1    wreg      void 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, cstack
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;Total ram usage:        1 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    1
  6027 ;; This function calls:
  6028 ;;		_spiTransfer
  6029 ;; This function is called by:
  6030 ;;		_glcdTransfer
  6031 ;;		_glcdDrawRectangle
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text15
  6036  003448                     __ptext15:
  6037                           	opt stack 0
  6038  003448                     _spiSend:
  6039                           	opt stack 24
  6040                           
  6041                           ;incstack = 0
  6042                           ;spiSend@val stored from wreg
  6043  003448  6E03               	movwf	spiSend@val,c
  6044                           
  6045                           ;SPI_PIC.c: 41: spiTransfer(val);
  6046  00344A  5003               	movf	spiSend@val,w,c
  6047  00344C  EC0C  F01A         	call	_spiTransfer
  6048  003450  0012               	return		;funcret
  6049  003452                     __end_of_spiSend:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           plusw0	equ	0xFEB
  6056                           fsr0h	equ	0xFEA
  6057                           fsr0l	equ	0xFE9
  6058                           wreg	equ	0xFE8
  6059                           plusw2	equ	0xFDB
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _spiTransfer *****************
  6065 ;; Defined at:
  6066 ;;		line 12 in file "SPI_PIC.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  byteToTransf    1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  byteToTransf    1    1[COMRAM] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      unsigned char 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;Total ram usage:        2 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_spiSend
  6090 ;;		_spiReceive
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text16
  6095  003418                     __ptext16:
  6096                           	opt stack 0
  6097  003418                     _spiTransfer:
  6098                           	opt stack 24
  6099                           
  6100                           ;incstack = 0
  6101                           ;spiTransfer@byteToTransfer stored from wreg
  6102  003418  6E02               	movwf	spiTransfer@byteToTransfer,c
  6103                           
  6104                           ;SPI_PIC.c: 23: SSPBUF = byteToTransfer;
  6105  00341A  C002  FFC9         	movff	spiTransfer@byteToTransfer,4041	;volatile
  6106  00341E                     l1848:
  6107  00341E  B69E               	btfsc	3998,3,c	;volatile
  6108  003420  D002               	goto	u1290
  6109  003422  0E01               	movlw	1
  6110  003424  D001               	goto	u1292
  6111  003426                     u1290:
  6112  003426  0E00               	movlw	0
  6113  003428                     u1292:
  6114  003428  6E01               	movwf	??_spiTransfer& (0+255),c
  6115  00342A  B0C7               	btfsc	4039,0,c	;volatile
  6116  00342C  D002               	goto	u1300
  6117  00342E  0E01               	movlw	1
  6118  003430  D001               	goto	u1302
  6119  003432                     u1300:
  6120  003432  0E00               	movlw	0
  6121  003434                     u1302:
  6122  003434  1001               	iorwf	??_spiTransfer,w,c
  6123  003436  E1F3               	bnz	l1848
  6124                           
  6125                           ;SPI_PIC.c: 30: return SSPBUF;
  6126  003438  50C9               	movf	4041,w,c	;volatile
  6127  00343A  0012               	return	
  6128  00343C                     __end_of_spiTransfer:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           plusw0	equ	0xFEB
  6135                           fsr0h	equ	0xFEA
  6136                           fsr0l	equ	0xFE9
  6137                           wreg	equ	0xFE8
  6138                           plusw2	equ	0xFDB
  6139                           fsr2h	equ	0xFDA
  6140                           fsr2l	equ	0xFD9
  6141                           status	equ	0xFD8
  6142                           
  6143 ;; *************** function ___wmul *****************
  6144 ;; Defined at:
  6145 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  multiplier      2    0[COMRAM] unsigned int 
  6148 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  product         2    4[COMRAM] unsigned int 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  2    0[COMRAM] unsigned int 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, prodl, prodh
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;Total ram usage:        6 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_glcdDrawRectangle
  6170 ;;		_print_px_string
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text17
  6175  0033F2                     __ptext17:
  6176                           	opt stack 0
  6177  0033F2                     ___wmul:
  6178                           	opt stack 25
  6179                           
  6180                           ;incstack = 0
  6181  0033F2  5001               	movf	___wmul@multiplier,w,c
  6182  0033F4  0203               	mulwf	___wmul@multiplicand,c
  6183  0033F6  CFF3 F005          	movff	prodl,___wmul@product
  6184  0033FA  CFF4 F006          	movff	prodh,___wmul@product+1
  6185  0033FE  5001               	movf	___wmul@multiplier,w,c
  6186  003400  0204               	mulwf	___wmul@multiplicand+1,c
  6187  003402  50F3               	movf	prodl,w,c
  6188  003404  2606               	addwf	___wmul@product+1,f,c
  6189  003406  5002               	movf	___wmul@multiplier+1,w,c
  6190  003408  0203               	mulwf	___wmul@multiplicand,c
  6191  00340A  50F3               	movf	prodl,w,c
  6192  00340C  2606               	addwf	___wmul@product+1,f,c
  6193  00340E  C005  F001         	movff	___wmul@product,?___wmul
  6194  003412  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6195  003416  0012               	return	
  6196  003418                     __end_of___wmul:
  6197                           	opt stack 0
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           prodh	equ	0xFF4
  6203                           prodl	equ	0xFF3
  6204                           plusw0	equ	0xFEB
  6205                           fsr0h	equ	0xFEA
  6206                           fsr0l	equ	0xFE9
  6207                           wreg	equ	0xFE8
  6208                           plusw2	equ	0xFDB
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           tblptru	equ	0xFF8
  6213                           tblptrh	equ	0xFF7
  6214                           tblptrl	equ	0xFF6
  6215                           tablat	equ	0xFF5
  6216                           prodh	equ	0xFF4
  6217                           prodl	equ	0xFF3
  6218                           plusw0	equ	0xFEB
  6219                           fsr0h	equ	0xFEA
  6220                           fsr0l	equ	0xFE9
  6221                           wreg	equ	0xFE8
  6222                           plusw2	equ	0xFDB
  6223                           fsr2h	equ	0xFDA
  6224                           fsr2l	equ	0xFD9
  6225                           status	equ	0xFD8
  6226                           
  6227                           	psect	rparam
  6228  0000                     tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           plusw0	equ	0xFEB
  6235                           fsr0h	equ	0xFEA
  6236                           fsr0l	equ	0xFE9
  6237                           wreg	equ	0xFE8
  6238                           plusw2	equ	0xFDB
  6239                           fsr2h	equ	0xFDA
  6240                           fsr2l	equ	0xFD9
  6241                           status	equ	0xFD8


Data Sizes:
    Strings     110
    Constant    108
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      72
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    print_px_string@s	PTR unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[22]), STR_4(CODE[22]), STR_3(CODE[22]), STR_2(CODE[22]), 
		 -> STR_1(CODE[22]), 


Critical Paths under _main in COMRAM

    _main->_print_px_string
    _print_px_string->_print_px_char
    _print_px_char->_draw_px_char
    _px_map->_new_px_char
    _draw_px_char->_glcdDrawPixel
    _glcdDrawPixel->_glcdDrawRectangle
    _init->_initGLCD
    _initGLCD->_glcdDrawRectangle
    _glcdSetCOLMOD->_glcdTransfer
    _glcdDrawRectangle->___wmul
    _glcdDrawRectangle->_glcdTransfer
    _glcdTransfer->_spiSend
    _spiSend->_spiTransfer

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   47894
                  _glcdDrawRectangle
                               _init
                    _print_px_string
 ---------------------------------------------------------------------------------
 (1) _print_px_string                                     12     6      6   25553
                                             59 COMRAM    12     6      6
                             ___wmul
                      _print_px_char
 ---------------------------------------------------------------------------------
 (2) _print_px_char                                        5     0      5   23771
                                             54 COMRAM     5     0      5
                       _draw_px_char
                             _px_map
 ---------------------------------------------------------------------------------
 (3) _px_map                                              10     1      9   14705
                                             16 COMRAM    10     1      9
                        _new_px_char
 ---------------------------------------------------------------------------------
 (4) _new_px_char                                         16     8      8   14683
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) _draw_px_char                                        22    10     12    8772
                                             32 COMRAM    22    10     12
                            ___awdiv
                            ___awmod
                      _glcdDrawPixel
                             _px_map (ARG)
 ---------------------------------------------------------------------------------
 (4) _glcdDrawPixel                                        7     2      5    7027
                                             25 COMRAM     7     2      5
                            ___awdiv (ARG)
                            ___awmod (ARG)
                  _glcdDrawRectangle
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0   15774
                           _initGLCD
 ---------------------------------------------------------------------------------
 (2) _initGLCD                                             2     2      0   15774
                                             25 COMRAM     2     2      0
                  _glcdDrawRectangle
                      _glcdSetCOLMOD
                       _glcdTransfer
                            _spiInit
 ---------------------------------------------------------------------------------
 (3) _spiInit                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _glcdSetCOLMOD                                        3     3      0    4620
                                              6 COMRAM     3     3      0
                       _glcdTransfer
 ---------------------------------------------------------------------------------
 (5) _glcdDrawRectangle                                   19    12      7    6567
                                              6 COMRAM    19    12      7
                             ___wmul
                       _glcdTransfer
                            _spiSend
 ---------------------------------------------------------------------------------
 (6) _glcdTransfer                                         3     2      1    4572
                                              3 COMRAM     3     2      1
                            _spiSend
 ---------------------------------------------------------------------------------
 (6) _spiSend                                              1     1      0      44
                                              2 COMRAM     1     1      0
                        _spiTransfer
 ---------------------------------------------------------------------------------
 (7) _spiTransfer                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _glcdDrawRectangle
     ___wmul
     _glcdTransfer
       _spiSend
         _spiTransfer
     _spiSend
       _spiTransfer
   _init
     _initGLCD
       _glcdDrawRectangle
         ___wmul
         _glcdTransfer
           _spiSend
             _spiTransfer
         _spiSend
           _spiTransfer
       _glcdSetCOLMOD
         _glcdTransfer
           _spiSend
             _spiTransfer
       _glcdTransfer
         _spiSend
           _spiTransfer
       _spiInit
   _print_px_string
     ___wmul
     _print_px_char
       _draw_px_char
         ___awdiv
         ___awmod
         _glcdDrawPixel
           ___awdiv (ARG)
           ___awmod (ARG)
           _glcdDrawRectangle (ARG)
             ___wmul
             _glcdTransfer
               _spiSend
                 _spiTransfer
             _spiSend
               _spiTransfer
         _px_map (ARG)
           _new_px_char
       _px_map
         _new_px_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      48       1       56.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      34        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 23 17:27:07 2018

              _print_px_string$1144 0044                      ?_print_px_char 0037  
                       _SSPSTATbits 000FC7                      ??_glcdTransfer 0005  
                       __CFG_CPD$ON 000000                        ___awdiv@sign 0006  
               ___wmul@multiplicand 0003                         __CFG_BORV$3 000000  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                               l130 2EE8                                 l132 2F62  
                               l301 3262                                 l133 2FE4  
                               l302 3286                                 l134 2FFC  
                               l311 32C0                                 l400 201E  
                               l401 205A                                 l306 32C8  
                               l410 2276                                 l402 2096  
                               l307 32AE                                 l171 3312  
                               l411 22B2                                 l403 20D2  
                               l139 30CA                                 l308 32DA  
                               l420 24CE                                 l412 22EE  
                               l404 210E                                 l340 120E  
                               l309 32B6                                 l173 3328  
                               l333 2762                                 l421 250A  
                               l413 232A                                 l405 214A  
                               l341 124A                                 l174 3304  
                               l430 2726                                 l422 2546  
                               l414 2366                                 l406 2186  
                               l350 1466                                 l342 1286  
                               l334 10E2                                 l175 3308  
                               l423 2582                                 l415 23A2  
                               l407 21C2                                 l351 14A2  
                               l343 12C2                                 l176 330C  
                               l424 25BE                                 l416 23DE  
                               l408 21FE                                 l360 16BE  
                               l352 14DE                                 l344 12FE  
                               l336 111E                                 l425 25FA  
                               l417 241A                                 l409 223A  
                               l361 16FA                                 l353 151A  
                               l345 133A                                 l337 115A  
                               l426 2636                                 l418 2456  
                               l370 1916                                 l362 1736  
                               l354 1556                                 l346 1376  
                               l338 1196                                 l291 2D74  
                               l611 310E                                 l427 2672  
                               l419 2492                                 l371 1952  
                               l363 1772                                 l355 1592  
                               l347 13B2                                 l339 11D2  
                               l292 2D80                                 l612 3106  
                               l428 26AE                                 l380 1B6E  
                               l372 198E                                 l364 17AE  
                               l356 15CE                                 l348 13EE  
                               l293 2E3C                                 l621 31E0  
                               l429 26EA                                 l381 1BAA  
                               l373 19CA                                 l365 17EA  
                               l357 160A                                 l349 142A  
                               l437 31AC                                 l630 3232  
                               l622 31EC                                 l390 1DC6  
                               l382 1BE6                                 l374 1A06  
                               l366 1826                                 l358 1646  
                               l438 315A                                 l295 2EAC  
                               l287 2D4E                                 l615 312E  
                               l391 1E02                                 l383 1C22  
                               l375 1A42                                 l367 1862  
                               l359 1682                                 l296 2E96  
                               l616 3138                                 l608 30E0  
                               l624 3202                                 l392 1E3E  
                               l384 1C5E                                 l376 1A7E  
                               l368 189E                                 l289 2D62  
                               l617 3146                                 l609 30F0  
                               l625 31FA                                 l393 1E7A  
                               l385 1C9A                                 l377 1ABA  
                               l369 18DA                                 l394 1EB6  
                               l386 1CD6                                 l378 1AF6  
                               l395 1EF2                                 l387 1D12  
                               l379 1B32                                 l628 321A  
                               l396 1F2E                                 l388 1D4E  
                               l629 3224                                 l397 1F6A  
                               l389 1D8A                                 l398 1FA6  
                               l399 1FE2                        __CFG_CPB$OFF 000000  
                               _RED 1019           __end_ofGLCD_PIC@INST_TEON 1039  
                      ___awmod@sign 0006                                 wreg 000FE8  
                  ?_print_px_string 003C                       ?_draw_px_char 0021  
                      __CFG_LVP$OFF 000000                        __CFG_WDT$OFF 000000  
                              l1848 341E                                l1886 2D78  
                              STR_1 106D                                STR_2 10AF  
                              STR_3 1099                                STR_4 1083  
                              STR_5 10C5                                _BLUE 1009  
                              u2001 1AB0                                u2011 1AEC  
                              u1300 3432                                u2101 1D08  
                              u2021 1B28                                u1302 3434  
                              u1310 33D8                                u2111 1D44  
                              u2031 1B64                                u2201 1F60  
                              u2121 1D80                                u2041 1BA0  
                              u2211 1F9C                                u2131 1DBC  
                              u2051 1BDC                                u1421 335C  
                              u2301 21B8                                u2221 1FD8  
                              u2141 1DF8                                u2061 1C18  
                              _LATA 000F89                                _LATB 000F8A  
                              u2311 21F4                                u2231 2014  
                              u2151 1E34                                u2071 1C54  
                              _LATC 000F8B                                u1328 33DA  
                              u1520 3206                                _LATD 000F8C  
                              u2401 2410                                u2321 2230  
                              u2241 2050                                u2161 1E70  
                              u2081 1C90                                u1601 1150  
                              _LATE 000F8D                                u1290 3426  
                              u2411 244C                                u2331 226C  
                              u2251 208C                                u2171 1EAC  
                              u2091 1CCC                                u1611 118C  
                              u1292 3428                                u1460 3112  
                              u2501 2668                                u2421 2488  
                              u2341 22A8                                u2261 20C8  
                              u2181 1EE8                                u1701 13A8  
                              u1621 11C8                                u1550 2EE6  
                              u2511 26A4                                u2431 24C4  
                              u2351 22E4                                u2271 2104  
                              u2191 1F24                                u1711 13E4  
                              u1631 1204                                u2521 26E0  
                              u2441 2500                                u2361 2320  
                              u2281 2140                                u1801 1600  
                              u1721 1420                                u1641 1240  
                              u2531 271C                                u2451 253C  
                              u2371 235C                                u2291 217C  
                              u1811 163C                                u1731 145C  
                              u1651 127C                                u2541 2758  
                              u2461 2578                                u2381 2398  
                              u1901 1858                                u1821 1678  
                              u1741 1498                                u1661 12B8  
                              u2607 2D32                                u2471 25B4  
                              u2391 23D4                                u1911 1894  
                              u1831 16B4                                u1751 14D4  
                              u1671 12F4                                u1591 1114  
                              u2551 338A                                u2481 25F0  
                              u1921 18D0                                u1841 16F0  
                              u1761 1510                                u1681 1330  
                              u2491 262C                                u1931 190C  
                              u1851 172C                                u1771 154C  
                              u1691 136C                                _GREY 1021  
                              u1941 1948                                u1861 1768  
                              u1781 1588                                u1951 1984  
                              u1871 17A4                                u1791 15C4  
                              u2577 2A48                                u1961 19C0  
                              u1881 17E0                                u2587 2A74  
                              u1971 19FC                                u1891 181C  
                              u2597 2AA0                                u1981 1A38  
                              u1991 1A74                                _main 2FFE  
                              _init 3398                                fsr0h 000FEA  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              fsr2l 000FD9                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                     __CFG_IESO$OFF 000000                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000000                               ?_main 0001  
                             ?_init 0001                     __end_of___awdiv 3150  
                             _BLACK 1025                     __end_of___awmod 323C  
                  __end_of_INST_NOP 1069                     ___awdiv@divisor 0003  
                             _GREEN 100D                     ___awdiv@counter 0005  
                             _WHITE 101D                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _SSPIF 007CF3                       __CFG_PWRT$OFF 000000  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                       __CFG_WRT3$OFF 000000  
                    __CFG_EBTR0$OFF 000000                      __CFG_FCMEN$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                    __CFG_EBTR3$OFF 000000                       __CFG_WRTB$OFF 000000  
                    ??_draw_px_char 002D                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000       __end_ofGLCD_PIC@INST_VMOFCTR2 102A  
                    __CFG_EBTRB$OFF 000000                     __end_of_spiInit 3332  
                             tablat 000FF5                     __end_of_spiSend 3452  
                             plusw0 000FEB                               plusw2 000FDB  
                             status 000FD8                      __CFG_PBADEN$ON 000000  
                      __end_of_BLUE 100D                        __end_of_GREY 1025  
                   ??_print_px_char 003C                     __initialization 343C  
                      ?_new_px_char 0001                        __end_of_main 30CC  
                      __end_of_init 33CA        glcdSetCOLMOD@numBitsPerPixel 0007  
                    __CFG_OSC$HSPLL 000000                              ??_main 0048  
                            ??_init 001C                  print_px_string@idx 0046  
                     __activetblptr 000002                              _ADCON0 000FC2  
                            _ADCON1 000FC1                     glcdDrawPixel@XS 0020  
                   glcdDrawPixel@YS 001A                    ___awdiv@dividend 0001  
                 _glcdDrawRectangle 2D3C                   __end_of_INST_TEON 1059  
                            _INDIGO 1005                __end_of_glcdTransfer 33F2  
                            _ORANGE 1015                  ?_glcdDrawRectangle 0007  
                            _VIOLET 1001                              _YELLOW 1011  
                            _SSPBUF 000FC9                      __CFG_XINST$OFF 000000  
         glcdDrawRectangle@numLoops 0012                 ??_glcdDrawRectangle 000E  
                            ___wmul 33F2                    __end_of_initGLCD 2D3C  
                         ??___awdiv 0005                      __CFG_STVREN$ON 000000  
                         ??___awmod 0005                    ___awdiv@quotient 0007  
                   ___awmod@divisor 0003            __end_ofGLCD_PIC@INST_NOP 1049  
                            _px_map 10DC                     ___awmod@counter 0005  
                      ?_spiTransfer 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ??_spiInit 0001  
                         ??_spiSend 0003           __end_of_glcdDrawRectangle 2EBC  
                        __accesstop 0080             __end_of__initialization 343E  
                     __end_of_BLACK 1029                       ___rparam_used 000001  
                     __end_of_GREEN 1011                       __end_of_WHITE 1021  
       __end_ofGLCD_PIC@INST_GAMSET 1041         __end_ofGLCD_PIC@INST_COLMOD 1035  
       __end_ofGLCD_PIC@INST_MADCTL 1038         __end_ofGLCD_PIC@INST_DISPON 103F  
       __end_ofGLCD_PIC@INST_IDMOFF 1037                      __pcstackCOMRAM 0001  
       __end_ofGLCD_PIC@INST_INVCTR 1031         __end_ofGLCD_PIC@INST_INVOFF 1043  
              __end_of_draw_px_char 2FFE         __end_ofGLCD_PIC@INST_PWCTR1 1030  
       __end_ofGLCD_PIC@INST_PWCTR2 102F         __end_ofGLCD_PIC@INST_PWCTR3 102E  
       __end_ofGLCD_PIC@INST_PWCTR4 102D         __end_ofGLCD_PIC@INST_PWCTR5 102C  
       __end_ofGLCD_PIC@INST_VMCTR1 102B         __end_ofGLCD_PIC@INST_SLPOUT 1046  
                  print_px_string@s 0040                    print_px_string@x 003C  
                  print_px_string@y 003E               __end_of_glcdDrawPixel 32AA  
                     draw_px_char@i 0035                       draw_px_char@m 0031  
                     draw_px_char@p 0025                       draw_px_char@x 0021  
                     draw_px_char@y 0023                      print_px_char@c 003B  
                    print_px_char@x 0037                      print_px_char@y 0039  
                     _INST_VMOFCTR2 1049               __end_of_glcdSetCOLMOD 32FA  
                           ?___wmul 0001                __size_of_new_px_char 0034  
                glcdDrawRectangle@i 0014                  __end_of_INST_CASET 105E  
                __end_of_INST_IDMON 1056                             ?_px_map 0011  
                __end_of_INST_INVON 1062                  __end_of_INST_RASET 105D  
                __end_of_INST_RAMWR 105C                  __end_of_INST_TEOFF 105A  
                __end_of_INST_NORON 1064                  __end_of_INST_PTLAR 105B  
                __end_of_INST_SLPIN 1067                  __end_of_INST_PTLON 1065  
             __size_of_glcdTransfer 0028          __size_of_glcdDrawRectangle 0180  
         spiTransfer@byteToTransfer 0002                             _SSPCON1 000FC6  
                           _SSPSTAT 000FC7                           ?_initGLCD 0001  
          __size_of_print_px_string 007C                  glcdDrawPixel@color 001B  
                           __Hparam 0000                      _GLCD_SIZE_HORZ 106A  
                           __Lparam 0000                      _GLCD_SIZE_VERT 1069  
              __end_of_INST_DISPOFF 1060                __end_of_INST_FRMCTR1 1054  
              __end_of_INST_FRMCTR2 1053                __end_of_INST_FRMCTR3 1052  
                           ___awdiv 30CC                             ___awmod 31CC  
                   __size_of___wmul 0026                        __psmallconst 1000  
                           __pcinit 343C                        _glcdTransfer 33CA  
                           __ramtop 1000                             __ptext0 2FFE  
                           __ptext1 3150                             __ptext2 3366  
                           __ptext3 10DC                             __ptext4 3332  
                           __ptext5 2EBC                             __ptext6 323C  
                           __ptext7 31CC                             __ptext8 30CC  
                           __ptext9 3398                     __size_of_px_map 1954  
              __end_of_INST_SWRESET 1068                    ___awmod@dividend 0001  
                           _spiInit 32FA                             _spiSend 3448  
              __size_of_spiTransfer 0024                end_of_initialization 343E  
             GLCD_PIC@INST_VMOFCTR2 1029                          ??_initGLCD 001A  
                     __Lmediumconst 0000              __end_of_GLCD_SIZE_HORZ 106B  
                         _INST_TEON 1058              __end_of_GLCD_SIZE_VERT 106A  
             __size_of_draw_px_char 0142                             px_map@c 001A  
             __end_of_print_px_char 3398                    glcdTransfer@byte 0006  
                    spiInit@divider 0001                           _TRISCbits 000F94  
                         _TRISDbits 000F95                        _draw_px_char 2EBC  
                    __end_of_INDIGO 1009                      __end_of_ORANGE 1019  
                    __end_of_VIOLET 1005                      __end_of_YELLOW 1015  
      __end_ofGLCD_PIC@INST_DISPOFF 1040        __end_ofGLCD_PIC@INST_FRMCTR1 1034  
      __end_ofGLCD_PIC@INST_FRMCTR2 1033        __end_ofGLCD_PIC@INST_FRMCTR3 1032  
                 ??_print_px_string 0042                      __end_of___wmul 3418  
      __end_ofGLCD_PIC@INST_SWRESET 1048                      __end_of_px_map 2A30  
               start_initialization 343C                         __end_of_RED 101D  
            glcdDrawRectangle@color 000A                            ??___wmul 0005  
                  __CFG_LPT1OSC$OFF 000000                            ??_px_map 001A  
                      new_px_char@a 0001                        new_px_char@b 0005  
                      new_px_char@p 0009  __end_of_GLCD_ADDRESSABLE_SIZE_HORZ 106D  
        _GLCD_ADDRESSABLE_SIZE_HORZ 106C  __end_of_GLCD_ADDRESSABLE_SIZE_VERT 106C  
        _GLCD_ADDRESSABLE_SIZE_VERT 106B                         __pbssCOMRAM 0048  
        __end_ofGLCD_PIC@INST_CASET 103E          __end_ofGLCD_PIC@INST_IDMON 1036  
        __end_ofGLCD_PIC@INST_INVON 1042          __end_ofGLCD_PIC@INST_RASET 103D  
        __end_ofGLCD_PIC@INST_RAMWR 103C                        _INST_DISPOFF 105F  
        __end_ofGLCD_PIC@INST_TEOFF 103A          __end_ofGLCD_PIC@INST_NORON 1044  
        __end_ofGLCD_PIC@INST_PTLAR 103B          __end_ofGLCD_PIC@INST_SLPIN 1047  
        __end_ofGLCD_PIC@INST_PTLON 1045                        _INST_FRMCTR1 1053  
                      _INST_FRMCTR2 1052                        _INST_FRMCTR3 1051  
                 __size_of_initGLCD 030C                        _INST_SWRESET 1067  
            __size_of_glcdDrawPixel 006E                   __CFG_CCP2MX$PORTC 000000  
                     ??_new_px_char 0009                            ?___awdiv 0001  
                          ?___awmod 0001              __size_of_glcdSetCOLMOD 0050  
                       __smallconst 1000                 glcdDrawRectangle@XE 0007  
               glcdDrawRectangle@YE 0009                 glcdDrawRectangle@XS 0019  
               glcdDrawRectangle@YS 0008                 __end_of_INST_GAMSET 1061  
                          ?_spiInit 0001                 __end_of_INST_COLMOD 1055  
                          ?_spiSend 0001                 __end_of_INST_MADCTL 1058  
               __end_of_INST_DISPON 105F                 __end_of_INST_IDMOFF 1057  
              GLCD_PIC@INST_DISPOFF 103F                 __end_of_INST_INVCTR 1051  
               __end_of_INST_INVOFF 1063                GLCD_PIC@INST_FRMCTR1 1033  
              GLCD_PIC@INST_FRMCTR2 1032                GLCD_PIC@INST_FRMCTR3 1031  
               __end_of_INST_PWCTR1 1050                 __end_of_INST_PWCTR2 104F  
               __end_of_INST_PWCTR3 104E                 __end_of_INST_PWCTR4 104D  
               __end_of_INST_PWCTR5 104C                 __end_of_INST_VMCTR1 104B  
               __end_of_INST_SLPOUT 1066                      ___wmul@product 0005  
                          _LATDbits 000F8C                GLCD_PIC@INST_SWRESET 1047  
                          _INST_NOP 1068                          spiSend@val 0003  
                  __CFG_WDTPS$32768 000000                     glcdTransfer@cmd 0004  
               __end_of_new_px_char 3366                   ___wmul@multiplier 0001  
                     ??_spiTransfer 0001                glcdSetCOLMOD@rawData 0008  
                     _glcdDrawPixel 323C                       _glcdSetCOLMOD 32AA  
                   _print_px_string 3150                            __Hrparam 0000  
                          __Lrparam 0000                  __CFG_BOREN$SBORDIS 000000  
                  __size_of___awdiv 0084                    __size_of___awmod 0070  
                       _INST_GAMSET 1060                         _INST_COLMOD 1054  
                       _INST_MADCTL 1057                         _INST_DISPON 105E  
                       _INST_IDMOFF 1056                         _INST_INVCTR 1050  
                       _INST_INVOFF 1062                      ?_glcdDrawPixel 001A  
                       _INST_PWCTR1 104F                         _INST_PWCTR2 104E  
                       _INST_PWCTR3 104D                         _INST_PWCTR4 104C  
                       _INST_PWCTR5 104B                         _INST_VMCTR1 104A  
                       _INST_SLPOUT 1065                            __ptext10 2A30  
                          __ptext11 32FA                            __ptext12 32AA  
                          __ptext13 2D3C                            __ptext14 33CA  
                          __ptext15 3448                            __ptext16 3418  
                          __ptext17 33F2                    __size_of_spiInit 0038  
                  __size_of_spiSend 000A               __end_of_INST_VMOFCTR2 104A  
                        _MADCTLbits 0048              __size_of_print_px_char 0032  
               __end_of_spiTransfer 343C                      ?_glcdSetCOLMOD 0001  
                          _initGLCD 2A30                 GLCD_PIC@INST_GAMSET 1040  
               GLCD_PIC@INST_COLMOD 1034                 GLCD_PIC@INST_MADCTL 1037  
               GLCD_PIC@INST_DISPON 103E                 GLCD_PIC@INST_IDMOFF 1036  
                     __size_of_main 00CE                       __size_of_init 0032  
               GLCD_PIC@INST_INVCTR 1030                 GLCD_PIC@INST_INVOFF 1042  
               GLCD_PIC@INST_PWCTR1 102F                 GLCD_PIC@INST_PWCTR2 102E  
               GLCD_PIC@INST_PWCTR3 102D                 GLCD_PIC@INST_PWCTR4 102C  
               GLCD_PIC@INST_PWCTR5 102B                 GLCD_PIC@INST_VMCTR1 102A  
               GLCD_PIC@INST_SLPOUT 1045                         _new_px_char 3332  
           __end_of_print_px_string 31CC                          _INST_CASET 105D  
                        _INST_IDMON 1055                          _INST_INVON 1061  
                        _INST_RASET 105C                          _INST_RAMWR 105B  
                        _INST_TEOFF 1059                          _INST_NORON 1063  
                        _INST_PTLAR 105A                          _INST_SLPIN 1066  
                        _INST_PTLON 1064                  GLCD_PIC@INST_CASET 103D  
                GLCD_PIC@INST_IDMON 1035                  GLCD_PIC@INST_INVON 1041  
                GLCD_PIC@INST_RASET 103C                  GLCD_PIC@INST_RAMWR 103B  
                GLCD_PIC@INST_TEOFF 1039                  GLCD_PIC@INST_NORON 1043  
                GLCD_PIC@INST_PTLAR 103A                  GLCD_PIC@INST_SLPIN 1046  
                GLCD_PIC@INST_PTLON 1044          glcdDrawRectangle@colorData 0016  
                     _print_px_char 3366                       ?_glcdTransfer 0004  
                   ??_glcdDrawPixel 001F                         _spiTransfer 3418  
                 GLCD_PIC@INST_TEON 1038                         _SSPCON1bits 000FC6  
                   ??_glcdSetCOLMOD 0007                    GLCD_PIC@INST_NOP 1048  
