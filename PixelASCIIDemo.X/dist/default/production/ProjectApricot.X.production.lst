

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jan 29 23:51:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataBANK0
    68  00D4DF                     __pidataBANK0:
    69                           	opt stack 0
    70                           
    71                           ;initializer for main@F3036
    72  00D4DF  45                 	db	69
    73  00D4E0  54                 	db	84
    74  00D4E1  41                 	db	65
    75  00D4E2  3A                 	db	58
    76  00D4E3  20                 	db	32
    77  00D4E4  20                 	db	32
    78  00D4E5  20                 	db	32
    79  00D4E6  20                 	db	32
    80  00D4E7  20                 	db	32
    81  00D4E8  2D                 	db	45
    82  00D4E9  20                 	db	32
    83  00D4EA  6D                 	db	109
    84  00D4EB  69                 	db	105
    85  00D4EC  6E                 	db	110
    86  00D4ED  20                 	db	32
    87  00D4EE  2D                 	db	45
    88  00D4EF  2D                 	db	45
    89  00D4F0  20                 	db	32
    90  00D4F1  73                 	db	115
    91  00D4F2  65                 	db	101
    92  00D4F3  63                 	db	99
    93  00D4F4  00                 	db	0
    94  00D4F5  00                 	db	0
    95                           
    96                           	psect	mediumconst
    97  00FDC2                     __pmediumconst:
    98                           	opt stack 0
    99  00FDC2  00                 	db	0
   100  00FDC3                     _qr:
   101                           	opt stack 0
   102  00FDC3  01                 	db	1
   103  00FDC4  01                 	db	1
   104  00FDC5  01                 	db	1
   105  00FDC6  01                 	db	1
   106  00FDC7  01                 	db	1
   107  00FDC8  01                 	db	1
   108  00FDC9  01                 	db	1
   109  00FDCA  00                 	db	0
   110  00FDCB  01                 	db	1
   111  00FDCC  01                 	db	1
   112  00FDCD  00                 	db	0
   113  00FDCE  00                 	db	0
   114  00FDCF  01                 	db	1
   115  00FDD0  00                 	db	0
   116  00FDD1  01                 	db	1
   117  00FDD2  01                 	db	1
   118  00FDD3  01                 	db	1
   119  00FDD4  01                 	db	1
   120  00FDD5  01                 	db	1
   121  00FDD6  01                 	db	1
   122  00FDD7  01                 	db	1
   123  00FDD8  01                 	db	1
   124  00FDD9  00                 	db	0
   125  00FDDA  00                 	db	0
   126  00FDDB  00                 	db	0
   127  00FDDC  00                 	db	0
   128  00FDDD  00                 	db	0
   129  00FDDE  01                 	db	1
   130  00FDDF  00                 	db	0
   131  00FDE0  00                 	db	0
   132  00FDE1  01                 	db	1
   133  00FDE2  00                 	db	0
   134  00FDE3  00                 	db	0
   135  00FDE4  01                 	db	1
   136  00FDE5  00                 	db	0
   137  00FDE6  01                 	db	1
   138  00FDE7  00                 	db	0
   139  00FDE8  00                 	db	0
   140  00FDE9  00                 	db	0
   141  00FDEA  00                 	db	0
   142  00FDEB  00                 	db	0
   143  00FDEC  01                 	db	1
   144  00FDED  01                 	db	1
   145  00FDEE  00                 	db	0
   146  00FDEF  01                 	db	1
   147  00FDF0  01                 	db	1
   148  00FDF1  01                 	db	1
   149  00FDF2  00                 	db	0
   150  00FDF3  01                 	db	1
   151  00FDF4  00                 	db	0
   152  00FDF5  01                 	db	1
   153  00FDF6  00                 	db	0
   154  00FDF7  01                 	db	1
   155  00FDF8  00                 	db	0
   156  00FDF9  01                 	db	1
   157  00FDFA  00                 	db	0
   158  00FDFB  01                 	db	1
   159  00FDFC  00                 	db	0
   160  00FDFD  01                 	db	1
   161  00FDFE  01                 	db	1
   162  00FDFF  01                 	db	1
   163  00FE00  00                 	db	0
   164  00FE01  01                 	db	1
   165  00FE02  01                 	db	1
   166  00FE03  00                 	db	0
   167  00FE04  01                 	db	1
   168  00FE05  01                 	db	1
   169  00FE06  01                 	db	1
   170  00FE07  00                 	db	0
   171  00FE08  01                 	db	1
   172  00FE09  00                 	db	0
   173  00FE0A  01                 	db	1
   174  00FE0B  00                 	db	0
   175  00FE0C  00                 	db	0
   176  00FE0D  01                 	db	1
   177  00FE0E  00                 	db	0
   178  00FE0F  00                 	db	0
   179  00FE10  01                 	db	1
   180  00FE11  00                 	db	0
   181  00FE12  01                 	db	1
   182  00FE13  01                 	db	1
   183  00FE14  01                 	db	1
   184  00FE15  00                 	db	0
   185  00FE16  01                 	db	1
   186  00FE17  01                 	db	1
   187  00FE18  00                 	db	0
   188  00FE19  01                 	db	1
   189  00FE1A  01                 	db	1
   190  00FE1B  01                 	db	1
   191  00FE1C  00                 	db	0
   192  00FE1D  01                 	db	1
   193  00FE1E  00                 	db	0
   194  00FE1F  01                 	db	1
   195  00FE20  01                 	db	1
   196  00FE21  01                 	db	1
   197  00FE22  00                 	db	0
   198  00FE23  00                 	db	0
   199  00FE24  00                 	db	0
   200  00FE25  01                 	db	1
   201  00FE26  00                 	db	0
   202  00FE27  01                 	db	1
   203  00FE28  01                 	db	1
   204  00FE29  01                 	db	1
   205  00FE2A  00                 	db	0
   206  00FE2B  01                 	db	1
   207  00FE2C  01                 	db	1
   208  00FE2D  00                 	db	0
   209  00FE2E  00                 	db	0
   210  00FE2F  00                 	db	0
   211  00FE30  00                 	db	0
   212  00FE31  00                 	db	0
   213  00FE32  01                 	db	1
   214  00FE33  00                 	db	0
   215  00FE34  00                 	db	0
   216  00FE35  00                 	db	0
   217  00FE36  00                 	db	0
   218  00FE37  00                 	db	0
   219  00FE38  00                 	db	0
   220  00FE39  00                 	db	0
   221  00FE3A  01                 	db	1
   222  00FE3B  00                 	db	0
   223  00FE3C  00                 	db	0
   224  00FE3D  00                 	db	0
   225  00FE3E  00                 	db	0
   226  00FE3F  00                 	db	0
   227  00FE40  01                 	db	1
   228  00FE41  01                 	db	1
   229  00FE42  01                 	db	1
   230  00FE43  01                 	db	1
   231  00FE44  01                 	db	1
   232  00FE45  01                 	db	1
   233  00FE46  01                 	db	1
   234  00FE47  01                 	db	1
   235  00FE48  00                 	db	0
   236  00FE49  01                 	db	1
   237  00FE4A  00                 	db	0
   238  00FE4B  01                 	db	1
   239  00FE4C  00                 	db	0
   240  00FE4D  01                 	db	1
   241  00FE4E  00                 	db	0
   242  00FE4F  01                 	db	1
   243  00FE50  01                 	db	1
   244  00FE51  01                 	db	1
   245  00FE52  01                 	db	1
   246  00FE53  01                 	db	1
   247  00FE54  01                 	db	1
   248  00FE55  01                 	db	1
   249  00FE56  00                 	db	0
   250  00FE57  00                 	db	0
   251  00FE58  00                 	db	0
   252  00FE59  00                 	db	0
   253  00FE5A  00                 	db	0
   254  00FE5B  00                 	db	0
   255  00FE5C  00                 	db	0
   256  00FE5D  00                 	db	0
   257  00FE5E  00                 	db	0
   258  00FE5F  01                 	db	1
   259  00FE60  01                 	db	1
   260  00FE61  00                 	db	0
   261  00FE62  00                 	db	0
   262  00FE63  00                 	db	0
   263  00FE64  00                 	db	0
   264  00FE65  00                 	db	0
   265  00FE66  00                 	db	0
   266  00FE67  00                 	db	0
   267  00FE68  00                 	db	0
   268  00FE69  00                 	db	0
   269  00FE6A  00                 	db	0
   270  00FE6B  01                 	db	1
   271  00FE6C  01                 	db	1
   272  00FE6D  01                 	db	1
   273  00FE6E  01                 	db	1
   274  00FE6F  00                 	db	0
   275  00FE70  00                 	db	0
   276  00FE71  01                 	db	1
   277  00FE72  00                 	db	0
   278  00FE73  01                 	db	1
   279  00FE74  00                 	db	0
   280  00FE75  01                 	db	1
   281  00FE76  00                 	db	0
   282  00FE77  00                 	db	0
   283  00FE78  01                 	db	1
   284  00FE79  00                 	db	0
   285  00FE7A  00                 	db	0
   286  00FE7B  01                 	db	1
   287  00FE7C  01                 	db	1
   288  00FE7D  01                 	db	1
   289  00FE7E  00                 	db	0
   290  00FE7F  01                 	db	1
   291  00FE80  00                 	db	0
   292  00FE81  00                 	db	0
   293  00FE82  01                 	db	1
   294  00FE83  01                 	db	1
   295  00FE84  00                 	db	0
   296  00FE85  01                 	db	1
   297  00FE86  00                 	db	0
   298  00FE87  00                 	db	0
   299  00FE88  01                 	db	1
   300  00FE89  00                 	db	0
   301  00FE8A  01                 	db	1
   302  00FE8B  00                 	db	0
   303  00FE8C  01                 	db	1
   304  00FE8D  01                 	db	1
   305  00FE8E  00                 	db	0
   306  00FE8F  01                 	db	1
   307  00FE90  01                 	db	1
   308  00FE91  01                 	db	1
   309  00FE92  01                 	db	1
   310  00FE93  01                 	db	1
   311  00FE94  01                 	db	1
   312  00FE95  01                 	db	1
   313  00FE96  00                 	db	0
   314  00FE97  01                 	db	1
   315  00FE98  01                 	db	1
   316  00FE99  01                 	db	1
   317  00FE9A  01                 	db	1
   318  00FE9B  01                 	db	1
   319  00FE9C  01                 	db	1
   320  00FE9D  01                 	db	1
   321  00FE9E  00                 	db	0
   322  00FE9F  00                 	db	0
   323  00FEA0  00                 	db	0
   324  00FEA1  01                 	db	1
   325  00FEA2  00                 	db	0
   326  00FEA3  00                 	db	0
   327  00FEA4  01                 	db	1
   328  00FEA5  00                 	db	0
   329  00FEA6  00                 	db	0
   330  00FEA7  00                 	db	0
   331  00FEA8  01                 	db	1
   332  00FEA9  01                 	db	1
   333  00FEAA  00                 	db	0
   334  00FEAB  01                 	db	1
   335  00FEAC  01                 	db	1
   336  00FEAD  00                 	db	0
   337  00FEAE  01                 	db	1
   338  00FEAF  00                 	db	0
   339  00FEB0  00                 	db	0
   340  00FEB1  01                 	db	1
   341  00FEB2  00                 	db	0
   342  00FEB3  00                 	db	0
   343  00FEB4  00                 	db	0
   344  00FEB5  00                 	db	0
   345  00FEB6  01                 	db	1
   346  00FEB7  01                 	db	1
   347  00FEB8  00                 	db	0
   348  00FEB9  00                 	db	0
   349  00FEBA  00                 	db	0
   350  00FEBB  01                 	db	1
   351  00FEBC  00                 	db	0
   352  00FEBD  01                 	db	1
   353  00FEBE  01                 	db	1
   354  00FEBF  00                 	db	0
   355  00FEC0  00                 	db	0
   356  00FEC1  01                 	db	1
   357  00FEC2  01                 	db	1
   358  00FEC3  01                 	db	1
   359  00FEC4  00                 	db	0
   360  00FEC5  01                 	db	1
   361  00FEC6  01                 	db	1
   362  00FEC7  01                 	db	1
   363  00FEC8  01                 	db	1
   364  00FEC9  01                 	db	1
   365  00FECA  01                 	db	1
   366  00FECB  00                 	db	0
   367  00FECC  00                 	db	0
   368  00FECD  00                 	db	0
   369  00FECE  00                 	db	0
   370  00FECF  00                 	db	0
   371  00FED0  00                 	db	0
   372  00FED1  00                 	db	0
   373  00FED2  01                 	db	1
   374  00FED3  00                 	db	0
   375  00FED4  00                 	db	0
   376  00FED5  00                 	db	0
   377  00FED6  00                 	db	0
   378  00FED7  00                 	db	0
   379  00FED8  00                 	db	0
   380  00FED9  00                 	db	0
   381  00FEDA  00                 	db	0
   382  00FEDB  00                 	db	0
   383  00FEDC  01                 	db	1
   384  00FEDD  01                 	db	1
   385  00FEDE  01                 	db	1
   386  00FEDF  00                 	db	0
   387  00FEE0  00                 	db	0
   388  00FEE1  01                 	db	1
   389  00FEE2  00                 	db	0
   390  00FEE3  00                 	db	0
   391  00FEE4  01                 	db	1
   392  00FEE5  01                 	db	1
   393  00FEE6  00                 	db	0
   394  00FEE7  00                 	db	0
   395  00FEE8  00                 	db	0
   396  00FEE9  01                 	db	1
   397  00FEEA  01                 	db	1
   398  00FEEB  01                 	db	1
   399  00FEEC  01                 	db	1
   400  00FEED  01                 	db	1
   401  00FEEE  01                 	db	1
   402  00FEEF  01                 	db	1
   403  00FEF0  00                 	db	0
   404  00FEF1  00                 	db	0
   405  00FEF2  00                 	db	0
   406  00FEF3  01                 	db	1
   407  00FEF4  00                 	db	0
   408  00FEF5  00                 	db	0
   409  00FEF6  01                 	db	1
   410  00FEF7  01                 	db	1
   411  00FEF8  01                 	db	1
   412  00FEF9  01                 	db	1
   413  00FEFA  01                 	db	1
   414  00FEFB  01                 	db	1
   415  00FEFC  00                 	db	0
   416  00FEFD  00                 	db	0
   417  00FEFE  01                 	db	1
   418  00FEFF  00                 	db	0
   419  00FF00  00                 	db	0
   420  00FF01  00                 	db	0
   421  00FF02  00                 	db	0
   422  00FF03  00                 	db	0
   423  00FF04  01                 	db	1
   424  00FF05  00                 	db	0
   425  00FF06  00                 	db	0
   426  00FF07  01                 	db	1
   427  00FF08  00                 	db	0
   428  00FF09  01                 	db	1
   429  00FF0A  01                 	db	1
   430  00FF0B  01                 	db	1
   431  00FF0C  01                 	db	1
   432  00FF0D  00                 	db	0
   433  00FF0E  01                 	db	1
   434  00FF0F  01                 	db	1
   435  00FF10  01                 	db	1
   436  00FF11  00                 	db	0
   437  00FF12  00                 	db	0
   438  00FF13  01                 	db	1
   439  00FF14  00                 	db	0
   440  00FF15  01                 	db	1
   441  00FF16  01                 	db	1
   442  00FF17  01                 	db	1
   443  00FF18  00                 	db	0
   444  00FF19  01                 	db	1
   445  00FF1A  00                 	db	0
   446  00FF1B  00                 	db	0
   447  00FF1C  00                 	db	0
   448  00FF1D  01                 	db	1
   449  00FF1E  01                 	db	1
   450  00FF1F  00                 	db	0
   451  00FF20  00                 	db	0
   452  00FF21  01                 	db	1
   453  00FF22  01                 	db	1
   454  00FF23  01                 	db	1
   455  00FF24  01                 	db	1
   456  00FF25  01                 	db	1
   457  00FF26  00                 	db	0
   458  00FF27  00                 	db	0
   459  00FF28  01                 	db	1
   460  00FF29  00                 	db	0
   461  00FF2A  01                 	db	1
   462  00FF2B  01                 	db	1
   463  00FF2C  01                 	db	1
   464  00FF2D  00                 	db	0
   465  00FF2E  01                 	db	1
   466  00FF2F  00                 	db	0
   467  00FF30  01                 	db	1
   468  00FF31  00                 	db	0
   469  00FF32  01                 	db	1
   470  00FF33  00                 	db	0
   471  00FF34  00                 	db	0
   472  00FF35  01                 	db	1
   473  00FF36  00                 	db	0
   474  00FF37  00                 	db	0
   475  00FF38  00                 	db	0
   476  00FF39  00                 	db	0
   477  00FF3A  01                 	db	1
   478  00FF3B  01                 	db	1
   479  00FF3C  00                 	db	0
   480  00FF3D  01                 	db	1
   481  00FF3E  00                 	db	0
   482  00FF3F  01                 	db	1
   483  00FF40  01                 	db	1
   484  00FF41  01                 	db	1
   485  00FF42  00                 	db	0
   486  00FF43  01                 	db	1
   487  00FF44  00                 	db	0
   488  00FF45  01                 	db	1
   489  00FF46  00                 	db	0
   490  00FF47  01                 	db	1
   491  00FF48  01                 	db	1
   492  00FF49  00                 	db	0
   493  00FF4A  01                 	db	1
   494  00FF4B  00                 	db	0
   495  00FF4C  00                 	db	0
   496  00FF4D  00                 	db	0
   497  00FF4E  01                 	db	1
   498  00FF4F  00                 	db	0
   499  00FF50  00                 	db	0
   500  00FF51  00                 	db	0
   501  00FF52  01                 	db	1
   502  00FF53  00                 	db	0
   503  00FF54  00                 	db	0
   504  00FF55  00                 	db	0
   505  00FF56  00                 	db	0
   506  00FF57  00                 	db	0
   507  00FF58  01                 	db	1
   508  00FF59  00                 	db	0
   509  00FF5A  01                 	db	1
   510  00FF5B  01                 	db	1
   511  00FF5C  01                 	db	1
   512  00FF5D  01                 	db	1
   513  00FF5E  01                 	db	1
   514  00FF5F  00                 	db	0
   515  00FF60  01                 	db	1
   516  00FF61  00                 	db	0
   517  00FF62  00                 	db	0
   518  00FF63  01                 	db	1
   519  00FF64  00                 	db	0
   520  00FF65  00                 	db	0
   521  00FF66  01                 	db	1
   522  00FF67  01                 	db	1
   523  00FF68  01                 	db	1
   524  00FF69  01                 	db	1
   525  00FF6A  01                 	db	1
   526  00FF6B  01                 	db	1
   527  00FF6C  01                 	db	1
   528  00FF6D  01                 	db	1
   529  00FF6E  00                 	db	0
   530  00FF6F  01                 	db	1
   531  00FF70  00                 	db	0
   532  00FF71  00                 	db	0
   533  00FF72  01                 	db	1
   534  00FF73  01                 	db	1
   535  00FF74  00                 	db	0
   536  00FF75  00                 	db	0
   537  00FF76  00                 	db	0
   538  00FF77  01                 	db	1
   539  00FF78  00                 	db	0
   540  00FF79  01                 	db	1
   541  00FF7A  00                 	db	0
   542  00FF7B  00                 	db	0
   543  00FF7C                     __end_of_qr:
   544                           	opt stack 0
   545  00FF7C                     _VIOLET:
   546                           	opt stack 0
   547  00FF7C  00D3               	dw	211
   548  00FF7E  0094               	dw	148
   549  00FF80                     __end_of_VIOLET:
   550                           	opt stack 0
   551  00FF80                     _INDIGO:
   552                           	opt stack 0
   553  00FF80  0082               	dw	130
   554  00FF82  004B               	dw	75
   555  00FF84                     __end_of_INDIGO:
   556                           	opt stack 0
   557  00FF84                     _BLUE:
   558                           	opt stack 0
   559  00FF84  00FF               	dw	255
   560  00FF86  0000               	dw	0
   561  00FF88                     __end_of_BLUE:
   562                           	opt stack 0
   563  00FF88                     _GREEN:
   564                           	opt stack 0
   565  00FF88  FF00               	dw	65280
   566  00FF8A  0000               	dw	0
   567  00FF8C                     __end_of_GREEN:
   568                           	opt stack 0
   569  00FF8C                     _YELLOW:
   570                           	opt stack 0
   571  00FF8C  FF00               	dw	65280
   572  00FF8E  00FF               	dw	255
   573  00FF90                     __end_of_YELLOW:
   574                           	opt stack 0
   575  00FF90                     _ORANGE:
   576                           	opt stack 0
   577  00FF90  8C00               	dw	35840
   578  00FF92  00FF               	dw	255
   579  00FF94                     __end_of_ORANGE:
   580                           	opt stack 0
   581  00FF94                     _RED:
   582                           	opt stack 0
   583  00FF94  0000               	dw	0
   584  00FF96  00FF               	dw	255
   585  00FF98                     __end_of_RED:
   586                           	opt stack 0
   587  00FF98                     _WHITE:
   588                           	opt stack 0
   589  00FF98  FFFF               	dw	65535
   590  00FF9A  00FF               	dw	255
   591  00FF9C                     __end_of_WHITE:
   592                           	opt stack 0
   593  00FF9C                     _GREY:
   594                           	opt stack 0
   595  00FF9C  8080               	dw	32896
   596  00FF9E  0080               	dw	128
   597  00FFA0                     __end_of_GREY:
   598                           	opt stack 0
   599  00FFA0                     _BLACK:
   600                           	opt stack 0
   601  00FFA0  0000               	dw	0
   602  00FFA2  0000               	dw	0
   603  00FFA4                     __end_of_BLACK:
   604                           	opt stack 0
   605  00FFA4  C7                 	db	199
   606  00FFA5                     __end_ofGLCD_PIC@INST_VMOFCTR2:
   607                           	opt stack 0
   608  00FFA5                     GLCD_PIC@INST_VMCTR1:
   609                           	opt stack 0
   610  00FFA5  C5                 	db	197
   611  00FFA6                     __end_ofGLCD_PIC@INST_VMCTR1:
   612                           	opt stack 0
   613  00FFA6                     GLCD_PIC@INST_PWCTR5:
   614                           	opt stack 0
   615  00FFA6  C4                 	db	196
   616  00FFA7                     __end_ofGLCD_PIC@INST_PWCTR5:
   617                           	opt stack 0
   618  00FFA7                     GLCD_PIC@INST_PWCTR4:
   619                           	opt stack 0
   620  00FFA7  C3                 	db	195
   621  00FFA8                     __end_ofGLCD_PIC@INST_PWCTR4:
   622                           	opt stack 0
   623  00FFA8                     GLCD_PIC@INST_PWCTR3:
   624                           	opt stack 0
   625  00FFA8  C2                 	db	194
   626  00FFA9                     __end_ofGLCD_PIC@INST_PWCTR3:
   627                           	opt stack 0
   628  00FFA9                     GLCD_PIC@INST_PWCTR2:
   629                           	opt stack 0
   630  00FFA9  C1                 	db	193
   631  00FFAA                     __end_ofGLCD_PIC@INST_PWCTR2:
   632                           	opt stack 0
   633  00FFAA                     GLCD_PIC@INST_PWCTR1:
   634                           	opt stack 0
   635  00FFAA  C0                 	db	192
   636  00FFAB                     __end_ofGLCD_PIC@INST_PWCTR1:
   637                           	opt stack 0
   638  00FFAB                     GLCD_PIC@INST_INVCTR:
   639                           	opt stack 0
   640  00FFAB  B4                 	db	180
   641  00FFAC                     __end_ofGLCD_PIC@INST_INVCTR:
   642                           	opt stack 0
   643  00FFAC                     GLCD_PIC@INST_FRMCTR3:
   644                           	opt stack 0
   645  00FFAC  B3                 	db	179
   646  00FFAD                     __end_ofGLCD_PIC@INST_FRMCTR3:
   647                           	opt stack 0
   648  00FFAD                     GLCD_PIC@INST_FRMCTR2:
   649                           	opt stack 0
   650  00FFAD  B2                 	db	178
   651  00FFAE                     __end_ofGLCD_PIC@INST_FRMCTR2:
   652                           	opt stack 0
   653  00FFAE                     GLCD_PIC@INST_FRMCTR1:
   654                           	opt stack 0
   655  00FFAE  B1                 	db	177
   656  00FFAF                     __end_ofGLCD_PIC@INST_FRMCTR1:
   657                           	opt stack 0
   658  00FFAF                     GLCD_PIC@INST_COLMOD:
   659                           	opt stack 0
   660  00FFAF  3A                 	db	58
   661  00FFB0                     __end_ofGLCD_PIC@INST_COLMOD:
   662                           	opt stack 0
   663  00FFB0  39                 	db	57
   664  00FFB1                     __end_ofGLCD_PIC@INST_IDMON:
   665                           	opt stack 0
   666  00FFB1                     GLCD_PIC@INST_IDMOFF:
   667                           	opt stack 0
   668  00FFB1  38                 	db	56
   669  00FFB2                     __end_ofGLCD_PIC@INST_IDMOFF:
   670                           	opt stack 0
   671  00FFB2                     GLCD_PIC@INST_MADCTL:
   672                           	opt stack 0
   673  00FFB2  36                 	db	54
   674  00FFB3                     __end_ofGLCD_PIC@INST_MADCTL:
   675                           	opt stack 0
   676  00FFB3  35                 	db	53
   677  00FFB4                     __end_ofGLCD_PIC@INST_TEON:
   678                           	opt stack 0
   679  00FFB4  34                 	db	52
   680  00FFB5                     __end_ofGLCD_PIC@INST_TEOFF:
   681                           	opt stack 0
   682  00FFB5  30                 	db	48
   683  00FFB6                     __end_ofGLCD_PIC@INST_PTLAR:
   684                           	opt stack 0
   685  00FFB6                     GLCD_PIC@INST_RAMWR:
   686                           	opt stack 0
   687  00FFB6  2C                 	db	44
   688  00FFB7                     __end_ofGLCD_PIC@INST_RAMWR:
   689                           	opt stack 0
   690  00FFB7                     GLCD_PIC@INST_RASET:
   691                           	opt stack 0
   692  00FFB7  2B                 	db	43
   693  00FFB8                     __end_ofGLCD_PIC@INST_RASET:
   694                           	opt stack 0
   695  00FFB8                     GLCD_PIC@INST_CASET:
   696                           	opt stack 0
   697  00FFB8  2A                 	db	42
   698  00FFB9                     __end_ofGLCD_PIC@INST_CASET:
   699                           	opt stack 0
   700  00FFB9                     GLCD_PIC@INST_DISPON:
   701                           	opt stack 0
   702  00FFB9  29                 	db	41
   703  00FFBA                     __end_ofGLCD_PIC@INST_DISPON:
   704                           	opt stack 0
   705  00FFBA  28                 	db	40
   706  00FFBB                     __end_ofGLCD_PIC@INST_DISPOFF:
   707                           	opt stack 0
   708  00FFBB                     GLCD_PIC@INST_GAMSET:
   709                           	opt stack 0
   710  00FFBB  26                 	db	38
   711  00FFBC                     __end_ofGLCD_PIC@INST_GAMSET:
   712                           	opt stack 0
   713  00FFBC  21                 	db	33
   714  00FFBD                     __end_ofGLCD_PIC@INST_INVON:
   715                           	opt stack 0
   716  00FFBD                     GLCD_PIC@INST_INVOFF:
   717                           	opt stack 0
   718  00FFBD  20                 	db	32
   719  00FFBE                     __end_ofGLCD_PIC@INST_INVOFF:
   720                           	opt stack 0
   721  00FFBE                     GLCD_PIC@INST_NORON:
   722                           	opt stack 0
   723  00FFBE  13                 	db	19
   724  00FFBF                     __end_ofGLCD_PIC@INST_NORON:
   725                           	opt stack 0
   726  00FFBF  12                 	db	18
   727  00FFC0                     __end_ofGLCD_PIC@INST_PTLON:
   728                           	opt stack 0
   729  00FFC0                     GLCD_PIC@INST_SLPOUT:
   730                           	opt stack 0
   731  00FFC0  11                 	db	17
   732  00FFC1                     __end_ofGLCD_PIC@INST_SLPOUT:
   733                           	opt stack 0
   734  00FFC1  10                 	db	16
   735  00FFC2                     __end_ofGLCD_PIC@INST_SLPIN:
   736                           	opt stack 0
   737  00FFC2                     GLCD_PIC@INST_SWRESET:
   738                           	opt stack 0
   739  00FFC2  01                 	db	1
   740  00FFC3                     __end_ofGLCD_PIC@INST_SWRESET:
   741                           	opt stack 0
   742  00FFC3  00                 	db	0
   743  00FFC4                     __end_ofGLCD_PIC@INST_NOP:
   744                           	opt stack 0
   745  00FFC4  C7                 	db	199
   746  00FFC5                     __end_of_INST_VMOFCTR2:
   747                           	opt stack 0
   748  00FFC5  C5                 	db	197
   749  00FFC6                     __end_of_INST_VMCTR1:
   750                           	opt stack 0
   751  00FFC6  C4                 	db	196
   752  00FFC7                     __end_of_INST_PWCTR5:
   753                           	opt stack 0
   754  00FFC7  C3                 	db	195
   755  00FFC8                     __end_of_INST_PWCTR4:
   756                           	opt stack 0
   757  00FFC8  C2                 	db	194
   758  00FFC9                     __end_of_INST_PWCTR3:
   759                           	opt stack 0
   760  00FFC9  C1                 	db	193
   761  00FFCA                     __end_of_INST_PWCTR2:
   762                           	opt stack 0
   763  00FFCA  C0                 	db	192
   764  00FFCB                     __end_of_INST_PWCTR1:
   765                           	opt stack 0
   766  00FFCB  B4                 	db	180
   767  00FFCC                     __end_of_INST_INVCTR:
   768                           	opt stack 0
   769  00FFCC  B3                 	db	179
   770  00FFCD                     __end_of_INST_FRMCTR3:
   771                           	opt stack 0
   772  00FFCD  B2                 	db	178
   773  00FFCE                     __end_of_INST_FRMCTR2:
   774                           	opt stack 0
   775  00FFCE  B1                 	db	177
   776  00FFCF                     __end_of_INST_FRMCTR1:
   777                           	opt stack 0
   778  00FFCF  3A                 	db	58
   779  00FFD0                     __end_of_INST_COLMOD:
   780                           	opt stack 0
   781  00FFD0  39                 	db	57
   782  00FFD1                     __end_of_INST_IDMON:
   783                           	opt stack 0
   784  00FFD1  38                 	db	56
   785  00FFD2                     __end_of_INST_IDMOFF:
   786                           	opt stack 0
   787  00FFD2  36                 	db	54
   788  00FFD3                     __end_of_INST_MADCTL:
   789                           	opt stack 0
   790  00FFD3  35                 	db	53
   791  00FFD4                     __end_of_INST_TEON:
   792                           	opt stack 0
   793  00FFD4  34                 	db	52
   794  00FFD5                     __end_of_INST_TEOFF:
   795                           	opt stack 0
   796  00FFD5  30                 	db	48
   797  00FFD6                     __end_of_INST_PTLAR:
   798                           	opt stack 0
   799  00FFD6  2C                 	db	44
   800  00FFD7                     __end_of_INST_RAMWR:
   801                           	opt stack 0
   802  00FFD7  2B                 	db	43
   803  00FFD8                     __end_of_INST_RASET:
   804                           	opt stack 0
   805  00FFD8  2A                 	db	42
   806  00FFD9                     __end_of_INST_CASET:
   807                           	opt stack 0
   808  00FFD9  29                 	db	41
   809  00FFDA                     __end_of_INST_DISPON:
   810                           	opt stack 0
   811  00FFDA  28                 	db	40
   812  00FFDB                     __end_of_INST_DISPOFF:
   813                           	opt stack 0
   814  00FFDB  26                 	db	38
   815  00FFDC                     __end_of_INST_GAMSET:
   816                           	opt stack 0
   817  00FFDC  21                 	db	33
   818  00FFDD                     __end_of_INST_INVON:
   819                           	opt stack 0
   820  00FFDD  20                 	db	32
   821  00FFDE                     __end_of_INST_INVOFF:
   822                           	opt stack 0
   823  00FFDE  13                 	db	19
   824  00FFDF                     __end_of_INST_NORON:
   825                           	opt stack 0
   826  00FFDF  12                 	db	18
   827  00FFE0                     __end_of_INST_PTLON:
   828                           	opt stack 0
   829  00FFE0  11                 	db	17
   830  00FFE1                     __end_of_INST_SLPOUT:
   831                           	opt stack 0
   832  00FFE1  10                 	db	16
   833  00FFE2                     __end_of_INST_SLPIN:
   834                           	opt stack 0
   835  00FFE2  01                 	db	1
   836  00FFE3                     __end_of_INST_SWRESET:
   837                           	opt stack 0
   838  00FFE3  00                 	db	0
   839  00FFE4                     __end_of_INST_NOP:
   840                           	opt stack 0
   841  00FFE4                     _GLCD_SIZE_VERT:
   842                           	opt stack 0
   843  00FFE4  80                 	db	128
   844  00FFE5                     __end_of_GLCD_SIZE_VERT:
   845                           	opt stack 0
   846  00FFE5                     _GLCD_SIZE_HORZ:
   847                           	opt stack 0
   848  00FFE5  80                 	db	128
   849  00FFE6                     __end_of_GLCD_SIZE_HORZ:
   850                           	opt stack 0
   851  00FFE6                     _GLCD_ADDRESSABLE_SIZE_VERT:
   852                           	opt stack 0
   853  00FFE6  A0                 	db	160
   854  00FFE7                     __end_of_GLCD_ADDRESSABLE_SIZE_VERT:
   855                           	opt stack 0
   856  00FFE7                     _GLCD_ADDRESSABLE_SIZE_HORZ:
   857                           	opt stack 0
   858  00FFE7  80                 	db	128
   859  00FFE8                     __end_of_GLCD_ADDRESSABLE_SIZE_HORZ:
   860                           	opt stack 0
   861  0000                     _TRISDbits	set	3989
   862  0000                     _LATDbits	set	3980
   863  0000                     _TRISCbits	set	3988
   864  0000                     _SSPCON1	set	4038
   865  0000                     _SSPSTAT	set	4039
   866  0000                     _SSPCON1bits	set	4038
   867  0000                     _SSPSTATbits	set	4039
   868  0000                     _SSPBUF	set	4041
   869  0000                     _ADCON1	set	4033
   870  0000                     _ADCON0	set	4034
   871  0000                     _TRISE	set	3990
   872  0000                     _TRISD	set	3989
   873  0000                     _TRISC	set	3988
   874  0000                     _TRISB	set	3987
   875  0000                     _TRISA	set	3986
   876  0000                     _LATE	set	3981
   877  0000                     _LATD	set	3980
   878  0000                     _LATC	set	3979
   879  0000                     _LATB	set	3978
   880  0000                     _LATA	set	3977
   881  0000                     _SSPIF	set	31987
   882  00FFE8                     STR_1:
   883  00FFE8  4A                 	db	74	;'J'
   884  00FFE9  61                 	db	97	;'a'
   885  00FFEA  6E                 	db	110	;'n'
   886  00FFEB  20                 	db	32
   887  00FFEC  32                 	db	50	;'2'
   888  00FFED  38                 	db	56	;'8'
   889  00FFEE  2C                 	db	44
   890  00FFEF  20                 	db	32
   891  00FFF0  32                 	db	50	;'2'
   892  00FFF1  30                 	db	48	;'0'
   893  00FFF2  31                 	db	49	;'1'
   894  00FFF3  38                 	db	56	;'8'
   895  00FFF4  20                 	db	32
   896  00FFF5  20                 	db	32
   897  00FFF6  31                 	db	49	;'1'
   898  00FFF7  31                 	db	49	;'1'
   899  00FFF8  3A                 	db	58	;':'
   900  00FFF9  35                 	db	53	;'5'
   901  00FFFA  30                 	db	48	;'0'
   902  00FFFB  20                 	db	32
   903  00FFFC  50                 	db	80	;'P'
   904  00FFFD  4D                 	db	77	;'M'
   905  00FFFE  00                 	db	0
   906                           
   907                           ; #config settings
   908  00FFFF  00                 	db	0	; dummy byte at the end
   909  0000                     
   910                           	psect	cinit
   911  00D568                     __pcinit:
   912                           	opt stack 0
   913  00D568                     start_initialization:
   914                           	opt stack 0
   915  00D568                     __initialization:
   916                           	opt stack 0
   917                           
   918                           ; Initialize objects allocated to BANK0 (23 bytes)
   919                           ; load TBLPTR registers with __pidataBANK0
   920  00D568  0EDF               	movlw	low __pidataBANK0
   921  00D56A  6EF6               	movwf	tblptrl,c
   922  00D56C  0ED4               	movlw	high __pidataBANK0
   923  00D56E  6EF7               	movwf	tblptrh,c
   924  00D570  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   925  00D572  6EF8               	movwf	tblptru,c
   926  00D574  EE00  F080         	lfsr	0,__pdataBANK0
   927  00D578  EE10 F017          	lfsr	1,23
   928  00D57C                     copy_data0:
   929  00D57C  0009               	tblrd		*+
   930  00D57E  CFF5 FFEE          	movff	tablat,postinc0
   931  00D582  50E5               	movf	postdec1,w,c
   932  00D584  50E1               	movf	fsr1l,w,c
   933  00D586  E1FA               	bnz	copy_data0
   934                           
   935                           ; Clear objects allocated to COMRAM (1 bytes)
   936  00D588  6A77               	clrf	__pbssCOMRAM& (0+255),c
   937  00D58A                     end_of_initialization:
   938                           	opt stack 0
   939  00D58A                     __end_of__initialization:
   940                           	opt stack 0
   941  00D58A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   942  00D58C  6EF8               	movwf	tblptru,c
   943  00D58E  0100               	movlb	0
   944  00D590  EF46  F06F         	goto	_main	;jump to C main() function
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           postinc0	equ	0xFEE
   950                           postdec1	equ	0xFE5
   951                           fsr1l	equ	0xFE1
   952                           
   953                           	psect	bssCOMRAM
   954  000077                     __pbssCOMRAM:
   955                           	opt stack 0
   956  000077                     _MADCTLbits:
   957                           	opt stack 0
   958  000077                     	ds	1
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           postdec1	equ	0xFE5
   965                           fsr1l	equ	0xFE1
   966                           
   967                           	psect	dataBANK0
   968  000080                     __pdataBANK0:
   969                           	opt stack 0
   970  000080                     main@F3036:
   971                           	opt stack 0
   972  000080                     	ds	23
   973                           tblptru	equ	0xFF8
   974                           tblptrh	equ	0xFF7
   975                           tblptrl	equ	0xFF6
   976                           tablat	equ	0xFF5
   977                           postinc0	equ	0xFEE
   978                           postdec1	equ	0xFE5
   979                           fsr1l	equ	0xFE1
   980                           
   981                           	psect	cstackCOMRAM
   982  000001                     __pcstackCOMRAM:
   983                           	opt stack 0
   984  000001                     ??_spiTransfer:
   985  000001                     ?___wmul:
   986                           	opt stack 0
   987  000001                     ?___awmod:
   988                           	opt stack 0
   989  000001                     ?_new_px_char:
   990                           	opt stack 0
   991  000001                     spiInit@divider:
   992                           	opt stack 0
   993  000001                     ___wmul@multiplier:
   994                           	opt stack 0
   995  000001                     ___awmod@dividend:
   996                           	opt stack 0
   997  000001                     new_px_char@a:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x0
  1001  000001                     	ds	1
  1002  000002                     spiTransfer@byteToTransfer:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x1
  1006  000002                     	ds	1
  1007  000003                     spiSend@val:
  1008                           	opt stack 0
  1009  000003                     ___wmul@multiplicand:
  1010                           	opt stack 0
  1011  000003                     ___awmod@divisor:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x2
  1015  000003                     	ds	1
  1016  000004                     glcdTransfer@cmd:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x3
  1020  000004                     	ds	1
  1021  000005                     ??_glcdTransfer:
  1022  000005                     ___awmod@counter:
  1023                           	opt stack 0
  1024  000005                     ___wmul@product:
  1025                           	opt stack 0
  1026  000005                     new_px_char@b:
  1027                           	opt stack 0
  1028                           
  1029                           ; 4 bytes @ 0x4
  1030  000005                     	ds	1
  1031  000006                     glcdTransfer@byte:
  1032                           	opt stack 0
  1033  000006                     ___awmod@sign:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x5
  1037  000006                     	ds	1
  1038  000007                     ?___awdiv:
  1039                           	opt stack 0
  1040  000007                     glcdDrawRectangle@XE:
  1041                           	opt stack 0
  1042  000007                     glcdSetCOLMOD@numBitsPerPixel:
  1043                           	opt stack 0
  1044  000007                     ___awdiv@dividend:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x6
  1048  000007                     	ds	1
  1049  000008                     glcdDrawRectangle@YS:
  1050                           	opt stack 0
  1051  000008                     glcdSetCOLMOD@rawData:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0x7
  1055  000008                     	ds	1
  1056  000009                     glcdDrawRectangle@YE:
  1057                           	opt stack 0
  1058  000009                     ___awdiv@divisor:
  1059                           	opt stack 0
  1060  000009                     new_px_char@p:
  1061                           	opt stack 0
  1062                           
  1063                           ; 8 bytes @ 0x8
  1064  000009                     	ds	1
  1065  00000A                     glcdDrawRectangle@color:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x9
  1069  00000A                     	ds	1
  1070  00000B                     ___awdiv@counter:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0xA
  1074  00000B                     	ds	1
  1075  00000C                     ___awdiv@sign:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0xB
  1079  00000C                     	ds	1
  1080  00000D                     ___awdiv@quotient:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0xC
  1084  00000D                     	ds	1
  1085  00000E                     ??_glcdDrawRectangle:
  1086                           
  1087                           ; 1 bytes @ 0xD
  1088  00000E                     	ds	3
  1089  000011                     ?_px_map:
  1090                           	opt stack 0
  1091                           
  1092                           ; 8 bytes @ 0x10
  1093  000011                     	ds	1
  1094  000012                     glcdDrawRectangle@numLoops:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x11
  1098  000012                     	ds	2
  1099  000014                     glcdDrawRectangle@i:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x13
  1103  000014                     	ds	2
  1104  000016                     glcdDrawRectangle@colorData:
  1105                           	opt stack 0
  1106                           
  1107                           ; 3 bytes @ 0x15
  1108  000016                     	ds	3
  1109  000019                     glcdDrawRectangle@XS:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x18
  1113  000019                     	ds	1
  1114  00001A                     ??_initGLCD:
  1115  00001A                     glcdDrawPixel@YS:
  1116                           	opt stack 0
  1117  00001A                     px_map@c:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x19
  1121  00001A                     	ds	1
  1122  00001B                     glcdDrawPixel@color:
  1123                           	opt stack 0
  1124                           
  1125                           ; 4 bytes @ 0x1A
  1126  00001B                     	ds	1
  1127  00001C                     
  1128                           ; 1 bytes @ 0x1B
  1129  00001C                     	ds	3
  1130  00001F                     ??_glcdDrawPixel:
  1131                           
  1132                           ; 1 bytes @ 0x1E
  1133  00001F                     	ds	1
  1134  000020                     glcdDrawPixel@XS:
  1135                           	opt stack 0
  1136                           
  1137                           ; 1 bytes @ 0x1F
  1138  000020                     	ds	1
  1139  000021                     draw_px_char@x:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x20
  1143  000021                     	ds	2
  1144  000023                     draw_px_char@y:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x22
  1148  000023                     	ds	2
  1149  000025                     draw_px_char@p:
  1150                           	opt stack 0
  1151                           
  1152                           ; 8 bytes @ 0x24
  1153  000025                     	ds	8
  1154  00002D                     ??_draw_px_char:
  1155                           
  1156                           ; 1 bytes @ 0x2C
  1157  00002D                     	ds	4
  1158  000031                     draw_px_char@m:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x30
  1162  000031                     	ds	4
  1163  000035                     draw_px_char@i:
  1164                           	opt stack 0
  1165                           
  1166                           ; 2 bytes @ 0x34
  1167  000035                     	ds	2
  1168  000037                     print_px_char@x:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x36
  1172  000037                     	ds	2
  1173  000039                     print_px_char@y:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x38
  1177  000039                     	ds	2
  1178  00003B                     print_px_char@c:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x3A
  1182  00003B                     	ds	1
  1183  00003C                     print_px_string@x:
  1184                           	opt stack 0
  1185                           
  1186                           ; 2 bytes @ 0x3B
  1187  00003C                     	ds	2
  1188  00003E                     print_px_string@y:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x3D
  1192  00003E                     	ds	2
  1193  000040                     print_px_string@s:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x3F
  1197  000040                     	ds	2
  1198  000042                     ??_print_px_string:
  1199                           
  1200                           ; 1 bytes @ 0x41
  1201  000042                     	ds	2
  1202  000044                     _print_px_string$1156:
  1203                           	opt stack 0
  1204                           
  1205                           ; 2 bytes @ 0x43
  1206  000044                     	ds	2
  1207  000046                     print_px_string@idx:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x45
  1211  000046                     	ds	2
  1212  000048                     ??_main:
  1213                           
  1214                           ; 1 bytes @ 0x47
  1215  000048                     	ds	2
  1216  00004A                     main@eta:
  1217                           	opt stack 0
  1218                           
  1219                           ; 23 bytes @ 0x49
  1220  00004A                     	ds	23
  1221  000061                     main@endx:
  1222                           	opt stack 0
  1223                           
  1224                           ; 2 bytes @ 0x60
  1225  000061                     	ds	2
  1226  000063                     main@endy:
  1227                           	opt stack 0
  1228                           
  1229                           ; 2 bytes @ 0x62
  1230  000063                     	ds	2
  1231  000065                     _main$1155:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x64
  1235  000065                     	ds	2
  1236  000067                     _main$137:
  1237                           	opt stack 0
  1238                           
  1239                           ; 4 bytes @ 0x66
  1240  000067                     	ds	4
  1241  00006B                     main@sec:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x6A
  1245  00006B                     	ds	2
  1246  00006D                     main@j:
  1247                           	opt stack 0
  1248                           
  1249                           ; 2 bytes @ 0x6C
  1250  00006D                     	ds	2
  1251  00006F                     main@i:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x6E
  1255  00006F                     	ds	2
  1256  000071                     main@startx:
  1257                           	opt stack 0
  1258                           
  1259                           ; 2 bytes @ 0x70
  1260  000071                     	ds	2
  1261  000073                     main@starty:
  1262                           	opt stack 0
  1263                           
  1264                           ; 2 bytes @ 0x72
  1265  000073                     	ds	2
  1266  000075                     main@blocksize:
  1267                           	opt stack 0
  1268                           
  1269                           ; 2 bytes @ 0x74
  1270  000075                     	ds	2
  1271                           tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           postinc0	equ	0xFEE
  1276                           postdec1	equ	0xFE5
  1277                           fsr1l	equ	0xFE1
  1278                           
  1279 ;;
  1280 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1281 ;;
  1282 ;; *************** function _main *****************
  1283 ;; Defined at:
  1284 ;;		line 95 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  i               2  110[COMRAM] int 
  1289 ;;  j               2  108[COMRAM] int 
  1290 ;;  eta            23   73[COMRAM] unsigned char [23]
  1291 ;;  blocksize       2  116[COMRAM] int 
  1292 ;;  starty          2  114[COMRAM] int 
  1293 ;;  startx          2  112[COMRAM] int 
  1294 ;;  sec             2  106[COMRAM] int 
  1295 ;;  endy            2   98[COMRAM] int 
  1296 ;;  endx            2   96[COMRAM] int 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:        45       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:        47       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:       47 bytes
  1311 ;; Hardware stack levels required when called:    8
  1312 ;; This function calls:
  1313 ;;		___awdiv
  1314 ;;		___awmod
  1315 ;;		___wmul
  1316 ;;		_glcdDrawRectangle
  1317 ;;		_init
  1318 ;;		_print_px_string
  1319 ;; This function is called by:
  1320 ;;		Startup code after reset
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text0
  1325  00DE8C                     __ptext0:
  1326                           	opt stack 0
  1327  00DE8C                     _main:
  1328                           	opt stack 23
  1329                           
  1330                           ;main.c: 96: init();
  1331                           
  1332                           ;incstack = 0
  1333  00DE8C  ECCA  F06A         	call	_init	;wreg free
  1334                           
  1335                           ;main.c: 99: glcdDrawRectangle(0, GLCD_SIZE_VERT, 0, 14, RED);
  1336  00DE90  0EE4               	movlw	low _GLCD_SIZE_VERT
  1337  00DE92  6EF6               	movwf	tblptrl,c
  1338  00DE94                     	if	1	;There is more than 1 active tblptr byte
  1339  00DE94  0EFF               	movlw	high _GLCD_SIZE_VERT
  1340  00DE96  6EF7               	movwf	tblptrh,c
  1341  00DE98                     	endif
  1342  00DE98                     	if	0	;There are less than 3 active tblptr bytes
  1343  00DE98                     	endif
  1344  00DE98  0008               	tblrd		*
  1345  00DE9A  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
  1346  00DE9E  0E00               	movlw	0
  1347  00DEA0  6E08               	movwf	glcdDrawRectangle@YS,c
  1348  00DEA2  0E0E               	movlw	14
  1349  00DEA4  6E09               	movwf	glcdDrawRectangle@YE,c
  1350  00DEA6  0E94               	movlw	low _RED
  1351  00DEA8  6EF6               	movwf	tblptrl,c
  1352  00DEAA                     	if	1	;There is more than 1 active tblptr byte
  1353  00DEAA  0EFF               	movlw	high _RED
  1354  00DEAC  6EF7               	movwf	tblptrh,c
  1355  00DEAE                     	endif
  1356  00DEAE                     	if	0	;There are less than 3 active tblptr bytes
  1357  00DEAE                     	endif
  1358  00DEAE  0009               	tblrd		*+
  1359  00DEB0  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1360  00DEB4  0009               	tblrd		*+
  1361  00DEB6  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1362  00DEBA  0009               	tblrd		*+
  1363  00DEBC  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1364  00DEC0  000A               	tblrd		*-
  1365  00DEC2  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1366  00DEC6  0E00               	movlw	0
  1367  00DEC8  EC00  F06D         	call	_glcdDrawRectangle
  1368                           
  1369                           ;main.c: 100: glcdDrawRectangle(0, GLCD_SIZE_VERT, 14, 110, BLACK);
  1370  00DECC  0EE4               	movlw	low _GLCD_SIZE_VERT
  1371  00DECE  6EF6               	movwf	tblptrl,c
  1372  00DED0                     	if	1	;There is more than 1 active tblptr byte
  1373  00DED0  0EFF               	movlw	high _GLCD_SIZE_VERT
  1374  00DED2  6EF7               	movwf	tblptrh,c
  1375  00DED4                     	endif
  1376  00DED4                     	if	0	;There are less than 3 active tblptr bytes
  1377  00DED4                     	endif
  1378  00DED4  0008               	tblrd		*
  1379  00DED6  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
  1380  00DEDA  0E0E               	movlw	14
  1381  00DEDC  6E08               	movwf	glcdDrawRectangle@YS,c
  1382  00DEDE  0E6E               	movlw	110
  1383  00DEE0  6E09               	movwf	glcdDrawRectangle@YE,c
  1384  00DEE2  0EA0               	movlw	low _BLACK
  1385  00DEE4  6EF6               	movwf	tblptrl,c
  1386  00DEE6                     	if	1	;There is more than 1 active tblptr byte
  1387  00DEE6  0EFF               	movlw	high _BLACK
  1388  00DEE8  6EF7               	movwf	tblptrh,c
  1389  00DEEA                     	endif
  1390  00DEEA                     	if	0	;There are less than 3 active tblptr bytes
  1391  00DEEA                     	endif
  1392  00DEEA  0009               	tblrd		*+
  1393  00DEEC  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1394  00DEF0  0009               	tblrd		*+
  1395  00DEF2  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1396  00DEF6  0009               	tblrd		*+
  1397  00DEF8  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1398  00DEFC  000A               	tblrd		*-
  1399  00DEFE  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1400  00DF02  0E00               	movlw	0
  1401  00DF04  EC00  F06D         	call	_glcdDrawRectangle
  1402                           
  1403                           ;main.c: 101: glcdDrawRectangle(0, GLCD_SIZE_VERT, 114, 128, WHITE);
  1404  00DF08  0EE4               	movlw	low _GLCD_SIZE_VERT
  1405  00DF0A  6EF6               	movwf	tblptrl,c
  1406  00DF0C                     	if	1	;There is more than 1 active tblptr byte
  1407  00DF0C  0EFF               	movlw	high _GLCD_SIZE_VERT
  1408  00DF0E  6EF7               	movwf	tblptrh,c
  1409  00DF10                     	endif
  1410  00DF10                     	if	0	;There are less than 3 active tblptr bytes
  1411  00DF10                     	endif
  1412  00DF10  0008               	tblrd		*
  1413  00DF12  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
  1414  00DF16  0E72               	movlw	114
  1415  00DF18  6E08               	movwf	glcdDrawRectangle@YS,c
  1416  00DF1A  0E80               	movlw	128
  1417  00DF1C  6E09               	movwf	glcdDrawRectangle@YE,c
  1418  00DF1E  0E98               	movlw	low _WHITE
  1419  00DF20  6EF6               	movwf	tblptrl,c
  1420  00DF22                     	if	1	;There is more than 1 active tblptr byte
  1421  00DF22  0EFF               	movlw	high _WHITE
  1422  00DF24  6EF7               	movwf	tblptrh,c
  1423  00DF26                     	endif
  1424  00DF26                     	if	0	;There are less than 3 active tblptr bytes
  1425  00DF26                     	endif
  1426  00DF26  0009               	tblrd		*+
  1427  00DF28  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1428  00DF2C  0009               	tblrd		*+
  1429  00DF2E  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1430  00DF32  0009               	tblrd		*+
  1431  00DF34  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1432  00DF38  000A               	tblrd		*-
  1433  00DF3A  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1434  00DF3E  0E00               	movlw	0
  1435  00DF40  EC00  F06D         	call	_glcdDrawRectangle
  1436                           
  1437                           ;main.c: 103: int startx = 22;
  1438  00DF44  0E00               	movlw	0
  1439  00DF46  6E72               	movwf	main@startx+1,c
  1440  00DF48  0E16               	movlw	22
  1441  00DF4A  6E71               	movwf	main@startx,c
  1442                           
  1443                           ;main.c: 104: int starty = 20;
  1444  00DF4C  0E00               	movlw	0
  1445  00DF4E  6E74               	movwf	main@starty+1,c
  1446  00DF50  0E14               	movlw	20
  1447  00DF52  6E73               	movwf	main@starty,c
  1448                           
  1449                           ;main.c: 105: int blocksize = 4;
  1450  00DF54  0E00               	movlw	0
  1451  00DF56  6E76               	movwf	main@blocksize+1,c
  1452  00DF58  0E04               	movlw	4
  1453  00DF5A  6E75               	movwf	main@blocksize,c
  1454                           
  1455                           ;main.c: 106: int endx = startx + 21*blocksize;
  1456  00DF5C  C075  F001         	movff	main@blocksize,___wmul@multiplier
  1457  00DF60  C076  F002         	movff	main@blocksize+1,___wmul@multiplier+1
  1458  00DF64  0E00               	movlw	0
  1459  00DF66  6E04               	movwf	___wmul@multiplicand+1,c
  1460  00DF68  0E15               	movlw	21
  1461  00DF6A  6E03               	movwf	___wmul@multiplicand,c
  1462  00DF6C  EC8D  F06A         	call	___wmul	;wreg free
  1463  00DF70  5071               	movf	main@startx,w,c
  1464  00DF72  2401               	addwf	?___wmul,w,c
  1465  00DF74  6E61               	movwf	main@endx,c
  1466  00DF76  5072               	movf	main@startx+1,w,c
  1467  00DF78  2002               	addwfc	?___wmul+1,w,c
  1468  00DF7A  6E62               	movwf	main@endx+1,c
  1469                           
  1470                           ;main.c: 107: int endy = starty + 21*blocksize;
  1471  00DF7C  C075  F001         	movff	main@blocksize,___wmul@multiplier
  1472  00DF80  C076  F002         	movff	main@blocksize+1,___wmul@multiplier+1
  1473  00DF84  0E00               	movlw	0
  1474  00DF86  6E04               	movwf	___wmul@multiplicand+1,c
  1475  00DF88  0E15               	movlw	21
  1476  00DF8A  6E03               	movwf	___wmul@multiplicand,c
  1477  00DF8C  EC8D  F06A         	call	___wmul	;wreg free
  1478  00DF90  5073               	movf	main@starty,w,c
  1479  00DF92  2401               	addwf	?___wmul,w,c
  1480  00DF94  6E63               	movwf	main@endy,c
  1481  00DF96  5074               	movf	main@starty+1,w,c
  1482  00DF98  2002               	addwfc	?___wmul+1,w,c
  1483  00DF9A  6E64               	movwf	main@endy+1,c
  1484                           
  1485                           ;main.c: 109: glcdDrawRectangle(startx-blocksize, endx+blocksize, starty-blocksize, endy
      +                          +blocksize, WHITE);
  1486  00DF9C  5061               	movf	main@endx,w,c
  1487  00DF9E  2475               	addwf	main@blocksize,w,c
  1488  00DFA0  6E07               	movwf	glcdDrawRectangle@XE,c
  1489  00DFA2  5075               	movf	main@blocksize,w,c
  1490  00DFA4  0800               	sublw	0
  1491  00DFA6  2473               	addwf	main@starty,w,c
  1492  00DFA8  6E08               	movwf	glcdDrawRectangle@YS,c
  1493  00DFAA  5063               	movf	main@endy,w,c
  1494  00DFAC  2475               	addwf	main@blocksize,w,c
  1495  00DFAE  6E09               	movwf	glcdDrawRectangle@YE,c
  1496  00DFB0  0E98               	movlw	low _WHITE
  1497  00DFB2  6EF6               	movwf	tblptrl,c
  1498  00DFB4                     	if	1	;There is more than 1 active tblptr byte
  1499  00DFB4  0EFF               	movlw	high _WHITE
  1500  00DFB6  6EF7               	movwf	tblptrh,c
  1501  00DFB8                     	endif
  1502  00DFB8                     	if	0	;There are less than 3 active tblptr bytes
  1503  00DFB8                     	endif
  1504  00DFB8  0009               	tblrd		*+
  1505  00DFBA  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1506  00DFBE  0009               	tblrd		*+
  1507  00DFC0  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1508  00DFC4  0009               	tblrd		*+
  1509  00DFC6  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1510  00DFCA  000A               	tblrd		*-
  1511  00DFCC  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1512  00DFD0  5075               	movf	main@blocksize,w,c
  1513  00DFD2  0800               	sublw	0
  1514  00DFD4  2471               	addwf	main@startx,w,c
  1515  00DFD6  EC00  F06D         	call	_glcdDrawRectangle
  1516                           
  1517                           ;main.c: 111: glcdDrawRectangle(startx, startx+7*blocksize, starty, starty+7*blocksize, 
      +                          BLACK);
  1518  00DFDA  5075               	movf	main@blocksize,w,c
  1519  00DFDC  0D07               	mullw	7
  1520  00DFDE  50F3               	movf	prodl,w,c
  1521  00DFE0  2471               	addwf	main@startx,w,c
  1522  00DFE2  6E07               	movwf	glcdDrawRectangle@XE,c
  1523  00DFE4  C073  F008         	movff	main@starty,glcdDrawRectangle@YS
  1524  00DFE8  5075               	movf	main@blocksize,w,c
  1525  00DFEA  0D07               	mullw	7
  1526  00DFEC  50F3               	movf	prodl,w,c
  1527  00DFEE  2473               	addwf	main@starty,w,c
  1528  00DFF0  6E09               	movwf	glcdDrawRectangle@YE,c
  1529  00DFF2  0EA0               	movlw	low _BLACK
  1530  00DFF4  6EF6               	movwf	tblptrl,c
  1531  00DFF6                     	if	1	;There is more than 1 active tblptr byte
  1532  00DFF6  0EFF               	movlw	high _BLACK
  1533  00DFF8  6EF7               	movwf	tblptrh,c
  1534  00DFFA                     	endif
  1535  00DFFA                     	if	0	;There are less than 3 active tblptr bytes
  1536  00DFFA                     	endif
  1537  00DFFA  0009               	tblrd		*+
  1538  00DFFC  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1539  00E000  0009               	tblrd		*+
  1540  00E002  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1541  00E006  0009               	tblrd		*+
  1542  00E008  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1543  00E00C  000A               	tblrd		*-
  1544  00E00E  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1545  00E012  5071               	movf	main@startx,w,c
  1546  00E014  EC00  F06D         	call	_glcdDrawRectangle
  1547                           
  1548                           ;main.c: 112: glcdDrawRectangle(startx+blocksize, startx+6*blocksize, starty+blocksize, 
      +                          starty+6*blocksize, WHITE);
  1549  00E018  5075               	movf	main@blocksize,w,c
  1550  00E01A  0D06               	mullw	6
  1551  00E01C  50F3               	movf	prodl,w,c
  1552  00E01E  2471               	addwf	main@startx,w,c
  1553  00E020  6E07               	movwf	glcdDrawRectangle@XE,c
  1554  00E022  5073               	movf	main@starty,w,c
  1555  00E024  2475               	addwf	main@blocksize,w,c
  1556  00E026  6E08               	movwf	glcdDrawRectangle@YS,c
  1557  00E028  5075               	movf	main@blocksize,w,c
  1558  00E02A  0D06               	mullw	6
  1559  00E02C  50F3               	movf	prodl,w,c
  1560  00E02E  2473               	addwf	main@starty,w,c
  1561  00E030  6E09               	movwf	glcdDrawRectangle@YE,c
  1562  00E032  0E98               	movlw	low _WHITE
  1563  00E034  6EF6               	movwf	tblptrl,c
  1564  00E036                     	if	1	;There is more than 1 active tblptr byte
  1565  00E036  0EFF               	movlw	high _WHITE
  1566  00E038  6EF7               	movwf	tblptrh,c
  1567  00E03A                     	endif
  1568  00E03A                     	if	0	;There are less than 3 active tblptr bytes
  1569  00E03A                     	endif
  1570  00E03A  0009               	tblrd		*+
  1571  00E03C  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1572  00E040  0009               	tblrd		*+
  1573  00E042  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1574  00E046  0009               	tblrd		*+
  1575  00E048  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1576  00E04C  000A               	tblrd		*-
  1577  00E04E  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1578  00E052  5071               	movf	main@startx,w,c
  1579  00E054  2475               	addwf	main@blocksize,w,c
  1580  00E056  EC00  F06D         	call	_glcdDrawRectangle
  1581                           
  1582                           ;main.c: 113: glcdDrawRectangle(startx+2*blocksize, startx+5*blocksize, starty+2*blocksi
      +                          ze, starty+5*blocksize, BLACK);
  1583  00E05A  5075               	movf	main@blocksize,w,c
  1584  00E05C  0D05               	mullw	5
  1585  00E05E  50F3               	movf	prodl,w,c
  1586  00E060  2471               	addwf	main@startx,w,c
  1587  00E062  6E07               	movwf	glcdDrawRectangle@XE,c
  1588  00E064  5075               	movf	main@blocksize,w,c
  1589  00E066  2475               	addwf	main@blocksize,w,c
  1590  00E068  2473               	addwf	main@starty,w,c
  1591  00E06A  6E08               	movwf	glcdDrawRectangle@YS,c
  1592  00E06C  5075               	movf	main@blocksize,w,c
  1593  00E06E  0D05               	mullw	5
  1594  00E070  50F3               	movf	prodl,w,c
  1595  00E072  2473               	addwf	main@starty,w,c
  1596  00E074  6E09               	movwf	glcdDrawRectangle@YE,c
  1597  00E076  0EA0               	movlw	low _BLACK
  1598  00E078  6EF6               	movwf	tblptrl,c
  1599  00E07A                     	if	1	;There is more than 1 active tblptr byte
  1600  00E07A  0EFF               	movlw	high _BLACK
  1601  00E07C  6EF7               	movwf	tblptrh,c
  1602  00E07E                     	endif
  1603  00E07E                     	if	0	;There are less than 3 active tblptr bytes
  1604  00E07E                     	endif
  1605  00E07E  0009               	tblrd		*+
  1606  00E080  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1607  00E084  0009               	tblrd		*+
  1608  00E086  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1609  00E08A  0009               	tblrd		*+
  1610  00E08C  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1611  00E090  000A               	tblrd		*-
  1612  00E092  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1613  00E096  5075               	movf	main@blocksize,w,c
  1614  00E098  2475               	addwf	main@blocksize,w,c
  1615  00E09A  2471               	addwf	main@startx,w,c
  1616  00E09C  EC00  F06D         	call	_glcdDrawRectangle
  1617                           
  1618                           ;main.c: 115: glcdDrawRectangle(startx+14*blocksize, startx+21*blocksize, starty, starty
      +                          +7*blocksize, BLACK);
  1619  00E0A0  5075               	movf	main@blocksize,w,c
  1620  00E0A2  0D15               	mullw	21
  1621  00E0A4  50F3               	movf	prodl,w,c
  1622  00E0A6  2471               	addwf	main@startx,w,c
  1623  00E0A8  6E07               	movwf	glcdDrawRectangle@XE,c
  1624  00E0AA  C073  F008         	movff	main@starty,glcdDrawRectangle@YS
  1625  00E0AE  5075               	movf	main@blocksize,w,c
  1626  00E0B0  0D07               	mullw	7
  1627  00E0B2  50F3               	movf	prodl,w,c
  1628  00E0B4  2473               	addwf	main@starty,w,c
  1629  00E0B6  6E09               	movwf	glcdDrawRectangle@YE,c
  1630  00E0B8  0EA0               	movlw	low _BLACK
  1631  00E0BA  6EF6               	movwf	tblptrl,c
  1632  00E0BC                     	if	1	;There is more than 1 active tblptr byte
  1633  00E0BC  0EFF               	movlw	high _BLACK
  1634  00E0BE  6EF7               	movwf	tblptrh,c
  1635  00E0C0                     	endif
  1636  00E0C0                     	if	0	;There are less than 3 active tblptr bytes
  1637  00E0C0                     	endif
  1638  00E0C0  0009               	tblrd		*+
  1639  00E0C2  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1640  00E0C6  0009               	tblrd		*+
  1641  00E0C8  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1642  00E0CC  0009               	tblrd		*+
  1643  00E0CE  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1644  00E0D2  000A               	tblrd		*-
  1645  00E0D4  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1646  00E0D8  5075               	movf	main@blocksize,w,c
  1647  00E0DA  0D0E               	mullw	14
  1648  00E0DC  50F3               	movf	prodl,w,c
  1649  00E0DE  2471               	addwf	main@startx,w,c
  1650  00E0E0  EC00  F06D         	call	_glcdDrawRectangle
  1651                           
  1652                           ;main.c: 116: glcdDrawRectangle(startx+15*blocksize, startx+20*blocksize, starty+blocksi
      +                          ze, starty+6*blocksize, WHITE);
  1653  00E0E4  5075               	movf	main@blocksize,w,c
  1654  00E0E6  0D14               	mullw	20
  1655  00E0E8  50F3               	movf	prodl,w,c
  1656  00E0EA  2471               	addwf	main@startx,w,c
  1657  00E0EC  6E07               	movwf	glcdDrawRectangle@XE,c
  1658  00E0EE  5073               	movf	main@starty,w,c
  1659  00E0F0  2475               	addwf	main@blocksize,w,c
  1660  00E0F2  6E08               	movwf	glcdDrawRectangle@YS,c
  1661  00E0F4  5075               	movf	main@blocksize,w,c
  1662  00E0F6  0D06               	mullw	6
  1663  00E0F8  50F3               	movf	prodl,w,c
  1664  00E0FA  2473               	addwf	main@starty,w,c
  1665  00E0FC  6E09               	movwf	glcdDrawRectangle@YE,c
  1666  00E0FE  0E98               	movlw	low _WHITE
  1667  00E100  6EF6               	movwf	tblptrl,c
  1668  00E102                     	if	1	;There is more than 1 active tblptr byte
  1669  00E102  0EFF               	movlw	high _WHITE
  1670  00E104  6EF7               	movwf	tblptrh,c
  1671  00E106                     	endif
  1672  00E106                     	if	0	;There are less than 3 active tblptr bytes
  1673  00E106                     	endif
  1674  00E106  0009               	tblrd		*+
  1675  00E108  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1676  00E10C  0009               	tblrd		*+
  1677  00E10E  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1678  00E112  0009               	tblrd		*+
  1679  00E114  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1680  00E118  000A               	tblrd		*-
  1681  00E11A  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1682  00E11E  5075               	movf	main@blocksize,w,c
  1683  00E120  0D0F               	mullw	15
  1684  00E122  50F3               	movf	prodl,w,c
  1685  00E124  2471               	addwf	main@startx,w,c
  1686  00E126  EC00  F06D         	call	_glcdDrawRectangle
  1687                           
  1688                           ;main.c: 117: glcdDrawRectangle(startx+16*blocksize, startx+19*blocksize, starty+2*block
      +                          size, starty+5*blocksize, BLACK);
  1689  00E12A  5075               	movf	main@blocksize,w,c
  1690  00E12C  0D13               	mullw	19
  1691  00E12E  50F3               	movf	prodl,w,c
  1692  00E130  2471               	addwf	main@startx,w,c
  1693  00E132  6E07               	movwf	glcdDrawRectangle@XE,c
  1694  00E134  5075               	movf	main@blocksize,w,c
  1695  00E136  2475               	addwf	main@blocksize,w,c
  1696  00E138  2473               	addwf	main@starty,w,c
  1697  00E13A  6E08               	movwf	glcdDrawRectangle@YS,c
  1698  00E13C  5075               	movf	main@blocksize,w,c
  1699  00E13E  0D05               	mullw	5
  1700  00E140  50F3               	movf	prodl,w,c
  1701  00E142  2473               	addwf	main@starty,w,c
  1702  00E144  6E09               	movwf	glcdDrawRectangle@YE,c
  1703  00E146  0EA0               	movlw	low _BLACK
  1704  00E148  6EF6               	movwf	tblptrl,c
  1705  00E14A                     	if	1	;There is more than 1 active tblptr byte
  1706  00E14A  0EFF               	movlw	high _BLACK
  1707  00E14C  6EF7               	movwf	tblptrh,c
  1708  00E14E                     	endif
  1709  00E14E                     	if	0	;There are less than 3 active tblptr bytes
  1710  00E14E                     	endif
  1711  00E14E  0009               	tblrd		*+
  1712  00E150  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1713  00E154  0009               	tblrd		*+
  1714  00E156  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1715  00E15A  0009               	tblrd		*+
  1716  00E15C  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1717  00E160  000A               	tblrd		*-
  1718  00E162  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1719  00E166  3875               	swapf	main@blocksize,w,c
  1720  00E168  0BF0               	andlw	240
  1721  00E16A  2471               	addwf	main@startx,w,c
  1722  00E16C  EC00  F06D         	call	_glcdDrawRectangle
  1723                           
  1724                           ;main.c: 119: glcdDrawRectangle(startx, startx+7*blocksize, starty+14*blocksize, starty+
      +                          21*blocksize, BLACK);
  1725  00E170  5075               	movf	main@blocksize,w,c
  1726  00E172  0D07               	mullw	7
  1727  00E174  50F3               	movf	prodl,w,c
  1728  00E176  2471               	addwf	main@startx,w,c
  1729  00E178  6E07               	movwf	glcdDrawRectangle@XE,c
  1730  00E17A  5075               	movf	main@blocksize,w,c
  1731  00E17C  0D0E               	mullw	14
  1732  00E17E  50F3               	movf	prodl,w,c
  1733  00E180  2473               	addwf	main@starty,w,c
  1734  00E182  6E08               	movwf	glcdDrawRectangle@YS,c
  1735  00E184  5075               	movf	main@blocksize,w,c
  1736  00E186  0D15               	mullw	21
  1737  00E188  50F3               	movf	prodl,w,c
  1738  00E18A  2473               	addwf	main@starty,w,c
  1739  00E18C  6E09               	movwf	glcdDrawRectangle@YE,c
  1740  00E18E  0EA0               	movlw	low _BLACK
  1741  00E190  6EF6               	movwf	tblptrl,c
  1742  00E192                     	if	1	;There is more than 1 active tblptr byte
  1743  00E192  0EFF               	movlw	high _BLACK
  1744  00E194  6EF7               	movwf	tblptrh,c
  1745  00E196                     	endif
  1746  00E196                     	if	0	;There are less than 3 active tblptr bytes
  1747  00E196                     	endif
  1748  00E196  0009               	tblrd		*+
  1749  00E198  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1750  00E19C  0009               	tblrd		*+
  1751  00E19E  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1752  00E1A2  0009               	tblrd		*+
  1753  00E1A4  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1754  00E1A8  000A               	tblrd		*-
  1755  00E1AA  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1756  00E1AE  5071               	movf	main@startx,w,c
  1757  00E1B0  EC00  F06D         	call	_glcdDrawRectangle
  1758                           
  1759                           ;main.c: 120: glcdDrawRectangle(startx+blocksize, startx+6*blocksize, starty+15*blocksiz
      +                          e, starty+20*blocksize, WHITE);
  1760  00E1B4  5075               	movf	main@blocksize,w,c
  1761  00E1B6  0D06               	mullw	6
  1762  00E1B8  50F3               	movf	prodl,w,c
  1763  00E1BA  2471               	addwf	main@startx,w,c
  1764  00E1BC  6E07               	movwf	glcdDrawRectangle@XE,c
  1765  00E1BE  5075               	movf	main@blocksize,w,c
  1766  00E1C0  0D0F               	mullw	15
  1767  00E1C2  50F3               	movf	prodl,w,c
  1768  00E1C4  2473               	addwf	main@starty,w,c
  1769  00E1C6  6E08               	movwf	glcdDrawRectangle@YS,c
  1770  00E1C8  5075               	movf	main@blocksize,w,c
  1771  00E1CA  0D14               	mullw	20
  1772  00E1CC  50F3               	movf	prodl,w,c
  1773  00E1CE  2473               	addwf	main@starty,w,c
  1774  00E1D0  6E09               	movwf	glcdDrawRectangle@YE,c
  1775  00E1D2  0E98               	movlw	low _WHITE
  1776  00E1D4  6EF6               	movwf	tblptrl,c
  1777  00E1D6                     	if	1	;There is more than 1 active tblptr byte
  1778  00E1D6  0EFF               	movlw	high _WHITE
  1779  00E1D8  6EF7               	movwf	tblptrh,c
  1780  00E1DA                     	endif
  1781  00E1DA                     	if	0	;There are less than 3 active tblptr bytes
  1782  00E1DA                     	endif
  1783  00E1DA  0009               	tblrd		*+
  1784  00E1DC  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1785  00E1E0  0009               	tblrd		*+
  1786  00E1E2  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1787  00E1E6  0009               	tblrd		*+
  1788  00E1E8  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1789  00E1EC  000A               	tblrd		*-
  1790  00E1EE  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1791  00E1F2  5071               	movf	main@startx,w,c
  1792  00E1F4  2475               	addwf	main@blocksize,w,c
  1793  00E1F6  EC00  F06D         	call	_glcdDrawRectangle
  1794                           
  1795                           ;main.c: 121: glcdDrawRectangle(startx+2*blocksize, startx+5*blocksize, starty+16*blocks
      +                          ize, starty+19*blocksize, BLACK);
  1796  00E1FA  5075               	movf	main@blocksize,w,c
  1797  00E1FC  0D05               	mullw	5
  1798  00E1FE  50F3               	movf	prodl,w,c
  1799  00E200  2471               	addwf	main@startx,w,c
  1800  00E202  6E07               	movwf	glcdDrawRectangle@XE,c
  1801  00E204  3875               	swapf	main@blocksize,w,c
  1802  00E206  0BF0               	andlw	240
  1803  00E208  2473               	addwf	main@starty,w,c
  1804  00E20A  6E08               	movwf	glcdDrawRectangle@YS,c
  1805  00E20C  5075               	movf	main@blocksize,w,c
  1806  00E20E  0D13               	mullw	19
  1807  00E210  50F3               	movf	prodl,w,c
  1808  00E212  2473               	addwf	main@starty,w,c
  1809  00E214  6E09               	movwf	glcdDrawRectangle@YE,c
  1810  00E216  0EA0               	movlw	low _BLACK
  1811  00E218  6EF6               	movwf	tblptrl,c
  1812  00E21A                     	if	1	;There is more than 1 active tblptr byte
  1813  00E21A  0EFF               	movlw	high _BLACK
  1814  00E21C  6EF7               	movwf	tblptrh,c
  1815  00E21E                     	endif
  1816  00E21E                     	if	0	;There are less than 3 active tblptr bytes
  1817  00E21E                     	endif
  1818  00E21E  0009               	tblrd		*+
  1819  00E220  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  1820  00E224  0009               	tblrd		*+
  1821  00E226  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  1822  00E22A  0009               	tblrd		*+
  1823  00E22C  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  1824  00E230  000A               	tblrd		*-
  1825  00E232  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  1826  00E236  5075               	movf	main@blocksize,w,c
  1827  00E238  2475               	addwf	main@blocksize,w,c
  1828  00E23A  2471               	addwf	main@startx,w,c
  1829  00E23C  EC00  F06D         	call	_glcdDrawRectangle
  1830                           
  1831                           ;main.c: 123: for(int j = 0; j < 21; j++) {
  1832  00E240  0E00               	movlw	0
  1833  00E242  6E6E               	movwf	main@j+1,c
  1834  00E244  0E00               	movlw	0
  1835  00E246  6E6D               	movwf	main@j,c
  1836  00E248  BE6E               	btfsc	main@j+1,7,c
  1837  00E24A  D006               	goto	l143
  1838  00E24C  506E               	movf	main@j+1,w,c
  1839  00E24E  E16B               	bnz	l144
  1840  00E250  0E15               	movlw	21
  1841  00E252  5C6D               	subwf	main@j,w,c
  1842  00E254  B0D8               	btfsc	status,0,c
  1843  00E256  D067               	goto	u2720
  1844  00E258                     l143:
  1845                           
  1846                           ;main.c: 124: for(int i = 0; i < 21; i++) {
  1847  00E258  0E00               	movlw	0
  1848  00E25A  6E70               	movwf	main@i+1,c
  1849  00E25C  0E00               	movlw	0
  1850  00E25E  6E6F               	movwf	main@i,c
  1851  00E260                     l2722:
  1852  00E260  BE70               	btfsc	main@i+1,7,c
  1853  00E262  D006               	goto	l145
  1854  00E264  5070               	movf	main@i+1,w,c
  1855  00E266  E158               	bnz	l2738
  1856  00E268  0E15               	movlw	21
  1857  00E26A  5C6F               	subwf	main@i,w,c
  1858  00E26C  B0D8               	btfsc	status,0,c
  1859  00E26E  D054               	goto	u2710
  1860  00E270                     l145:
  1861                           
  1862                           ;main.c: 125: glcdDrawRectangle(startx+i*blocksize, startx+(i+1)*blocksize, starty+j*blo
      +                          cksize, starty+(j+1)*blocksize, qr[j][i] ? BLACK : WHITE);
  1863  00E270  C06D  F001         	movff	main@j,___wmul@multiplier
  1864  00E274  C06E  F002         	movff	main@j+1,___wmul@multiplier+1
  1865  00E278  0E00               	movlw	0
  1866  00E27A  6E04               	movwf	___wmul@multiplicand+1,c
  1867  00E27C  0E15               	movlw	21
  1868  00E27E  6E03               	movwf	___wmul@multiplicand,c
  1869  00E280  EC8D  F06A         	call	___wmul	;wreg free
  1870  00E284  0EC3               	movlw	low _qr
  1871  00E286  6E48               	movwf	??_main& (0+255),c
  1872  00E288  0EFD               	movlw	high _qr
  1873  00E28A  6E49               	movwf	(??_main+1)& (0+255),c
  1874  00E28C  5001               	movf	?___wmul,w,c
  1875  00E28E  2648               	addwf	??_main,f,c
  1876  00E290  5002               	movf	?___wmul+1,w,c
  1877  00E292  2249               	addwfc	??_main+1,f,c
  1878  00E294  506F               	movf	main@i,w,c
  1879  00E296  2648               	addwf	??_main,f,c
  1880  00E298  5070               	movf	main@i+1,w,c
  1881  00E29A  2249               	addwfc	??_main+1,f,c
  1882  00E29C  C048  FFF6         	movff	??_main,tblptrl
  1883  00E2A0  C049  FFF7         	movff	??_main+1,tblptrh
  1884  00E2A4                     	if	0	;tblptru may be non-zero
  1885  00E2A4                     	endif
  1886  00E2A4                     	if	0	;tblptru may be non-zero
  1887  00E2A4                     	endif
  1888  00E2A4  0008               	tblrd		*
  1889  00E2A6  50F5               	movf	tablat,w,c
  1890  00E2A8  0900               	iorlw	0
  1891  00E2AA  A4D8               	btfss	status,2,c
  1892  00E2AC  D005               	goto	l148
  1893  00E2AE  0E98               	movlw	low _WHITE
  1894  00E2B0  6EF6               	movwf	tblptrl,c
  1895  00E2B2                     	if	1	;There is more than 1 active tblptr byte
  1896  00E2B2  0EFF               	movlw	high _WHITE
  1897  00E2B4  6EF7               	movwf	tblptrh,c
  1898  00E2B6                     	endif
  1899  00E2B6                     	if	0	;There are less than 3 active tblptr bytes
  1900  00E2B6  D004               	goto	L1
  1901  00E2B8                     l148:
  1902  00E2B8  0EA0               	movlw	low _BLACK
  1903  00E2BA  6EF6               	movwf	tblptrl,c
  1904  00E2BC                     	if	1	;There is more than 1 active tblptr byte
  1905  00E2BC  0EFF               	movlw	high _BLACK
  1906  00E2BE  6EF7               	movwf	tblptrh,c
  1907  00E2C0                     	endif
  1908  00E2C0                     	if	0	;There are less than 3 active tblptr bytes
  1909  00E2C0                     L1:
  1910  00E2C0                     	endif
  1911  00E2C0  0009               	tblrd		*+
  1912  00E2C2  CFF5 F067          	movff	tablat,_main$137
  1913  00E2C6  0009               	tblrd		*+
  1914  00E2C8  CFF5 F068          	movff	tablat,_main$137+1
  1915  00E2CC  0009               	tblrd		*+
  1916  00E2CE  CFF5 F069          	movff	tablat,_main$137+2
  1917  00E2D2  000A               	tblrd		*-
  1918  00E2D4  CFF5 F06A          	movff	tablat,_main$137+3
  1919  00E2D8  286F               	incf	main@i,w,c
  1920  00E2DA  0275               	mulwf	main@blocksize,c
  1921  00E2DC  50F3               	movf	prodl,w,c
  1922  00E2DE  2471               	addwf	main@startx,w,c
  1923  00E2E0  6E07               	movwf	glcdDrawRectangle@XE,c
  1924  00E2E2  506D               	movf	main@j,w,c
  1925  00E2E4  0275               	mulwf	main@blocksize,c
  1926  00E2E6  50F3               	movf	prodl,w,c
  1927  00E2E8  2473               	addwf	main@starty,w,c
  1928  00E2EA  6E08               	movwf	glcdDrawRectangle@YS,c
  1929  00E2EC  286D               	incf	main@j,w,c
  1930  00E2EE  0275               	mulwf	main@blocksize,c
  1931  00E2F0  50F3               	movf	prodl,w,c
  1932  00E2F2  2473               	addwf	main@starty,w,c
  1933  00E2F4  6E09               	movwf	glcdDrawRectangle@YE,c
  1934  00E2F6  C067  F00A         	movff	_main$137,glcdDrawRectangle@color
  1935  00E2FA  C068  F00B         	movff	_main$137+1,glcdDrawRectangle@color+1
  1936  00E2FE  C069  F00C         	movff	_main$137+2,glcdDrawRectangle@color+2
  1937  00E302  C06A  F00D         	movff	_main$137+3,glcdDrawRectangle@color+3
  1938  00E306  506F               	movf	main@i,w,c
  1939  00E308  0275               	mulwf	main@blocksize,c
  1940  00E30A  50F3               	movf	prodl,w,c
  1941  00E30C  2471               	addwf	main@startx,w,c
  1942  00E30E  EC00  F06D         	call	_glcdDrawRectangle
  1943  00E312  4A6F               	infsnz	main@i,f,c
  1944  00E314  2A70               	incf	main@i+1,f,c
  1945  00E316  D7A4               	goto	l2722
  1946  00E318                     u2710:
  1947  00E318                     l2738:
  1948  00E318  4A6D               	infsnz	main@j,f,c
  1949  00E31A  2A6E               	incf	main@j+1,f,c
  1950  00E31C  BE6E               	btfsc	main@j+1,7,c
  1951  00E31E  D79C               	goto	l143
  1952  00E320  506E               	movf	main@j+1,w,c
  1953  00E322  E101               	bnz	l2742
  1954  00E324  D795               	goto	L2
  1955  00E326                     u2720:
  1956  00E326                     l144:
  1957  00E326                     l2742:
  1958                           
  1959                           ;main.c: 126: }
  1960                           ;main.c: 127: }
  1961                           ;main.c: 129: print_px_string(0, 0, "Jan 28, 2018  11:50 PM");
  1962  00E326  0E00               	movlw	0
  1963  00E328  6E3D               	movwf	print_px_string@x+1,c
  1964  00E32A  0E00               	movlw	0
  1965  00E32C  6E3C               	movwf	print_px_string@x,c
  1966  00E32E  0E00               	movlw	0
  1967  00E330  6E3F               	movwf	print_px_string@y+1,c
  1968  00E332  0E00               	movlw	0
  1969  00E334  6E3E               	movwf	print_px_string@y,c
  1970  00E336  0EE8               	movlw	low STR_1
  1971  00E338  6E40               	movwf	print_px_string@s,c
  1972  00E33A  0EFF               	movlw	high STR_1
  1973  00E33C  6E41               	movwf	print_px_string@s+1,c
  1974  00E33E  EC0B  F06C         	call	_print_px_string	;wreg free
  1975                           
  1976                           ;main.c: 131: char eta[] = "ETA:     - min -- sec\0";
  1977  00E342  EE20  F080         	lfsr	2,main@F3036
  1978  00E346  EE10  F04A         	lfsr	1,main@eta
  1979  00E34A  0E16               	movlw	22
  1980  00E34C                     u2731:
  1981  00E34C  CFDB FFE3          	movff	plusw2,plusw1
  1982  00E350  06E8               	decf	wreg,f,c
  1983  00E352  E2FC               	bc	u2731
  1984                           
  1985                           ;main.c: 132: int sec = 180;
  1986  00E354  0E00               	movlw	0
  1987  00E356  6E6C               	movwf	main@sec+1,c
  1988  00E358  0EB4               	movlw	180
  1989  00E35A  6E6B               	movwf	main@sec,c
  1990                           
  1991                           ;main.c: 134: while(sec-- > 0) {
  1992  00E35C  D076               	goto	l153
  1993  00E35E                     
  1994                           ;main.c: 135: eta[9] = '0' + (sec/60);
  1995  00E35E  C06B  F007         	movff	main@sec,___awdiv@dividend
  1996  00E362  C06C  F008         	movff	main@sec+1,___awdiv@dividend+1
  1997  00E366  0E00               	movlw	0
  1998  00E368  6E0A               	movwf	___awdiv@divisor+1,c
  1999  00E36A  0E3C               	movlw	60
  2000  00E36C  6E09               	movwf	___awdiv@divisor,c
  2001  00E36E  ECC9  F06B         	call	___awdiv	;wreg free
  2002  00E372  5007               	movf	?___awdiv,w,c
  2003  00E374  0F30               	addlw	48
  2004  00E376  6E53               	movwf	main@eta+9,c
  2005                           
  2006                           ;main.c: 136: eta[15] = '0' + ((sec%60)/10);
  2007  00E378  0E00               	movlw	0
  2008  00E37A  6E04               	movwf	___awmod@divisor+1,c
  2009  00E37C  0E3C               	movlw	60
  2010  00E37E  6E03               	movwf	___awmod@divisor,c
  2011  00E380  C06B  F001         	movff	main@sec,___awmod@dividend
  2012  00E384  C06C  F002         	movff	main@sec+1,___awmod@dividend+1
  2013  00E388  EC91  F06B         	call	___awmod	;wreg free
  2014  00E38C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2015  00E390  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2016  00E394  0E00               	movlw	0
  2017  00E396  6E0A               	movwf	___awdiv@divisor+1,c
  2018  00E398  0E0A               	movlw	10
  2019  00E39A  6E09               	movwf	___awdiv@divisor,c
  2020  00E39C  ECC9  F06B         	call	___awdiv	;wreg free
  2021  00E3A0  5007               	movf	?___awdiv,w,c
  2022  00E3A2  0F30               	addlw	48
  2023  00E3A4  6E59               	movwf	main@eta+15,c
  2024                           
  2025                           ;main.c: 137: eta[16] = '0' + ((sec%60)%10);
  2026  00E3A6  0E00               	movlw	0
  2027  00E3A8  6E04               	movwf	___awmod@divisor+1,c
  2028  00E3AA  0E3C               	movlw	60
  2029  00E3AC  6E03               	movwf	___awmod@divisor,c
  2030  00E3AE  C06B  F001         	movff	main@sec,___awmod@dividend
  2031  00E3B2  C06C  F002         	movff	main@sec+1,___awmod@dividend+1
  2032  00E3B6  EC91  F06B         	call	___awmod	;wreg free
  2033  00E3BA  C001  F065         	movff	?___awmod,_main$1155
  2034  00E3BE  C002  F066         	movff	?___awmod+1,_main$1155+1
  2035                           
  2036                           ;main.c: 137: eta[16] = '0' + ((sec%60)%10);
  2037  00E3C2  C065  F001         	movff	_main$1155,___awmod@dividend
  2038  00E3C6  C066  F002         	movff	_main$1155+1,___awmod@dividend+1
  2039  00E3CA  0E00               	movlw	0
  2040  00E3CC  6E04               	movwf	___awmod@divisor+1,c
  2041  00E3CE  0E0A               	movlw	10
  2042  00E3D0  6E03               	movwf	___awmod@divisor,c
  2043  00E3D2  EC91  F06B         	call	___awmod	;wreg free
  2044  00E3D6  5001               	movf	?___awmod,w,c
  2045  00E3D8  0F30               	addlw	48
  2046  00E3DA  6E5A               	movwf	main@eta+16,c
  2047                           
  2048                           ;main.c: 138: glcdDrawRectangle(0, GLCD_SIZE_VERT, 114, 128, WHITE);
  2049  00E3DC  0EE4               	movlw	low _GLCD_SIZE_VERT
  2050  00E3DE  6EF6               	movwf	tblptrl,c
  2051  00E3E0                     	if	1	;There is more than 1 active tblptr byte
  2052  00E3E0  0EFF               	movlw	high _GLCD_SIZE_VERT
  2053  00E3E2  6EF7               	movwf	tblptrh,c
  2054  00E3E4                     	endif
  2055  00E3E4                     	if	0	;There are less than 3 active tblptr bytes
  2056  00E3E4                     	endif
  2057  00E3E4  0008               	tblrd		*
  2058  00E3E6  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
  2059  00E3EA  0E72               	movlw	114
  2060  00E3EC  6E08               	movwf	glcdDrawRectangle@YS,c
  2061  00E3EE  0E80               	movlw	128
  2062  00E3F0  6E09               	movwf	glcdDrawRectangle@YE,c
  2063  00E3F2  0E98               	movlw	low _WHITE
  2064  00E3F4  6EF6               	movwf	tblptrl,c
  2065  00E3F6                     	if	1	;There is more than 1 active tblptr byte
  2066  00E3F6  0EFF               	movlw	high _WHITE
  2067  00E3F8  6EF7               	movwf	tblptrh,c
  2068  00E3FA                     	endif
  2069  00E3FA                     	if	0	;There are less than 3 active tblptr bytes
  2070  00E3FA                     	endif
  2071  00E3FA  0009               	tblrd		*+
  2072  00E3FC  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  2073  00E400  0009               	tblrd		*+
  2074  00E402  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  2075  00E406  0009               	tblrd		*+
  2076  00E408  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  2077  00E40C  000A               	tblrd		*-
  2078  00E40E  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  2079  00E412  0E00               	movlw	0
  2080  00E414  EC00  F06D         	call	_glcdDrawRectangle
  2081                           
  2082                           ;main.c: 139: print_px_string(0, 114, eta);
  2083  00E418  0E00               	movlw	0
  2084  00E41A  6E3D               	movwf	print_px_string@x+1,c
  2085  00E41C  0E00               	movlw	0
  2086  00E41E  6E3C               	movwf	print_px_string@x,c
  2087  00E420  0E00               	movlw	0
  2088  00E422  6E3F               	movwf	print_px_string@y+1,c
  2089  00E424  0E72               	movlw	114
  2090  00E426  6E3E               	movwf	print_px_string@y,c
  2091  00E428  0E4A               	movlw	low main@eta
  2092  00E42A  6E40               	movwf	print_px_string@s,c
  2093  00E42C  0E00               	movlw	high main@eta
  2094  00E42E  6E41               	movwf	print_px_string@s+1,c
  2095  00E430  EC0B  F06C         	call	_print_px_string	;wreg free
  2096                           
  2097                           ;main.c: 140: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2098  00E434  0E33               	movlw	51
  2099  00E436  6E49               	movwf	(??_main+1)& (0+255),c
  2100  00E438  0EBB               	movlw	187
  2101  00E43A  6E48               	movwf	??_main& (0+255),c
  2102  00E43C  0EE0               	movlw	224
  2103  00E43E                     u2757:
  2104  00E43E  2EE8               	decfsz	wreg,f,c
  2105  00E440  D7FE               	bra	u2757
  2106  00E442  2E48               	decfsz	??_main& (0+255),f,c
  2107  00E444  D7FC               	bra	u2757
  2108  00E446  2E49               	decfsz	(??_main+1)& (0+255),f,c
  2109  00E448  D7FA               	bra	u2757
  2110  00E44A                     l153:
  2111  00E44A  506B               	movf	main@sec,w,c
  2112  00E44C  6E48               	movwf	??_main& (0+255),c
  2113  00E44E  506C               	movf	main@sec+1,w,c
  2114  00E450  6E49               	movwf	(??_main+1)& (0+255),c
  2115  00E452  0E01               	movlw	1
  2116  00E454  5E6B               	subwf	main@sec,f,c
  2117  00E456  0E00               	movlw	0
  2118  00E458  5A6C               	subwfb	main@sec+1,f,c
  2119  00E45A  BE49               	btfsc	??_main+1,7,c
  2120  00E45C  EF00  F000         	goto	start
  2121  00E460  5049               	movf	??_main+1,w,c
  2122  00E462  E104               	bnz	u2741
  2123  00E464  0448               	decf	??_main,w,c
  2124  00E466  A0D8               	btfss	status,0,c
  2125  00E468  EF00  F000         	goto	start
  2126  00E46C                     u2741:
  2127  00E46C  D778               	goto	l154
  2128  00E46E                     __end_of_main:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodl	equ	0xFF3
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           postdec1	equ	0xFE5
  2138                           plusw1	equ	0xFE3
  2139                           fsr1l	equ	0xFE1
  2140                           plusw2	equ	0xFDB
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _print_px_string *****************
  2144 ;; Defined at:
  2145 ;;		line 126 in file "px_ascii.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  x               2   59[COMRAM] int 
  2148 ;;  y               2   61[COMRAM] int 
  2149 ;;  s               2   63[COMRAM] PTR unsigned char 
  2150 ;;		 -> main@eta(23), STR_1(23), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  idx             2   69[COMRAM] int 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:       12 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    7
  2169 ;; This function calls:
  2170 ;;		___wmul
  2171 ;;		_print_px_char
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text1
  2178  00D816                     __ptext1:
  2179                           	opt stack 0
  2180  00D816                     _print_px_string:
  2181                           	opt stack 23
  2182                           
  2183                           ;px_ascii.c: 127: int idx = 0;
  2184                           
  2185                           ;incstack = 0
  2186  00D816  0E00               	movlw	0
  2187  00D818  6E47               	movwf	print_px_string@idx+1,c
  2188  00D81A  0E00               	movlw	0
  2189  00D81C  6E46               	movwf	print_px_string@idx,c
  2190                           
  2191                           ;px_ascii.c: 128: while(s[idx] != '\0') {
  2192  00D81E  D034               	goto	l451
  2193  00D820                     
  2194                           ;px_ascii.c: 129: print_px_char(x+idx*(5+1), y, s[idx]);
  2195  00D820  C046  F001         	movff	print_px_string@idx,___wmul@multiplier
  2196  00D824  C047  F002         	movff	print_px_string@idx+1,___wmul@multiplier+1
  2197  00D828  0E00               	movlw	0
  2198  00D82A  6E04               	movwf	___wmul@multiplicand+1,c
  2199  00D82C  0E06               	movlw	6
  2200  00D82E  6E03               	movwf	___wmul@multiplicand,c
  2201  00D830  EC8D  F06A         	call	___wmul	;wreg free
  2202  00D834  503C               	movf	print_px_string@x,w,c
  2203  00D836  2401               	addwf	?___wmul,w,c
  2204  00D838  6E44               	movwf	_print_px_string$1156,c
  2205  00D83A  503D               	movf	print_px_string@x+1,w,c
  2206  00D83C  2002               	addwfc	?___wmul+1,w,c
  2207  00D83E  6E45               	movwf	_print_px_string$1156+1,c
  2208                           
  2209                           ;px_ascii.c: 129: print_px_char(x+idx*(5+1), y, s[idx]);
  2210  00D840  C044  F037         	movff	_print_px_string$1156,print_px_char@x
  2211  00D844  C045  F038         	movff	_print_px_string$1156+1,print_px_char@x+1
  2212  00D848  C03E  F039         	movff	print_px_string@y,print_px_char@y
  2213  00D84C  C03F  F03A         	movff	print_px_string@y+1,print_px_char@y+1
  2214  00D850  5046               	movf	print_px_string@idx,w,c
  2215  00D852  2440               	addwf	print_px_string@s,w,c
  2216  00D854  6E42               	movwf	??_print_px_string& (0+255),c
  2217  00D856  5047               	movf	print_px_string@idx+1,w,c
  2218  00D858  2041               	addwfc	print_px_string@s+1,w,c
  2219  00D85A  6E43               	movwf	(??_print_px_string+1)& (0+255),c
  2220  00D85C  C042  FFF6         	movff	??_print_px_string,tblptrl
  2221  00D860  C043  FFF7         	movff	??_print_px_string+1,tblptrh
  2222  00D864  0E00               	movlw	low (__mediumconst shr (0+16))
  2223  00D866  6EF8               	movwf	tblptru,c
  2224  00D868  0E0F               	movlw	(high __ramtop+-1)
  2225  00D86A  64F7               	cpfsgt	tblptrh,c
  2226  00D86C  D003               	bra	u2657
  2227  00D86E  0008               	tblrd		*
  2228  00D870  50F5               	movf	tablat,w,c
  2229  00D872  D005               	bra	u2650
  2230  00D874                     u2657:
  2231  00D874  CFF6 FFE9          	movff	tblptrl,fsr0l
  2232  00D878  CFF7 FFEA          	movff	tblptrh,fsr0h
  2233  00D87C  50EF               	movf	indf0,w,c
  2234  00D87E                     u2650:
  2235  00D87E  6E3B               	movwf	print_px_char@c,c
  2236  00D880  ECE3  F06A         	call	_print_px_char	;wreg free
  2237                           
  2238                           ;px_ascii.c: 131: idx++;
  2239  00D884  4A46               	infsnz	print_px_string@idx,f,c
  2240  00D886  2A47               	incf	print_px_string@idx+1,f,c
  2241  00D888                     l451:
  2242  00D888  5046               	movf	print_px_string@idx,w,c
  2243  00D88A  2440               	addwf	print_px_string@s,w,c
  2244  00D88C  6E42               	movwf	??_print_px_string& (0+255),c
  2245  00D88E  5047               	movf	print_px_string@idx+1,w,c
  2246  00D890  2041               	addwfc	print_px_string@s+1,w,c
  2247  00D892  6E43               	movwf	(??_print_px_string+1)& (0+255),c
  2248  00D894  C042  FFF6         	movff	??_print_px_string,tblptrl
  2249  00D898  C043  FFF7         	movff	??_print_px_string+1,tblptrh
  2250  00D89C  0E00               	movlw	low (__mediumconst shr (0+16))
  2251  00D89E  6EF8               	movwf	tblptru,c
  2252  00D8A0  0E0F               	movlw	(high __ramtop+-1)
  2253  00D8A2  64F7               	cpfsgt	tblptrh,c
  2254  00D8A4  D003               	bra	u2667
  2255  00D8A6  0008               	tblrd		*
  2256  00D8A8  50F5               	movf	tablat,w,c
  2257  00D8AA  D005               	bra	u2660
  2258  00D8AC                     u2667:
  2259  00D8AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2260  00D8B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2261  00D8B4  50EF               	movf	indf0,w,c
  2262  00D8B6                     u2660:
  2263  00D8B6  0900               	iorlw	0
  2264  00D8B8  B4D8               	btfsc	status,2,c
  2265  00D8BA  0012               	return	
  2266  00D8BC  D7B1               	goto	l452
  2267  00D8BE                     __end_of_print_px_string:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           prodl	equ	0xFF3
  2274                           indf0	equ	0xFEF
  2275                           postinc0	equ	0xFEE
  2276                           fsr0h	equ	0xFEA
  2277                           fsr0l	equ	0xFE9
  2278                           wreg	equ	0xFE8
  2279                           postdec1	equ	0xFE5
  2280                           plusw1	equ	0xFE3
  2281                           fsr1l	equ	0xFE1
  2282                           plusw2	equ	0xFDB
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _print_px_char *****************
  2286 ;; Defined at:
  2287 ;;		line 122 in file "px_ascii.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  x               2   54[COMRAM] int 
  2290 ;;  y               2   56[COMRAM] int 
  2291 ;;  c               1   58[COMRAM] unsigned char 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2303 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;Total ram usage:        5 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    6
  2310 ;; This function calls:
  2311 ;;		_draw_px_char
  2312 ;;		_px_map
  2313 ;; This function is called by:
  2314 ;;		_print_px_string
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text2
  2319  00D5C6                     __ptext2:
  2320                           	opt stack 0
  2321  00D5C6                     _print_px_char:
  2322                           	opt stack 23
  2323                           
  2324                           ;px_ascii.c: 123: draw_px_char(x, y, px_map(c));
  2325                           
  2326                           ;incstack = 0
  2327  00D5C6  C037  F021         	movff	print_px_char@x,draw_px_char@x
  2328  00D5CA  C038  F022         	movff	print_px_char@x+1,draw_px_char@x+1
  2329  00D5CE  C039  F023         	movff	print_px_char@y,draw_px_char@y
  2330  00D5D2  C03A  F024         	movff	print_px_char@y+1,draw_px_char@y+1
  2331  00D5D6  503B               	movf	print_px_char@c,w,c
  2332  00D5D8  EC37  F072         	call	_px_map
  2333  00D5DC  CFE9 FFD9          	movff	fsr0l,fsr2l
  2334  00D5E0  CFEA FFDA          	movff	fsr0h,fsr2h
  2335  00D5E4  EE00  F025         	lfsr	0,draw_px_char@p
  2336  00D5E8  0E07               	movlw	7
  2337  00D5EA                     u2641:
  2338  00D5EA  CFDB FFEB          	movff	plusw2,plusw0
  2339  00D5EE  06E8               	decf	wreg,f,c
  2340  00D5F0  E2FC               	bc	u2641
  2341  00D5F2  EC5F  F06C         	call	_draw_px_char	;wreg free
  2342  00D5F6  0012               	return		;funcret
  2343  00D5F8                     __end_of_print_px_char:
  2344                           	opt stack 0
  2345                           tblptru	equ	0xFF8
  2346                           tblptrh	equ	0xFF7
  2347                           tblptrl	equ	0xFF6
  2348                           tablat	equ	0xFF5
  2349                           prodl	equ	0xFF3
  2350                           indf0	equ	0xFEF
  2351                           postinc0	equ	0xFEE
  2352                           plusw0	equ	0xFEB
  2353                           fsr0h	equ	0xFEA
  2354                           fsr0l	equ	0xFE9
  2355                           wreg	equ	0xFE8
  2356                           postdec1	equ	0xFE5
  2357                           plusw1	equ	0xFE3
  2358                           fsr1l	equ	0xFE1
  2359                           plusw2	equ	0xFDB
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _px_map *****************
  2365 ;; Defined at:
  2366 ;;		line 19 in file "px_ascii.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  c               1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  c               1   25[COMRAM] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  8   16[COMRAM] struct .
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:       10 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		_new_px_char
  2389 ;; This function is called by:
  2390 ;;		_print_px_char
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text3
  2395  00E46E                     __ptext3:
  2396                           	opt stack 0
  2397  00E46E                     _px_map:
  2398                           	opt stack 27
  2399                           
  2400                           ;incstack = 0
  2401                           ;px_map@c stored from wreg
  2402  00E46E  6E1A               	movwf	px_map@c,c
  2403                           
  2404                           ;px_ascii.c: 21: switch(c) {
  2405  00E470  EF7A  F07D         	goto	l347
  2406  00E474  0E00               	movlw	0
  2407  00E476  6E01               	movwf	new_px_char@a,c
  2408  00E478  0E00               	movlw	0
  2409  00E47A  6E02               	movwf	new_px_char@a+1,c
  2410  00E47C  0E00               	movlw	0
  2411  00E47E  6E03               	movwf	new_px_char@a+2,c
  2412  00E480  0E00               	movlw	0
  2413  00E482  6E04               	movwf	new_px_char@a+3,c
  2414  00E484  0E00               	movlw	0
  2415  00E486  6E05               	movwf	new_px_char@b,c
  2416  00E488  0E00               	movlw	0
  2417  00E48A  6E06               	movwf	new_px_char@b+1,c
  2418  00E48C  0E00               	movlw	0
  2419  00E48E  6E07               	movwf	new_px_char@b+2,c
  2420  00E490  0E00               	movlw	0
  2421  00E492  6E08               	movwf	new_px_char@b+3,c
  2422  00E494  ECFC  F06A         	call	_new_px_char	;wreg free
  2423  00E498  CFE9 FFD9          	movff	fsr0l,fsr2l
  2424  00E49C  CFEA FFDA          	movff	fsr0h,fsr2h
  2425  00E4A0  EE00  F011         	lfsr	0,?_px_map
  2426  00E4A4  0E07               	movlw	7
  2427  00E4A6                     u1681:
  2428  00E4A6  CFDB FFEB          	movff	plusw2,plusw0
  2429  00E4AA  06E8               	decf	wreg,f,c
  2430  00E4AC  E2FC               	bc	u1681
  2431  00E4AE  0012               	return	
  2432  00E4B0  0E21               	movlw	33
  2433  00E4B2  6E01               	movwf	new_px_char@a,c
  2434  00E4B4  0E80               	movlw	128
  2435  00E4B6  6E02               	movwf	new_px_char@a+1,c
  2436  00E4B8  0E00               	movlw	0
  2437  00E4BA  6E03               	movwf	new_px_char@a+2,c
  2438  00E4BC  0E00               	movlw	0
  2439  00E4BE  6E04               	movwf	new_px_char@a+3,c
  2440  00E4C0  0E00               	movlw	0
  2441  00E4C2  6E05               	movwf	new_px_char@b,c
  2442  00E4C4  0E10               	movlw	16
  2443  00E4C6  6E06               	movwf	new_px_char@b+1,c
  2444  00E4C8  0E42               	movlw	66
  2445  00E4CA  6E07               	movwf	new_px_char@b+2,c
  2446  00E4CC  0E08               	movlw	8
  2447  00E4CE  6E08               	movwf	new_px_char@b+3,c
  2448  00E4D0  ECFC  F06A         	call	_new_px_char	;wreg free
  2449  00E4D4  CFE9 FFD9          	movff	fsr0l,fsr2l
  2450  00E4D8  CFEA FFDA          	movff	fsr0h,fsr2h
  2451  00E4DC  EE00  F011         	lfsr	0,?_px_map
  2452  00E4E0  0E07               	movlw	7
  2453  00E4E2                     u1691:
  2454  00E4E2  CFDB FFEB          	movff	plusw2,plusw0
  2455  00E4E6  06E8               	decf	wreg,f,c
  2456  00E4E8  E2FC               	bc	u1691
  2457  00E4EA  0012               	return	
  2458  00E4EC  0E00               	movlw	0
  2459  00E4EE  6E01               	movwf	new_px_char@a,c
  2460  00E4F0  0E00               	movlw	0
  2461  00E4F2  6E02               	movwf	new_px_char@a+1,c
  2462  00E4F4  0E00               	movlw	0
  2463  00E4F6  6E03               	movwf	new_px_char@a+2,c
  2464  00E4F8  0E00               	movlw	0
  2465  00E4FA  6E04               	movwf	new_px_char@a+3,c
  2466  00E4FC  0E00               	movlw	0
  2467  00E4FE  6E05               	movwf	new_px_char@b,c
  2468  00E500  0E28               	movlw	40
  2469  00E502  6E06               	movwf	new_px_char@b+1,c
  2470  00E504  0EA5               	movlw	165
  2471  00E506  6E07               	movwf	new_px_char@b+2,c
  2472  00E508  0E00               	movlw	0
  2473  00E50A  6E08               	movwf	new_px_char@b+3,c
  2474  00E50C  ECFC  F06A         	call	_new_px_char	;wreg free
  2475  00E510  CFE9 FFD9          	movff	fsr0l,fsr2l
  2476  00E514  CFEA FFDA          	movff	fsr0h,fsr2h
  2477  00E518  EE00  F011         	lfsr	0,?_px_map
  2478  00E51C  0E07               	movlw	7
  2479  00E51E                     u1701:
  2480  00E51E  CFDB FFEB          	movff	plusw2,plusw0
  2481  00E522  06E8               	decf	wreg,f,c
  2482  00E524  E2FC               	bc	u1701
  2483  00E526  0012               	return	
  2484  00E528  0EFA               	movlw	250
  2485  00E52A  6E01               	movwf	new_px_char@a,c
  2486  00E52C  0E4A               	movlw	74
  2487  00E52E  6E02               	movwf	new_px_char@a+1,c
  2488  00E530  0E01               	movlw	1
  2489  00E532  6E03               	movwf	new_px_char@a+2,c
  2490  00E534  0E00               	movlw	0
  2491  00E536  6E04               	movwf	new_px_char@a+3,c
  2492  00E538  0E00               	movlw	0
  2493  00E53A  6E05               	movwf	new_px_char@b,c
  2494  00E53C  0E00               	movlw	0
  2495  00E53E  6E06               	movwf	new_px_char@b+1,c
  2496  00E540  0EA5               	movlw	165
  2497  00E542  6E07               	movwf	new_px_char@b+2,c
  2498  00E544  0EBE               	movlw	190
  2499  00E546  6E08               	movwf	new_px_char@b+3,c
  2500  00E548  ECFC  F06A         	call	_new_px_char	;wreg free
  2501  00E54C  CFE9 FFD9          	movff	fsr0l,fsr2l
  2502  00E550  CFEA FFDA          	movff	fsr0h,fsr2h
  2503  00E554  EE00  F011         	lfsr	0,?_px_map
  2504  00E558  0E07               	movlw	7
  2505  00E55A                     u1711:
  2506  00E55A  CFDB FFEB          	movff	plusw2,plusw0
  2507  00E55E  06E8               	decf	wreg,f,c
  2508  00E560  E2FC               	bc	u1711
  2509  00E562  0012               	return	
  2510  00E564  0EA3               	movlw	163
  2511  00E566  6E01               	movwf	new_px_char@a,c
  2512  00E568  0EF4               	movlw	244
  2513  00E56A  6E02               	movwf	new_px_char@a+1,c
  2514  00E56C  0E11               	movlw	17
  2515  00E56E  6E03               	movwf	new_px_char@a+2,c
  2516  00E570  0E00               	movlw	0
  2517  00E572  6E04               	movwf	new_px_char@a+3,c
  2518  00E574  0E00               	movlw	0
  2519  00E576  6E05               	movwf	new_px_char@b,c
  2520  00E578  0E10               	movlw	16
  2521  00E57A  6E06               	movwf	new_px_char@b+1,c
  2522  00E57C  0E5F               	movlw	95
  2523  00E57E  6E07               	movwf	new_px_char@b+2,c
  2524  00E580  0E8A               	movlw	138
  2525  00E582  6E08               	movwf	new_px_char@b+3,c
  2526  00E584  ECFC  F06A         	call	_new_px_char	;wreg free
  2527  00E588  CFE9 FFD9          	movff	fsr0l,fsr2l
  2528  00E58C  CFEA FFDA          	movff	fsr0h,fsr2h
  2529  00E590  EE00  F011         	lfsr	0,?_px_map
  2530  00E594  0E07               	movlw	7
  2531  00E596                     u1721:
  2532  00E596  CFDB FFEB          	movff	plusw2,plusw0
  2533  00E59A  06E8               	decf	wreg,f,c
  2534  00E59C  E2FC               	bc	u1721
  2535  00E59E  0012               	return	
  2536  00E5A0  0E11               	movlw	17
  2537  00E5A2  6E01               	movwf	new_px_char@a,c
  2538  00E5A4  0EAA               	movlw	170
  2539  00E5A6  6E02               	movwf	new_px_char@a+1,c
  2540  00E5A8  0E26               	movlw	38
  2541  00E5AA  6E03               	movwf	new_px_char@a+2,c
  2542  00E5AC  0E00               	movlw	0
  2543  00E5AE  6E04               	movwf	new_px_char@a+3,c
  2544  00E5B0  0E00               	movlw	0
  2545  00E5B2  6E05               	movwf	new_px_char@b,c
  2546  00E5B4  0EC8               	movlw	200
  2547  00E5B6  6E06               	movwf	new_px_char@b+1,c
  2548  00E5B8  0EAA               	movlw	170
  2549  00E5BA  6E07               	movwf	new_px_char@b+2,c
  2550  00E5BC  0E10               	movlw	16
  2551  00E5BE  6E08               	movwf	new_px_char@b+3,c
  2552  00E5C0  ECFC  F06A         	call	_new_px_char	;wreg free
  2553  00E5C4  CFE9 FFD9          	movff	fsr0l,fsr2l
  2554  00E5C8  CFEA FFDA          	movff	fsr0h,fsr2h
  2555  00E5CC  EE00  F011         	lfsr	0,?_px_map
  2556  00E5D0  0E07               	movlw	7
  2557  00E5D2                     u1731:
  2558  00E5D2  CFDB FFEB          	movff	plusw2,plusw0
  2559  00E5D6  06E8               	decf	wreg,f,c
  2560  00E5D8  E2FC               	bc	u1731
  2561  00E5DA  0012               	return	
  2562  00E5DC  0E28               	movlw	40
  2563  00E5DE  6E01               	movwf	new_px_char@a,c
  2564  00E5E0  0E39               	movlw	57
  2565  00E5E2  6E02               	movwf	new_px_char@a+1,c
  2566  00E5E4  0E59               	movlw	89
  2567  00E5E6  6E03               	movwf	new_px_char@a+2,c
  2568  00E5E8  0E00               	movlw	0
  2569  00E5EA  6E04               	movwf	new_px_char@a+3,c
  2570  00E5EC  0E00               	movlw	0
  2571  00E5EE  6E05               	movwf	new_px_char@b,c
  2572  00E5F0  0E00               	movlw	0
  2573  00E5F2  6E06               	movwf	new_px_char@b+1,c
  2574  00E5F4  0E51               	movlw	81
  2575  00E5F6  6E07               	movwf	new_px_char@b+2,c
  2576  00E5F8  0E8A               	movlw	138
  2577  00E5FA  6E08               	movwf	new_px_char@b+3,c
  2578  00E5FC  ECFC  F06A         	call	_new_px_char	;wreg free
  2579  00E600  CFE9 FFD9          	movff	fsr0l,fsr2l
  2580  00E604  CFEA FFDA          	movff	fsr0h,fsr2h
  2581  00E608  EE00  F011         	lfsr	0,?_px_map
  2582  00E60C  0E07               	movlw	7
  2583  00E60E                     u1741:
  2584  00E60E  CFDB FFEB          	movff	plusw2,plusw0
  2585  00E612  06E8               	decf	wreg,f,c
  2586  00E614  E2FC               	bc	u1741
  2587  00E616  0012               	return	
  2588  00E618  0E00               	movlw	0
  2589  00E61A  6E01               	movwf	new_px_char@a,c
  2590  00E61C  0E00               	movlw	0
  2591  00E61E  6E02               	movwf	new_px_char@a+1,c
  2592  00E620  0E00               	movlw	0
  2593  00E622  6E03               	movwf	new_px_char@a+2,c
  2594  00E624  0E00               	movlw	0
  2595  00E626  6E04               	movwf	new_px_char@a+3,c
  2596  00E628  0E00               	movlw	0
  2597  00E62A  6E05               	movwf	new_px_char@b,c
  2598  00E62C  0E10               	movlw	16
  2599  00E62E  6E06               	movwf	new_px_char@b+1,c
  2600  00E630  0E42               	movlw	66
  2601  00E632  6E07               	movwf	new_px_char@b+2,c
  2602  00E634  0E00               	movlw	0
  2603  00E636  6E08               	movwf	new_px_char@b+3,c
  2604  00E638  ECFC  F06A         	call	_new_px_char	;wreg free
  2605  00E63C  CFE9 FFD9          	movff	fsr0l,fsr2l
  2606  00E640  CFEA FFDA          	movff	fsr0h,fsr2h
  2607  00E644  EE00  F011         	lfsr	0,?_px_map
  2608  00E648  0E07               	movlw	7
  2609  00E64A                     u1751:
  2610  00E64A  CFDB FFEB          	movff	plusw2,plusw0
  2611  00E64E  06E8               	decf	wreg,f,c
  2612  00E650  E2FC               	bc	u1751
  2613  00E652  0012               	return	
  2614  00E654  0E10               	movlw	16
  2615  00E656  6E01               	movwf	new_px_char@a,c
  2616  00E658  0E82               	movlw	130
  2617  00E65A  6E02               	movwf	new_px_char@a+1,c
  2618  00E65C  0E10               	movlw	16
  2619  00E65E  6E03               	movwf	new_px_char@a+2,c
  2620  00E660  0E04               	movlw	4
  2621  00E662  6E04               	movwf	new_px_char@a+3,c
  2622  00E664  0E00               	movlw	0
  2623  00E666  6E05               	movwf	new_px_char@b,c
  2624  00E668  0E11               	movlw	17
  2625  00E66A  6E06               	movwf	new_px_char@b+1,c
  2626  00E66C  0E22               	movlw	34
  2627  00E66E  6E07               	movwf	new_px_char@b+2,c
  2628  00E670  0E84               	movlw	132
  2629  00E672  6E08               	movwf	new_px_char@b+3,c
  2630  00E674  ECFC  F06A         	call	_new_px_char	;wreg free
  2631  00E678  CFE9 FFD9          	movff	fsr0l,fsr2l
  2632  00E67C  CFEA FFDA          	movff	fsr0h,fsr2h
  2633  00E680  EE00  F011         	lfsr	0,?_px_map
  2634  00E684  0E07               	movlw	7
  2635  00E686                     u1761:
  2636  00E686  CFDB FFEB          	movff	plusw2,plusw0
  2637  00E68A  06E8               	decf	wreg,f,c
  2638  00E68C  E2FC               	bc	u1761
  2639  00E68E  0012               	return	
  2640  00E690  0E42               	movlw	66
  2641  00E692  6E01               	movwf	new_px_char@a,c
  2642  00E694  0E88               	movlw	136
  2643  00E696  6E02               	movwf	new_px_char@a+1,c
  2644  00E698  0E10               	movlw	16
  2645  00E69A  6E03               	movwf	new_px_char@a+2,c
  2646  00E69C  0E01               	movlw	1
  2647  00E69E  6E04               	movwf	new_px_char@a+3,c
  2648  00E6A0  0E40               	movlw	64
  2649  00E6A2  6E05               	movwf	new_px_char@b,c
  2650  00E6A4  0E10               	movlw	16
  2651  00E6A6  6E06               	movwf	new_px_char@b+1,c
  2652  00E6A8  0E82               	movlw	130
  2653  00E6AA  6E07               	movwf	new_px_char@b+2,c
  2654  00E6AC  0E10               	movlw	16
  2655  00E6AE  6E08               	movwf	new_px_char@b+3,c
  2656  00E6B0  ECFC  F06A         	call	_new_px_char	;wreg free
  2657  00E6B4  CFE9 FFD9          	movff	fsr0l,fsr2l
  2658  00E6B8  CFEA FFDA          	movff	fsr0h,fsr2h
  2659  00E6BC  EE00  F011         	lfsr	0,?_px_map
  2660  00E6C0  0E07               	movlw	7
  2661  00E6C2                     u1771:
  2662  00E6C2  CFDB FFEB          	movff	plusw2,plusw0
  2663  00E6C6  06E8               	decf	wreg,f,c
  2664  00E6C8  E2FC               	bc	u1771
  2665  00E6CA  0012               	return	
  2666  00E6CC  0E01               	movlw	1
  2667  00E6CE  6E01               	movwf	new_px_char@a,c
  2668  00E6D0  0E00               	movlw	0
  2669  00E6D2  6E02               	movwf	new_px_char@a+1,c
  2670  00E6D4  0E00               	movlw	0
  2671  00E6D6  6E03               	movwf	new_px_char@a+2,c
  2672  00E6D8  0E00               	movlw	0
  2673  00E6DA  6E04               	movwf	new_px_char@a+3,c
  2674  00E6DC  0E00               	movlw	0
  2675  00E6DE  6E05               	movwf	new_px_char@b,c
  2676  00E6E0  0E90               	movlw	144
  2677  00E6E2  6E06               	movwf	new_px_char@b+1,c
  2678  00E6E4  0EEA               	movlw	234
  2679  00E6E6  6E07               	movwf	new_px_char@b+2,c
  2680  00E6E8  0E2A               	movlw	42
  2681  00E6EA  6E08               	movwf	new_px_char@b+3,c
  2682  00E6EC  ECFC  F06A         	call	_new_px_char	;wreg free
  2683  00E6F0  CFE9 FFD9          	movff	fsr0l,fsr2l
  2684  00E6F4  CFEA FFDA          	movff	fsr0h,fsr2h
  2685  00E6F8  EE00  F011         	lfsr	0,?_px_map
  2686  00E6FC  0E07               	movlw	7
  2687  00E6FE                     u1781:
  2688  00E6FE  CFDB FFEB          	movff	plusw2,plusw0
  2689  00E702  06E8               	decf	wreg,f,c
  2690  00E704  E2FC               	bc	u1781
  2691  00E706  0012               	return	
  2692  00E708  0E27               	movlw	39
  2693  00E70A  6E01               	movwf	new_px_char@a,c
  2694  00E70C  0E04               	movlw	4
  2695  00E70E  6E02               	movwf	new_px_char@a+1,c
  2696  00E710  0E00               	movlw	0
  2697  00E712  6E03               	movwf	new_px_char@a+2,c
  2698  00E714  0E00               	movlw	0
  2699  00E716  6E04               	movwf	new_px_char@a+3,c
  2700  00E718  0E00               	movlw	0
  2701  00E71A  6E05               	movwf	new_px_char@b,c
  2702  00E71C  0E00               	movlw	0
  2703  00E71E  6E06               	movwf	new_px_char@b+1,c
  2704  00E720  0E40               	movlw	64
  2705  00E722  6E07               	movwf	new_px_char@b+2,c
  2706  00E724  0EC8               	movlw	200
  2707  00E726  6E08               	movwf	new_px_char@b+3,c
  2708  00E728  ECFC  F06A         	call	_new_px_char	;wreg free
  2709  00E72C  CFE9 FFD9          	movff	fsr0l,fsr2l
  2710  00E730  CFEA FFDA          	movff	fsr0h,fsr2h
  2711  00E734  EE00  F011         	lfsr	0,?_px_map
  2712  00E738  0E07               	movlw	7
  2713  00E73A                     u1791:
  2714  00E73A  CFDB FFEB          	movff	plusw2,plusw0
  2715  00E73E  06E8               	decf	wreg,f,c
  2716  00E740  E2FC               	bc	u1791
  2717  00E742  0012               	return	
  2718  00E744  0E00               	movlw	0
  2719  00E746  6E01               	movwf	new_px_char@a,c
  2720  00E748  0E80               	movlw	128
  2721  00E74A  6E02               	movwf	new_px_char@a+1,c
  2722  00E74C  0E11               	movlw	17
  2723  00E74E  6E03               	movwf	new_px_char@a+2,c
  2724  00E750  0E01               	movlw	1
  2725  00E752  6E04               	movwf	new_px_char@a+3,c
  2726  00E754  0E00               	movlw	0
  2727  00E756  6E05               	movwf	new_px_char@b,c
  2728  00E758  0E00               	movlw	0
  2729  00E75A  6E06               	movwf	new_px_char@b+1,c
  2730  00E75C  0E00               	movlw	0
  2731  00E75E  6E07               	movwf	new_px_char@b+2,c
  2732  00E760  0E00               	movlw	0
  2733  00E762  6E08               	movwf	new_px_char@b+3,c
  2734  00E764  ECFC  F06A         	call	_new_px_char	;wreg free
  2735  00E768  CFE9 FFD9          	movff	fsr0l,fsr2l
  2736  00E76C  CFEA FFDA          	movff	fsr0h,fsr2h
  2737  00E770  EE00  F011         	lfsr	0,?_px_map
  2738  00E774  0E07               	movlw	7
  2739  00E776                     u1801:
  2740  00E776  CFDB FFEB          	movff	plusw2,plusw0
  2741  00E77A  06E8               	decf	wreg,f,c
  2742  00E77C  E2FC               	bc	u1801
  2743  00E77E  0012               	return	
  2744  00E780  0E07               	movlw	7
  2745  00E782  6E01               	movwf	new_px_char@a,c
  2746  00E784  0E00               	movlw	0
  2747  00E786  6E02               	movwf	new_px_char@a+1,c
  2748  00E788  0E00               	movlw	0
  2749  00E78A  6E03               	movwf	new_px_char@a+2,c
  2750  00E78C  0E00               	movlw	0
  2751  00E78E  6E04               	movwf	new_px_char@a+3,c
  2752  00E790  0E00               	movlw	0
  2753  00E792  6E05               	movwf	new_px_char@b,c
  2754  00E794  0E00               	movlw	0
  2755  00E796  6E06               	movwf	new_px_char@b+1,c
  2756  00E798  0E00               	movlw	0
  2757  00E79A  6E07               	movwf	new_px_char@b+2,c
  2758  00E79C  0EC0               	movlw	192
  2759  00E79E  6E08               	movwf	new_px_char@b+3,c
  2760  00E7A0  ECFC  F06A         	call	_new_px_char	;wreg free
  2761  00E7A4  CFE9 FFD9          	movff	fsr0l,fsr2l
  2762  00E7A8  CFEA FFDA          	movff	fsr0h,fsr2h
  2763  00E7AC  EE00  F011         	lfsr	0,?_px_map
  2764  00E7B0  0E07               	movlw	7
  2765  00E7B2                     u1811:
  2766  00E7B2  CFDB FFEB          	movff	plusw2,plusw0
  2767  00E7B6  06E8               	decf	wreg,f,c
  2768  00E7B8  E2FC               	bc	u1811
  2769  00E7BA  0012               	return	
  2770  00E7BC  0E00               	movlw	0
  2771  00E7BE  6E01               	movwf	new_px_char@a,c
  2772  00E7C0  0E80               	movlw	128
  2773  00E7C2  6E02               	movwf	new_px_char@a+1,c
  2774  00E7C4  0E38               	movlw	56
  2775  00E7C6  6E03               	movwf	new_px_char@a+2,c
  2776  00E7C8  0E02               	movlw	2
  2777  00E7CA  6E04               	movwf	new_px_char@a+3,c
  2778  00E7CC  0E00               	movlw	0
  2779  00E7CE  6E05               	movwf	new_px_char@b,c
  2780  00E7D0  0E00               	movlw	0
  2781  00E7D2  6E06               	movwf	new_px_char@b+1,c
  2782  00E7D4  0E00               	movlw	0
  2783  00E7D6  6E07               	movwf	new_px_char@b+2,c
  2784  00E7D8  0E00               	movlw	0
  2785  00E7DA  6E08               	movwf	new_px_char@b+3,c
  2786  00E7DC  ECFC  F06A         	call	_new_px_char	;wreg free
  2787  00E7E0  CFE9 FFD9          	movff	fsr0l,fsr2l
  2788  00E7E4  CFEA FFDA          	movff	fsr0h,fsr2h
  2789  00E7E8  EE00  F011         	lfsr	0,?_px_map
  2790  00E7EC  0E07               	movlw	7
  2791  00E7EE                     u1821:
  2792  00E7EE  CFDB FFEB          	movff	plusw2,plusw0
  2793  00E7F2  06E8               	decf	wreg,f,c
  2794  00E7F4  E2FC               	bc	u1821
  2795  00E7F6  0012               	return	
  2796  00E7F8  0E11               	movlw	17
  2797  00E7FA  6E01               	movwf	new_px_char@a,c
  2798  00E7FC  0E22               	movlw	34
  2799  00E7FE  6E02               	movwf	new_px_char@a+1,c
  2800  00E800  0E04               	movlw	4
  2801  00E802  6E03               	movwf	new_px_char@a+2,c
  2802  00E804  0E00               	movlw	0
  2803  00E806  6E04               	movwf	new_px_char@a+3,c
  2804  00E808  0E00               	movlw	0
  2805  00E80A  6E05               	movwf	new_px_char@b,c
  2806  00E80C  0E40               	movlw	64
  2807  00E80E  6E06               	movwf	new_px_char@b+1,c
  2808  00E810  0E88               	movlw	136
  2809  00E812  6E07               	movwf	new_px_char@b+2,c
  2810  00E814  0E10               	movlw	16
  2811  00E816  6E08               	movwf	new_px_char@b+3,c
  2812  00E818  ECFC  F06A         	call	_new_px_char	;wreg free
  2813  00E81C  CFE9 FFD9          	movff	fsr0l,fsr2l
  2814  00E820  CFEA FFDA          	movff	fsr0h,fsr2h
  2815  00E824  EE00  F011         	lfsr	0,?_px_map
  2816  00E828  0E07               	movlw	7
  2817  00E82A                     u1831:
  2818  00E82A  CFDB FFEB          	movff	plusw2,plusw0
  2819  00E82E  06E8               	decf	wreg,f,c
  2820  00E830  E2FC               	bc	u1831
  2821  00E832  0012               	return	
  2822  00E834  0E8C               	movlw	140
  2823  00E836  6E01               	movwf	new_px_char@a,c
  2824  00E838  0E8A               	movlw	138
  2825  00E83A  6E02               	movwf	new_px_char@a+1,c
  2826  00E83C  0E00               	movlw	0
  2827  00E83E  6E03               	movwf	new_px_char@a+2,c
  2828  00E840  0E00               	movlw	0
  2829  00E842  6E04               	movwf	new_px_char@a+3,c
  2830  00E844  0E80               	movlw	128
  2831  00E846  6E05               	movwf	new_px_char@b,c
  2832  00E848  0EA8               	movlw	168
  2833  00E84A  6E06               	movwf	new_px_char@b+1,c
  2834  00E84C  0E18               	movlw	24
  2835  00E84E  6E07               	movwf	new_px_char@b+2,c
  2836  00E850  0E63               	movlw	99
  2837  00E852  6E08               	movwf	new_px_char@b+3,c
  2838  00E854  ECFC  F06A         	call	_new_px_char	;wreg free
  2839  00E858  CFE9 FFD9          	movff	fsr0l,fsr2l
  2840  00E85C  CFEA FFDA          	movff	fsr0h,fsr2h
  2841  00E860  EE00  F011         	lfsr	0,?_px_map
  2842  00E864  0E07               	movlw	7
  2843  00E866                     u1841:
  2844  00E866  CFDB FFEB          	movff	plusw2,plusw0
  2845  00E86A  06E8               	decf	wreg,f,c
  2846  00E86C  E2FC               	bc	u1841
  2847  00E86E  0012               	return	
  2848  00E870  0E21               	movlw	33
  2849  00E872  6E01               	movwf	new_px_char@a,c
  2850  00E874  0EE4               	movlw	228
  2851  00E876  6E02               	movwf	new_px_char@a+1,c
  2852  00E878  0E03               	movlw	3
  2853  00E87A  6E03               	movwf	new_px_char@a+2,c
  2854  00E87C  0E00               	movlw	0
  2855  00E87E  6E04               	movwf	new_px_char@a+3,c
  2856  00E880  0E80               	movlw	128
  2857  00E882  6E05               	movwf	new_px_char@b,c
  2858  00E884  0E98               	movlw	152
  2859  00E886  6E06               	movwf	new_px_char@b+1,c
  2860  00E888  0E42               	movlw	66
  2861  00E88A  6E07               	movwf	new_px_char@b+2,c
  2862  00E88C  0E08               	movlw	8
  2863  00E88E  6E08               	movwf	new_px_char@b+3,c
  2864  00E890  ECFC  F06A         	call	_new_px_char	;wreg free
  2865  00E894  CFE9 FFD9          	movff	fsr0l,fsr2l
  2866  00E898  CFEA FFDA          	movff	fsr0h,fsr2h
  2867  00E89C  EE00  F011         	lfsr	0,?_px_map
  2868  00E8A0  0E07               	movlw	7
  2869  00E8A2                     u1851:
  2870  00E8A2  CFDB FFEB          	movff	plusw2,plusw0
  2871  00E8A6  06E8               	decf	wreg,f,c
  2872  00E8A8  E2FC               	bc	u1851
  2873  00E8AA  0012               	return	
  2874  00E8AC  0E11               	movlw	17
  2875  00E8AE  6E01               	movwf	new_px_char@a,c
  2876  00E8B0  0EE1               	movlw	225
  2877  00E8B2  6E02               	movwf	new_px_char@a+1,c
  2878  00E8B4  0E03               	movlw	3
  2879  00E8B6  6E03               	movwf	new_px_char@a+2,c
  2880  00E8B8  0E00               	movlw	0
  2881  00E8BA  6E04               	movwf	new_px_char@a+3,c
  2882  00E8BC  0EC0               	movlw	192
  2883  00E8BE  6E05               	movwf	new_px_char@b,c
  2884  00E8C0  0EC5               	movlw	197
  2885  00E8C2  6E06               	movwf	new_px_char@b+1,c
  2886  00E8C4  0E08               	movlw	8
  2887  00E8C6  6E07               	movwf	new_px_char@b+2,c
  2888  00E8C8  0E11               	movlw	17
  2889  00E8CA  6E08               	movwf	new_px_char@b+3,c
  2890  00E8CC  ECFC  F06A         	call	_new_px_char	;wreg free
  2891  00E8D0  CFE9 FFD9          	movff	fsr0l,fsr2l
  2892  00E8D4  CFEA FFDA          	movff	fsr0h,fsr2h
  2893  00E8D8  EE00  F011         	lfsr	0,?_px_map
  2894  00E8DC  0E07               	movlw	7
  2895  00E8DE                     u1861:
  2896  00E8DE  CFDB FFEB          	movff	plusw2,plusw0
  2897  00E8E2  06E8               	decf	wreg,f,c
  2898  00E8E4  E2FC               	bc	u1861
  2899  00E8E6  0012               	return	
  2900  00E8E8  0E84               	movlw	132
  2901  00E8EA  6E01               	movwf	new_px_char@a,c
  2902  00E8EC  0ED1               	movlw	209
  2903  00E8EE  6E02               	movwf	new_px_char@a+1,c
  2904  00E8F0  0E01               	movlw	1
  2905  00E8F2  6E03               	movwf	new_px_char@a+2,c
  2906  00E8F4  0E00               	movlw	0
  2907  00E8F6  6E04               	movwf	new_px_char@a+3,c
  2908  00E8F8  0EE0               	movlw	224
  2909  00E8FA  6E05               	movwf	new_px_char@b,c
  2910  00E8FC  0E43               	movlw	67
  2911  00E8FE  6E06               	movwf	new_px_char@b+1,c
  2912  00E900  0E44               	movlw	68
  2913  00E902  6E07               	movwf	new_px_char@b+2,c
  2914  00E904  0E1C               	movlw	28
  2915  00E906  6E08               	movwf	new_px_char@b+3,c
  2916  00E908  ECFC  F06A         	call	_new_px_char	;wreg free
  2917  00E90C  CFE9 FFD9          	movff	fsr0l,fsr2l
  2918  00E910  CFEA FFDA          	movff	fsr0h,fsr2h
  2919  00E914  EE00  F011         	lfsr	0,?_px_map
  2920  00E918  0E07               	movlw	7
  2921  00E91A                     u1871:
  2922  00E91A  CFDB FFEB          	movff	plusw2,plusw0
  2923  00E91E  06E8               	decf	wreg,f,c
  2924  00E920  E2FC               	bc	u1871
  2925  00E922  0012               	return	
  2926  00E924  0EFA               	movlw	250
  2927  00E926  6E01               	movwf	new_px_char@a,c
  2928  00E928  0E08               	movlw	8
  2929  00E92A  6E02               	movwf	new_px_char@a+1,c
  2930  00E92C  0E01               	movlw	1
  2931  00E92E  6E03               	movwf	new_px_char@a+2,c
  2932  00E930  0E00               	movlw	0
  2933  00E932  6E04               	movwf	new_px_char@a+3,c
  2934  00E934  0E00               	movlw	0
  2935  00E936  6E05               	movwf	new_px_char@b,c
  2936  00E938  0E21               	movlw	33
  2937  00E93A  6E06               	movwf	new_px_char@b+1,c
  2938  00E93C  0EA6               	movlw	166
  2939  00E93E  6E07               	movwf	new_px_char@b+2,c
  2940  00E940  0E54               	movlw	84
  2941  00E942  6E08               	movwf	new_px_char@b+3,c
  2942  00E944  ECFC  F06A         	call	_new_px_char	;wreg free
  2943  00E948  CFE9 FFD9          	movff	fsr0l,fsr2l
  2944  00E94C  CFEA FFDA          	movff	fsr0h,fsr2h
  2945  00E950  EE00  F011         	lfsr	0,?_px_map
  2946  00E954  0E07               	movlw	7
  2947  00E956                     u1881:
  2948  00E956  CFDB FFEB          	movff	plusw2,plusw0
  2949  00E95A  06E8               	decf	wreg,f,c
  2950  00E95C  E2FC               	bc	u1881
  2951  00E95E  0012               	return	
  2952  00E960  0E84               	movlw	132
  2953  00E962  6E01               	movwf	new_px_char@a,c
  2954  00E964  0ED1               	movlw	209
  2955  00E966  6E02               	movwf	new_px_char@a+1,c
  2956  00E968  0E01               	movlw	1
  2957  00E96A  6E03               	movwf	new_px_char@a+2,c
  2958  00E96C  0E00               	movlw	0
  2959  00E96E  6E04               	movwf	new_px_char@a+3,c
  2960  00E970  0EE0               	movlw	224
  2961  00E972  6E05               	movwf	new_px_char@b,c
  2962  00E974  0E87               	movlw	135
  2963  00E976  6E06               	movwf	new_px_char@b+1,c
  2964  00E978  0ED0               	movlw	208
  2965  00E97A  6E07               	movwf	new_px_char@b+2,c
  2966  00E97C  0E26               	movlw	38
  2967  00E97E  6E08               	movwf	new_px_char@b+3,c
  2968  00E980  ECFC  F06A         	call	_new_px_char	;wreg free
  2969  00E984  CFE9 FFD9          	movff	fsr0l,fsr2l
  2970  00E988  CFEA FFDA          	movff	fsr0h,fsr2h
  2971  00E98C  EE00  F011         	lfsr	0,?_px_map
  2972  00E990  0E07               	movlw	7
  2973  00E992                     u1891:
  2974  00E992  CFDB FFEB          	movff	plusw2,plusw0
  2975  00E996  06E8               	decf	wreg,f,c
  2976  00E998  E2FC               	bc	u1891
  2977  00E99A  0012               	return	
  2978  00E99C  0E8C               	movlw	140
  2979  00E99E  6E01               	movwf	new_px_char@a,c
  2980  00E9A0  0ED1               	movlw	209
  2981  00E9A2  6E02               	movwf	new_px_char@a+1,c
  2982  00E9A4  0E01               	movlw	1
  2983  00E9A6  6E03               	movwf	new_px_char@a+2,c
  2984  00E9A8  0E00               	movlw	0
  2985  00E9AA  6E04               	movwf	new_px_char@a+3,c
  2986  00E9AC  0EC0               	movlw	192
  2987  00E9AE  6E05               	movwf	new_px_char@b,c
  2988  00E9B0  0EC5               	movlw	197
  2989  00E9B2  6E06               	movwf	new_px_char@b+1,c
  2990  00E9B4  0E10               	movlw	16
  2991  00E9B6  6E07               	movwf	new_px_char@b+2,c
  2992  00E9B8  0E5E               	movlw	94
  2993  00E9BA  6E08               	movwf	new_px_char@b+3,c
  2994  00E9BC  ECFC  F06A         	call	_new_px_char	;wreg free
  2995  00E9C0  CFE9 FFD9          	movff	fsr0l,fsr2l
  2996  00E9C4  CFEA FFDA          	movff	fsr0h,fsr2h
  2997  00E9C8  EE00  F011         	lfsr	0,?_px_map
  2998  00E9CC  0E07               	movlw	7
  2999  00E9CE                     u1901:
  3000  00E9CE  CFDB FFEB          	movff	plusw2,plusw0
  3001  00E9D2  06E8               	decf	wreg,f,c
  3002  00E9D4  E2FC               	bc	u1901
  3003  00E9D6  0012               	return	
  3004  00E9D8  0E11               	movlw	17
  3005  00E9DA  6E01               	movwf	new_px_char@a,c
  3006  00E9DC  0E42               	movlw	66
  3007  00E9DE  6E02               	movwf	new_px_char@a+1,c
  3008  00E9E0  0E00               	movlw	0
  3009  00E9E2  6E03               	movwf	new_px_char@a+2,c
  3010  00E9E4  0E00               	movlw	0
  3011  00E9E6  6E04               	movwf	new_px_char@a+3,c
  3012  00E9E8  0EE0               	movlw	224
  3013  00E9EA  6E05               	movwf	new_px_char@b,c
  3014  00E9EC  0E43               	movlw	67
  3015  00E9EE  6E06               	movwf	new_px_char@b+1,c
  3016  00E9F0  0E84               	movlw	132
  3017  00E9F2  6E07               	movwf	new_px_char@b+2,c
  3018  00E9F4  0E08               	movlw	8
  3019  00E9F6  6E08               	movwf	new_px_char@b+3,c
  3020  00E9F8  ECFC  F06A         	call	_new_px_char	;wreg free
  3021  00E9FC  CFE9 FFD9          	movff	fsr0l,fsr2l
  3022  00EA00  CFEA FFDA          	movff	fsr0h,fsr2h
  3023  00EA04  EE00  F011         	lfsr	0,?_px_map
  3024  00EA08  0E07               	movlw	7
  3025  00EA0A                     u1911:
  3026  00EA0A  CFDB FFEB          	movff	plusw2,plusw0
  3027  00EA0E  06E8               	decf	wreg,f,c
  3028  00EA10  E2FC               	bc	u1911
  3029  00EA12  0012               	return	
  3030  00EA14  0E8C               	movlw	140
  3031  00EA16  6E01               	movwf	new_px_char@a,c
  3032  00EA18  0ED1               	movlw	209
  3033  00EA1A  6E02               	movwf	new_px_char@a+1,c
  3034  00EA1C  0E01               	movlw	1
  3035  00EA1E  6E03               	movwf	new_px_char@a+2,c
  3036  00EA20  0E00               	movlw	0
  3037  00EA22  6E04               	movwf	new_px_char@a+3,c
  3038  00EA24  0EC0               	movlw	192
  3039  00EA26  6E05               	movwf	new_px_char@b,c
  3040  00EA28  0EC5               	movlw	197
  3041  00EA2A  6E06               	movwf	new_px_char@b+1,c
  3042  00EA2C  0E18               	movlw	24
  3043  00EA2E  6E07               	movwf	new_px_char@b+2,c
  3044  00EA30  0E5D               	movlw	93
  3045  00EA32  6E08               	movwf	new_px_char@b+3,c
  3046  00EA34  ECFC  F06A         	call	_new_px_char	;wreg free
  3047  00EA38  CFE9 FFD9          	movff	fsr0l,fsr2l
  3048  00EA3C  CFEA FFDA          	movff	fsr0h,fsr2h
  3049  00EA40  EE00  F011         	lfsr	0,?_px_map
  3050  00EA44  0E07               	movlw	7
  3051  00EA46                     u1921:
  3052  00EA46  CFDB FFEB          	movff	plusw2,plusw0
  3053  00EA4A  06E8               	decf	wreg,f,c
  3054  00EA4C  E2FC               	bc	u1921
  3055  00EA4E  0012               	return	
  3056  00EA50  0E84               	movlw	132
  3057  00EA52  6E01               	movwf	new_px_char@a,c
  3058  00EA54  0ED1               	movlw	209
  3059  00EA56  6E02               	movwf	new_px_char@a+1,c
  3060  00EA58  0E01               	movlw	1
  3061  00EA5A  6E03               	movwf	new_px_char@a+2,c
  3062  00EA5C  0E00               	movlw	0
  3063  00EA5E  6E04               	movwf	new_px_char@a+3,c
  3064  00EA60  0EC0               	movlw	192
  3065  00EA62  6E05               	movwf	new_px_char@b,c
  3066  00EA64  0EC5               	movlw	197
  3067  00EA66  6E06               	movwf	new_px_char@b+1,c
  3068  00EA68  0E18               	movlw	24
  3069  00EA6A  6E07               	movwf	new_px_char@b+2,c
  3070  00EA6C  0E3D               	movlw	61
  3071  00EA6E  6E08               	movwf	new_px_char@b+3,c
  3072  00EA70  ECFC  F06A         	call	_new_px_char	;wreg free
  3073  00EA74  CFE9 FFD9          	movff	fsr0l,fsr2l
  3074  00EA78  CFEA FFDA          	movff	fsr0h,fsr2h
  3075  00EA7C  EE00  F011         	lfsr	0,?_px_map
  3076  00EA80  0E07               	movlw	7
  3077  00EA82                     u1931:
  3078  00EA82  CFDB FFEB          	movff	plusw2,plusw0
  3079  00EA86  06E8               	decf	wreg,f,c
  3080  00EA88  E2FC               	bc	u1931
  3081  00EA8A  0012               	return	
  3082  00EA8C  0E20               	movlw	32
  3083  00EA8E  6E01               	movwf	new_px_char@a,c
  3084  00EA90  0E8E               	movlw	142
  3085  00EA92  6E02               	movwf	new_px_char@a+1,c
  3086  00EA94  0E00               	movlw	0
  3087  00EA96  6E03               	movwf	new_px_char@a+2,c
  3088  00EA98  0E00               	movlw	0
  3089  00EA9A  6E04               	movwf	new_px_char@a+3,c
  3090  00EA9C  0E00               	movlw	0
  3091  00EA9E  6E05               	movwf	new_px_char@b,c
  3092  00EAA0  0E10               	movlw	16
  3093  00EAA2  6E06               	movwf	new_px_char@b+1,c
  3094  00EAA4  0E47               	movlw	71
  3095  00EAA6  6E07               	movwf	new_px_char@b+2,c
  3096  00EAA8  0E00               	movlw	0
  3097  00EAAA  6E08               	movwf	new_px_char@b+3,c
  3098  00EAAC  ECFC  F06A         	call	_new_px_char	;wreg free
  3099  00EAB0  CFE9 FFD9          	movff	fsr0l,fsr2l
  3100  00EAB4  CFEA FFDA          	movff	fsr0h,fsr2h
  3101  00EAB8  EE00  F011         	lfsr	0,?_px_map
  3102  00EABC  0E07               	movlw	7
  3103  00EABE                     u1941:
  3104  00EABE  CFDB FFEB          	movff	plusw2,plusw0
  3105  00EAC2  06E8               	decf	wreg,f,c
  3106  00EAC4  E2FC               	bc	u1941
  3107  00EAC6  0012               	return	
  3108  00EAC8  0E01               	movlw	1
  3109  00EACA  6E01               	movwf	new_px_char@a,c
  3110  00EACC  0E80               	movlw	128
  3111  00EACE  6E02               	movwf	new_px_char@a+1,c
  3112  00EAD0  0E11               	movlw	17
  3113  00EAD2  6E03               	movwf	new_px_char@a+2,c
  3114  00EAD4  0E01               	movlw	1
  3115  00EAD6  6E04               	movwf	new_px_char@a+3,c
  3116  00EAD8  0E00               	movlw	0
  3117  00EADA  6E05               	movwf	new_px_char@b,c
  3118  00EADC  0E00               	movlw	0
  3119  00EADE  6E06               	movwf	new_px_char@b+1,c
  3120  00EAE0  0E40               	movlw	64
  3121  00EAE2  6E07               	movwf	new_px_char@b+2,c
  3122  00EAE4  0E1C               	movlw	28
  3123  00EAE6  6E08               	movwf	new_px_char@b+3,c
  3124  00EAE8  ECFC  F06A         	call	_new_px_char	;wreg free
  3125  00EAEC  CFE9 FFD9          	movff	fsr0l,fsr2l
  3126  00EAF0  CFEA FFDA          	movff	fsr0h,fsr2h
  3127  00EAF4  EE00  F011         	lfsr	0,?_px_map
  3128  00EAF8  0E07               	movlw	7
  3129  00EAFA                     u1951:
  3130  00EAFA  CFDB FFEB          	movff	plusw2,plusw0
  3131  00EAFE  06E8               	decf	wreg,f,c
  3132  00EB00  E2FC               	bc	u1951
  3133  00EB02  0012               	return	
  3134  00EB04  0E10               	movlw	16
  3135  00EB06  6E01               	movwf	new_px_char@a,c
  3136  00EB08  0E04               	movlw	4
  3137  00EB0A  6E02               	movwf	new_px_char@a+1,c
  3138  00EB0C  0E41               	movlw	65
  3139  00EB0E  6E03               	movwf	new_px_char@a+2,c
  3140  00EB10  0E00               	movlw	0
  3141  00EB12  6E04               	movwf	new_px_char@a+3,c
  3142  00EB14  0E00               	movlw	0
  3143  00EB16  6E05               	movwf	new_px_char@b,c
  3144  00EB18  0E40               	movlw	64
  3145  00EB1A  6E06               	movwf	new_px_char@b+1,c
  3146  00EB1C  0E44               	movlw	68
  3147  00EB1E  6E07               	movwf	new_px_char@b+2,c
  3148  00EB20  0E44               	movlw	68
  3149  00EB22  6E08               	movwf	new_px_char@b+3,c
  3150  00EB24  ECFC  F06A         	call	_new_px_char	;wreg free
  3151  00EB28  CFE9 FFD9          	movff	fsr0l,fsr2l
  3152  00EB2C  CFEA FFDA          	movff	fsr0h,fsr2h
  3153  00EB30  EE00  F011         	lfsr	0,?_px_map
  3154  00EB34  0E07               	movlw	7
  3155  00EB36                     u1961:
  3156  00EB36  CFDB FFEB          	movff	plusw2,plusw0
  3157  00EB3A  06E8               	decf	wreg,f,c
  3158  00EB3C  E2FC               	bc	u1961
  3159  00EB3E  0012               	return	
  3160  00EB40  0E00               	movlw	0
  3161  00EB42  6E01               	movwf	new_px_char@a,c
  3162  00EB44  0E1F               	movlw	31
  3163  00EB46  6E02               	movwf	new_px_char@a+1,c
  3164  00EB48  0E00               	movlw	0
  3165  00EB4A  6E03               	movwf	new_px_char@a+2,c
  3166  00EB4C  0E00               	movlw	0
  3167  00EB4E  6E04               	movwf	new_px_char@a+3,c
  3168  00EB50  0E00               	movlw	0
  3169  00EB52  6E05               	movwf	new_px_char@b,c
  3170  00EB54  0E00               	movlw	0
  3171  00EB56  6E06               	movwf	new_px_char@b+1,c
  3172  00EB58  0E00               	movlw	0
  3173  00EB5A  6E07               	movwf	new_px_char@b+2,c
  3174  00EB5C  0E3E               	movlw	62
  3175  00EB5E  6E08               	movwf	new_px_char@b+3,c
  3176  00EB60  ECFC  F06A         	call	_new_px_char	;wreg free
  3177  00EB64  CFE9 FFD9          	movff	fsr0l,fsr2l
  3178  00EB68  CFEA FFDA          	movff	fsr0h,fsr2h
  3179  00EB6C  EE00  F011         	lfsr	0,?_px_map
  3180  00EB70  0E07               	movlw	7
  3181  00EB72                     u1971:
  3182  00EB72  CFDB FFEB          	movff	plusw2,plusw0
  3183  00EB76  06E8               	decf	wreg,f,c
  3184  00EB78  E2FC               	bc	u1971
  3185  00EB7A  0012               	return	
  3186  00EB7C  0E44               	movlw	68
  3187  00EB7E  6E01               	movwf	new_px_char@a,c
  3188  00EB80  0E44               	movlw	68
  3189  00EB82  6E02               	movwf	new_px_char@a+1,c
  3190  00EB84  0E04               	movlw	4
  3191  00EB86  6E03               	movwf	new_px_char@a+2,c
  3192  00EB88  0E00               	movlw	0
  3193  00EB8A  6E04               	movwf	new_px_char@a+3,c
  3194  00EB8C  0E00               	movlw	0
  3195  00EB8E  6E05               	movwf	new_px_char@b,c
  3196  00EB90  0E04               	movlw	4
  3197  00EB92  6E06               	movwf	new_px_char@b+1,c
  3198  00EB94  0E41               	movlw	65
  3199  00EB96  6E07               	movwf	new_px_char@b+2,c
  3200  00EB98  0E10               	movlw	16
  3201  00EB9A  6E08               	movwf	new_px_char@b+3,c
  3202  00EB9C  ECFC  F06A         	call	_new_px_char	;wreg free
  3203  00EBA0  CFE9 FFD9          	movff	fsr0l,fsr2l
  3204  00EBA4  CFEA FFDA          	movff	fsr0h,fsr2h
  3205  00EBA8  EE00  F011         	lfsr	0,?_px_map
  3206  00EBAC  0E07               	movlw	7
  3207  00EBAE                     u1981:
  3208  00EBAE  CFDB FFEB          	movff	plusw2,plusw0
  3209  00EBB2  06E8               	decf	wreg,f,c
  3210  00EBB4  E2FC               	bc	u1981
  3211  00EBB6  0012               	return	
  3212  00EBB8  0E22               	movlw	34
  3213  00EBBA  6E01               	movwf	new_px_char@a,c
  3214  00EBBC  0E04               	movlw	4
  3215  00EBBE  6E02               	movwf	new_px_char@a+1,c
  3216  00EBC0  0E10               	movlw	16
  3217  00EBC2  6E03               	movwf	new_px_char@a+2,c
  3218  00EBC4  0E00               	movlw	0
  3219  00EBC6  6E04               	movwf	new_px_char@a+3,c
  3220  00EBC8  0E00               	movlw	0
  3221  00EBCA  6E05               	movwf	new_px_char@b,c
  3222  00EBCC  0EB8               	movlw	184
  3223  00EBCE  6E06               	movwf	new_px_char@b+1,c
  3224  00EBD0  0E18               	movlw	24
  3225  00EBD2  6E07               	movwf	new_px_char@b+2,c
  3226  00EBD4  0E21               	movlw	33
  3227  00EBD6  6E08               	movwf	new_px_char@b+3,c
  3228  00EBD8  ECFC  F06A         	call	_new_px_char	;wreg free
  3229  00EBDC  CFE9 FFD9          	movff	fsr0l,fsr2l
  3230  00EBE0  CFEA FFDA          	movff	fsr0h,fsr2h
  3231  00EBE4  EE00  F011         	lfsr	0,?_px_map
  3232  00EBE8  0E07               	movlw	7
  3233  00EBEA                     u1991:
  3234  00EBEA  CFDB FFEB          	movff	plusw2,plusw0
  3235  00EBEE  06E8               	decf	wreg,f,c
  3236  00EBF0  E2FC               	bc	u1991
  3237  00EBF2  0012               	return	
  3238  00EBF4  0EAD               	movlw	173
  3239  00EBF6  6E01               	movwf	new_px_char@a,c
  3240  00EBF8  0E2D               	movlw	45
  3241  00EBFA  6E02               	movwf	new_px_char@a+1,c
  3242  00EBFC  0E78               	movlw	120
  3243  00EBFE  6E03               	movwf	new_px_char@a+2,c
  3244  00EC00  0E00               	movlw	0
  3245  00EC02  6E04               	movwf	new_px_char@a+3,c
  3246  00EC04  0E00               	movlw	0
  3247  00EC06  6E05               	movwf	new_px_char@b,c
  3248  00EC08  0EB8               	movlw	184
  3249  00EC0A  6E06               	movwf	new_px_char@b+1,c
  3250  00EC0C  0E18               	movlw	24
  3251  00EC0E  6E07               	movwf	new_px_char@b+2,c
  3252  00EC10  0E73               	movlw	115
  3253  00EC12  6E08               	movwf	new_px_char@b+3,c
  3254  00EC14  ECFC  F06A         	call	_new_px_char	;wreg free
  3255  00EC18  CFE9 FFD9          	movff	fsr0l,fsr2l
  3256  00EC1C  CFEA FFDA          	movff	fsr0h,fsr2h
  3257  00EC20  EE00  F011         	lfsr	0,?_px_map
  3258  00EC24  0E07               	movlw	7
  3259  00EC26                     u2001:
  3260  00EC26  CFDB FFEB          	movff	plusw2,plusw0
  3261  00EC2A  06E8               	decf	wreg,f,c
  3262  00EC2C  E2FC               	bc	u2001
  3263  00EC2E  0012               	return	
  3264  00EC30  0E8F               	movlw	143
  3265  00EC32  6E01               	movwf	new_px_char@a,c
  3266  00EC34  0E31               	movlw	49
  3267  00EC36  6E02               	movwf	new_px_char@a+1,c
  3268  00EC38  0E02               	movlw	2
  3269  00EC3A  6E03               	movwf	new_px_char@a+2,c
  3270  00EC3C  0E00               	movlw	0
  3271  00EC3E  6E04               	movwf	new_px_char@a+3,c
  3272  00EC40  0E80               	movlw	128
  3273  00EC42  6E05               	movwf	new_px_char@b,c
  3274  00EC44  0EA8               	movlw	168
  3275  00EC46  6E06               	movwf	new_px_char@b+1,c
  3276  00EC48  0E18               	movlw	24
  3277  00EC4A  6E07               	movwf	new_px_char@b+2,c
  3278  00EC4C  0EE3               	movlw	227
  3279  00EC4E  6E08               	movwf	new_px_char@b+3,c
  3280  00EC50  ECFC  F06A         	call	_new_px_char	;wreg free
  3281  00EC54  CFE9 FFD9          	movff	fsr0l,fsr2l
  3282  00EC58  CFEA FFDA          	movff	fsr0h,fsr2h
  3283  00EC5C  EE00  F011         	lfsr	0,?_px_map
  3284  00EC60  0E07               	movlw	7
  3285  00EC62                     u2011:
  3286  00EC62  CFDB FFEB          	movff	plusw2,plusw0
  3287  00EC66  06E8               	decf	wreg,f,c
  3288  00EC68  E2FC               	bc	u2011
  3289  00EC6A  0012               	return	
  3290  00EC6C  0E94               	movlw	148
  3291  00EC6E  6E01               	movwf	new_px_char@a,c
  3292  00EC70  0EF2               	movlw	242
  3293  00EC72  6E02               	movwf	new_px_char@a+1,c
  3294  00EC74  0E01               	movlw	1
  3295  00EC76  6E03               	movwf	new_px_char@a+2,c
  3296  00EC78  0E00               	movlw	0
  3297  00EC7A  6E04               	movwf	new_px_char@a+3,c
  3298  00EC7C  0EE0               	movlw	224
  3299  00EC7E  6E05               	movwf	new_px_char@b,c
  3300  00EC80  0E49               	movlw	73
  3301  00EC82  6E06               	movwf	new_px_char@b+1,c
  3302  00EC84  0E29               	movlw	41
  3303  00EC86  6E07               	movwf	new_px_char@b+2,c
  3304  00EC88  0E9D               	movlw	157
  3305  00EC8A  6E08               	movwf	new_px_char@b+3,c
  3306  00EC8C  ECFC  F06A         	call	_new_px_char	;wreg free
  3307  00EC90  CFE9 FFD9          	movff	fsr0l,fsr2l
  3308  00EC94  CFEA FFDA          	movff	fsr0h,fsr2h
  3309  00EC98  EE00  F011         	lfsr	0,?_px_map
  3310  00EC9C  0E07               	movlw	7
  3311  00EC9E                     u2021:
  3312  00EC9E  CFDB FFEB          	movff	plusw2,plusw0
  3313  00ECA2  06E8               	decf	wreg,f,c
  3314  00ECA4  E2FC               	bc	u2021
  3315  00ECA6  0012               	return	
  3316  00ECA8  0E08               	movlw	8
  3317  00ECAA  6E01               	movwf	new_px_char@a,c
  3318  00ECAC  0ED1               	movlw	209
  3319  00ECAE  6E02               	movwf	new_px_char@a+1,c
  3320  00ECB0  0E01               	movlw	1
  3321  00ECB2  6E03               	movwf	new_px_char@a+2,c
  3322  00ECB4  0E00               	movlw	0
  3323  00ECB6  6E04               	movwf	new_px_char@a+3,c
  3324  00ECB8  0EC0               	movlw	192
  3325  00ECBA  6E05               	movwf	new_px_char@b,c
  3326  00ECBC  0EC5               	movlw	197
  3327  00ECBE  6E06               	movwf	new_px_char@b+1,c
  3328  00ECC0  0E10               	movlw	16
  3329  00ECC2  6E07               	movwf	new_px_char@b+2,c
  3330  00ECC4  0E42               	movlw	66
  3331  00ECC6  6E08               	movwf	new_px_char@b+3,c
  3332  00ECC8  ECFC  F06A         	call	_new_px_char	;wreg free
  3333  00ECCC  CFE9 FFD9          	movff	fsr0l,fsr2l
  3334  00ECD0  CFEA FFDA          	movff	fsr0h,fsr2h
  3335  00ECD4  EE00  F011         	lfsr	0,?_px_map
  3336  00ECD8  0E07               	movlw	7
  3337  00ECDA                     u2031:
  3338  00ECDA  CFDB FFEB          	movff	plusw2,plusw0
  3339  00ECDE  06E8               	decf	wreg,f,c
  3340  00ECE0  E2FC               	bc	u2031
  3341  00ECE2  0012               	return	
  3342  00ECE4  0E94               	movlw	148
  3343  00ECE6  6E01               	movwf	new_px_char@a,c
  3344  00ECE8  0EF2               	movlw	242
  3345  00ECEA  6E02               	movwf	new_px_char@a+1,c
  3346  00ECEC  0E01               	movlw	1
  3347  00ECEE  6E03               	movwf	new_px_char@a+2,c
  3348  00ECF0  0E00               	movlw	0
  3349  00ECF2  6E04               	movwf	new_px_char@a+3,c
  3350  00ECF4  0EE0               	movlw	224
  3351  00ECF6  6E05               	movwf	new_px_char@b,c
  3352  00ECF8  0E49               	movlw	73
  3353  00ECFA  6E06               	movwf	new_px_char@b+1,c
  3354  00ECFC  0E29               	movlw	41
  3355  00ECFE  6E07               	movwf	new_px_char@b+2,c
  3356  00ED00  0EA5               	movlw	165
  3357  00ED02  6E08               	movwf	new_px_char@b+3,c
  3358  00ED04  ECFC  F06A         	call	_new_px_char	;wreg free
  3359  00ED08  CFE9 FFD9          	movff	fsr0l,fsr2l
  3360  00ED0C  CFEA FFDA          	movff	fsr0h,fsr2h
  3361  00ED10  EE00  F011         	lfsr	0,?_px_map
  3362  00ED14  0E07               	movlw	7
  3363  00ED16                     u2041:
  3364  00ED16  CFDB FFEB          	movff	plusw2,plusw0
  3365  00ED1A  06E8               	decf	wreg,f,c
  3366  00ED1C  E2FC               	bc	u2041
  3367  00ED1E  0012               	return	
  3368  00ED20  0E08               	movlw	8
  3369  00ED22  6E01               	movwf	new_px_char@a,c
  3370  00ED24  0EE1               	movlw	225
  3371  00ED26  6E02               	movwf	new_px_char@a+1,c
  3372  00ED28  0E03               	movlw	3
  3373  00ED2A  6E03               	movwf	new_px_char@a+2,c
  3374  00ED2C  0E00               	movlw	0
  3375  00ED2E  6E04               	movwf	new_px_char@a+3,c
  3376  00ED30  0EE0               	movlw	224
  3377  00ED32  6E05               	movwf	new_px_char@b,c
  3378  00ED34  0E87               	movlw	135
  3379  00ED36  6E06               	movwf	new_px_char@b+1,c
  3380  00ED38  0E10               	movlw	16
  3381  00ED3A  6E07               	movwf	new_px_char@b+2,c
  3382  00ED3C  0E5E               	movlw	94
  3383  00ED3E  6E08               	movwf	new_px_char@b+3,c
  3384  00ED40  ECFC  F06A         	call	_new_px_char	;wreg free
  3385  00ED44  CFE9 FFD9          	movff	fsr0l,fsr2l
  3386  00ED48  CFEA FFDA          	movff	fsr0h,fsr2h
  3387  00ED4C  EE00  F011         	lfsr	0,?_px_map
  3388  00ED50  0E07               	movlw	7
  3389  00ED52                     u2051:
  3390  00ED52  CFDB FFEB          	movff	plusw2,plusw0
  3391  00ED56  06E8               	decf	wreg,f,c
  3392  00ED58  E2FC               	bc	u2051
  3393  00ED5A  0012               	return	
  3394  00ED5C  0E08               	movlw	8
  3395  00ED5E  6E01               	movwf	new_px_char@a,c
  3396  00ED60  0E21               	movlw	33
  3397  00ED62  6E02               	movwf	new_px_char@a+1,c
  3398  00ED64  0E00               	movlw	0
  3399  00ED66  6E03               	movwf	new_px_char@a+2,c
  3400  00ED68  0E00               	movlw	0
  3401  00ED6A  6E04               	movwf	new_px_char@a+3,c
  3402  00ED6C  0EE0               	movlw	224
  3403  00ED6E  6E05               	movwf	new_px_char@b,c
  3404  00ED70  0E87               	movlw	135
  3405  00ED72  6E06               	movwf	new_px_char@b+1,c
  3406  00ED74  0E10               	movlw	16
  3407  00ED76  6E07               	movwf	new_px_char@b+2,c
  3408  00ED78  0E5E               	movlw	94
  3409  00ED7A  6E08               	movwf	new_px_char@b+3,c
  3410  00ED7C  ECFC  F06A         	call	_new_px_char	;wreg free
  3411  00ED80  CFE9 FFD9          	movff	fsr0l,fsr2l
  3412  00ED84  CFEA FFDA          	movff	fsr0h,fsr2h
  3413  00ED88  EE00  F011         	lfsr	0,?_px_map
  3414  00ED8C  0E07               	movlw	7
  3415  00ED8E                     u2061:
  3416  00ED8E  CFDB FFEB          	movff	plusw2,plusw0
  3417  00ED92  06E8               	decf	wreg,f,c
  3418  00ED94  E2FC               	bc	u2061
  3419  00ED96  0012               	return	
  3420  00ED98  0E8E               	movlw	142
  3421  00ED9A  6E01               	movwf	new_px_char@a,c
  3422  00ED9C  0ED1               	movlw	209
  3423  00ED9E  6E02               	movwf	new_px_char@a+1,c
  3424  00EDA0  0E01               	movlw	1
  3425  00EDA2  6E03               	movwf	new_px_char@a+2,c
  3426  00EDA4  0E00               	movlw	0
  3427  00EDA6  6E04               	movwf	new_px_char@a+3,c
  3428  00EDA8  0EC0               	movlw	192
  3429  00EDAA  6E05               	movwf	new_px_char@b,c
  3430  00EDAC  0EC5               	movlw	197
  3431  00EDAE  6E06               	movwf	new_px_char@b+1,c
  3432  00EDB0  0E10               	movlw	16
  3433  00EDB2  6E07               	movwf	new_px_char@b+2,c
  3434  00EDB4  0E42               	movlw	66
  3435  00EDB6  6E08               	movwf	new_px_char@b+3,c
  3436  00EDB8  ECFC  F06A         	call	_new_px_char	;wreg free
  3437  00EDBC  CFE9 FFD9          	movff	fsr0l,fsr2l
  3438  00EDC0  CFEA FFDA          	movff	fsr0h,fsr2h
  3439  00EDC4  EE00  F011         	lfsr	0,?_px_map
  3440  00EDC8  0E07               	movlw	7
  3441  00EDCA                     u2071:
  3442  00EDCA  CFDB FFEB          	movff	plusw2,plusw0
  3443  00EDCE  06E8               	decf	wreg,f,c
  3444  00EDD0  E2FC               	bc	u2071
  3445  00EDD2  0012               	return	
  3446  00EDD4  0E8C               	movlw	140
  3447  00EDD6  6E01               	movwf	new_px_char@a,c
  3448  00EDD8  0E31               	movlw	49
  3449  00EDDA  6E02               	movwf	new_px_char@a+1,c
  3450  00EDDC  0E02               	movlw	2
  3451  00EDDE  6E03               	movwf	new_px_char@a+2,c
  3452  00EDE0  0E00               	movlw	0
  3453  00EDE2  6E04               	movwf	new_px_char@a+3,c
  3454  00EDE4  0E20               	movlw	32
  3455  00EDE6  6E05               	movwf	new_px_char@b,c
  3456  00EDE8  0EC6               	movlw	198
  3457  00EDEA  6E06               	movwf	new_px_char@b+1,c
  3458  00EDEC  0E18               	movlw	24
  3459  00EDEE  6E07               	movwf	new_px_char@b+2,c
  3460  00EDF0  0E7F               	movlw	127
  3461  00EDF2  6E08               	movwf	new_px_char@b+3,c
  3462  00EDF4  ECFC  F06A         	call	_new_px_char	;wreg free
  3463  00EDF8  CFE9 FFD9          	movff	fsr0l,fsr2l
  3464  00EDFC  CFEA FFDA          	movff	fsr0h,fsr2h
  3465  00EE00  EE00  F011         	lfsr	0,?_px_map
  3466  00EE04  0E07               	movlw	7
  3467  00EE06                     u2081:
  3468  00EE06  CFDB FFEB          	movff	plusw2,plusw0
  3469  00EE0A  06E8               	decf	wreg,f,c
  3470  00EE0C  E2FC               	bc	u2081
  3471  00EE0E  0012               	return	
  3472  00EE10  0E21               	movlw	33
  3473  00EE12  6E01               	movwf	new_px_char@a,c
  3474  00EE14  0EC4               	movlw	196
  3475  00EE16  6E02               	movwf	new_px_char@a+1,c
  3476  00EE18  0E01               	movlw	1
  3477  00EE1A  6E03               	movwf	new_px_char@a+2,c
  3478  00EE1C  0E00               	movlw	0
  3479  00EE1E  6E04               	movwf	new_px_char@a+3,c
  3480  00EE20  0EC0               	movlw	192
  3481  00EE22  6E05               	movwf	new_px_char@b,c
  3482  00EE24  0E11               	movlw	17
  3483  00EE26  6E06               	movwf	new_px_char@b+1,c
  3484  00EE28  0E42               	movlw	66
  3485  00EE2A  6E07               	movwf	new_px_char@b+2,c
  3486  00EE2C  0E08               	movlw	8
  3487  00EE2E  6E08               	movwf	new_px_char@b+3,c
  3488  00EE30  ECFC  F06A         	call	_new_px_char	;wreg free
  3489  00EE34  CFE9 FFD9          	movff	fsr0l,fsr2l
  3490  00EE38  CFEA FFDA          	movff	fsr0h,fsr2h
  3491  00EE3C  EE00  F011         	lfsr	0,?_px_map
  3492  00EE40  0E07               	movlw	7
  3493  00EE42                     u2091:
  3494  00EE42  CFDB FFEB          	movff	plusw2,plusw0
  3495  00EE46  06E8               	decf	wreg,f,c
  3496  00EE48  E2FC               	bc	u2091
  3497  00EE4A  0012               	return	
  3498  00EE4C  0E42               	movlw	66
  3499  00EE4E  6E01               	movwf	new_px_char@a,c
  3500  00EE50  0EC9               	movlw	201
  3501  00EE52  6E02               	movwf	new_px_char@a+1,c
  3502  00EE54  0E00               	movlw	0
  3503  00EE56  6E03               	movwf	new_px_char@a+2,c
  3504  00EE58  0E00               	movlw	0
  3505  00EE5A  6E04               	movwf	new_px_char@a+3,c
  3506  00EE5C  0E80               	movlw	128
  3507  00EE5E  6E05               	movwf	new_px_char@b,c
  3508  00EE60  0E23               	movlw	35
  3509  00EE62  6E06               	movwf	new_px_char@b+1,c
  3510  00EE64  0E84               	movlw	132
  3511  00EE66  6E07               	movwf	new_px_char@b+2,c
  3512  00EE68  0E10               	movlw	16
  3513  00EE6A  6E08               	movwf	new_px_char@b+3,c
  3514  00EE6C  ECFC  F06A         	call	_new_px_char	;wreg free
  3515  00EE70  CFE9 FFD9          	movff	fsr0l,fsr2l
  3516  00EE74  CFEA FFDA          	movff	fsr0h,fsr2h
  3517  00EE78  EE00  F011         	lfsr	0,?_px_map
  3518  00EE7C  0E07               	movlw	7
  3519  00EE7E                     u2101:
  3520  00EE7E  CFDB FFEB          	movff	plusw2,plusw0
  3521  00EE82  06E8               	decf	wreg,f,c
  3522  00EE84  E2FC               	bc	u2101
  3523  00EE86  0012               	return	
  3524  00EE88  0E49               	movlw	73
  3525  00EE8A  6E01               	movwf	new_px_char@a,c
  3526  00EE8C  0E31               	movlw	49
  3527  00EE8E  6E02               	movwf	new_px_char@a+1,c
  3528  00EE90  0E02               	movlw	2
  3529  00EE92  6E03               	movwf	new_px_char@a+2,c
  3530  00EE94  0E00               	movlw	0
  3531  00EE96  6E04               	movwf	new_px_char@a+3,c
  3532  00EE98  0E20               	movlw	32
  3533  00EE9A  6E05               	movwf	new_px_char@b,c
  3534  00EE9C  0EC6               	movlw	198
  3535  00EE9E  6E06               	movwf	new_px_char@b+1,c
  3536  00EEA0  0E54               	movlw	84
  3537  00EEA2  6E07               	movwf	new_px_char@b+2,c
  3538  00EEA4  0E46               	movlw	70
  3539  00EEA6  6E08               	movwf	new_px_char@b+3,c
  3540  00EEA8  ECFC  F06A         	call	_new_px_char	;wreg free
  3541  00EEAC  CFE9 FFD9          	movff	fsr0l,fsr2l
  3542  00EEB0  CFEA FFDA          	movff	fsr0h,fsr2h
  3543  00EEB4  EE00  F011         	lfsr	0,?_px_map
  3544  00EEB8  0E07               	movlw	7
  3545  00EEBA                     u2111:
  3546  00EEBA  CFDB FFEB          	movff	plusw2,plusw0
  3547  00EEBE  06E8               	decf	wreg,f,c
  3548  00EEC0  E2FC               	bc	u2111
  3549  00EEC2  0012               	return	
  3550  00EEC4  0E08               	movlw	8
  3551  00EEC6  6E01               	movwf	new_px_char@a,c
  3552  00EEC8  0EE1               	movlw	225
  3553  00EECA  6E02               	movwf	new_px_char@a+1,c
  3554  00EECC  0E03               	movlw	3
  3555  00EECE  6E03               	movwf	new_px_char@a+2,c
  3556  00EED0  0E00               	movlw	0
  3557  00EED2  6E04               	movwf	new_px_char@a+3,c
  3558  00EED4  0E20               	movlw	32
  3559  00EED6  6E05               	movwf	new_px_char@b,c
  3560  00EED8  0E84               	movlw	132
  3561  00EEDA  6E06               	movwf	new_px_char@b+1,c
  3562  00EEDC  0E10               	movlw	16
  3563  00EEDE  6E07               	movwf	new_px_char@b+2,c
  3564  00EEE0  0E42               	movlw	66
  3565  00EEE2  6E08               	movwf	new_px_char@b+3,c
  3566  00EEE4  ECFC  F06A         	call	_new_px_char	;wreg free
  3567  00EEE8  CFE9 FFD9          	movff	fsr0l,fsr2l
  3568  00EEEC  CFEA FFDA          	movff	fsr0h,fsr2h
  3569  00EEF0  EE00  F011         	lfsr	0,?_px_map
  3570  00EEF4  0E07               	movlw	7
  3571  00EEF6                     u2121:
  3572  00EEF6  CFDB FFEB          	movff	plusw2,plusw0
  3573  00EEFA  06E8               	decf	wreg,f,c
  3574  00EEFC  E2FC               	bc	u2121
  3575  00EEFE  0012               	return	
  3576  00EF00  0E8C               	movlw	140
  3577  00EF02  6E01               	movwf	new_px_char@a,c
  3578  00EF04  0E31               	movlw	49
  3579  00EF06  6E02               	movwf	new_px_char@a+1,c
  3580  00EF08  0E02               	movlw	2
  3581  00EF0A  6E03               	movwf	new_px_char@a+2,c
  3582  00EF0C  0E00               	movlw	0
  3583  00EF0E  6E04               	movwf	new_px_char@a+3,c
  3584  00EF10  0E20               	movlw	32
  3585  00EF12  6E05               	movwf	new_px_char@b,c
  3586  00EF14  0EC6               	movlw	198
  3587  00EF16  6E06               	movwf	new_px_char@b+1,c
  3588  00EF18  0E5D               	movlw	93
  3589  00EF1A  6E07               	movwf	new_px_char@b+2,c
  3590  00EF1C  0E6B               	movlw	107
  3591  00EF1E  6E08               	movwf	new_px_char@b+3,c
  3592  00EF20  ECFC  F06A         	call	_new_px_char	;wreg free
  3593  00EF24  CFE9 FFD9          	movff	fsr0l,fsr2l
  3594  00EF28  CFEA FFDA          	movff	fsr0h,fsr2h
  3595  00EF2C  EE00  F011         	lfsr	0,?_px_map
  3596  00EF30  0E07               	movlw	7
  3597  00EF32                     u2131:
  3598  00EF32  CFDB FFEB          	movff	plusw2,plusw0
  3599  00EF36  06E8               	decf	wreg,f,c
  3600  00EF38  E2FC               	bc	u2131
  3601  00EF3A  0012               	return	
  3602  00EF3C  0ECE               	movlw	206
  3603  00EF3E  6E01               	movwf	new_px_char@a,c
  3604  00EF40  0E31               	movlw	49
  3605  00EF42  6E02               	movwf	new_px_char@a+1,c
  3606  00EF44  0E02               	movlw	2
  3607  00EF46  6E03               	movwf	new_px_char@a+2,c
  3608  00EF48  0E00               	movlw	0
  3609  00EF4A  6E04               	movwf	new_px_char@a+3,c
  3610  00EF4C  0E20               	movlw	32
  3611  00EF4E  6E05               	movwf	new_px_char@b,c
  3612  00EF50  0ECE               	movlw	206
  3613  00EF52  6E06               	movwf	new_px_char@b+1,c
  3614  00EF54  0E59               	movlw	89
  3615  00EF56  6E07               	movwf	new_px_char@b+2,c
  3616  00EF58  0E6B               	movlw	107
  3617  00EF5A  6E08               	movwf	new_px_char@b+3,c
  3618  00EF5C  ECFC  F06A         	call	_new_px_char	;wreg free
  3619  00EF60  CFE9 FFD9          	movff	fsr0l,fsr2l
  3620  00EF64  CFEA FFDA          	movff	fsr0h,fsr2h
  3621  00EF68  EE00  F011         	lfsr	0,?_px_map
  3622  00EF6C  0E07               	movlw	7
  3623  00EF6E                     u2141:
  3624  00EF6E  CFDB FFEB          	movff	plusw2,plusw0
  3625  00EF72  06E8               	decf	wreg,f,c
  3626  00EF74  E2FC               	bc	u2141
  3627  00EF76  0012               	return	
  3628  00EF78  0E8C               	movlw	140
  3629  00EF7A  6E01               	movwf	new_px_char@a,c
  3630  00EF7C  0ED1               	movlw	209
  3631  00EF7E  6E02               	movwf	new_px_char@a+1,c
  3632  00EF80  0E01               	movlw	1
  3633  00EF82  6E03               	movwf	new_px_char@a+2,c
  3634  00EF84  0E00               	movlw	0
  3635  00EF86  6E04               	movwf	new_px_char@a+3,c
  3636  00EF88  0EC0               	movlw	192
  3637  00EF8A  6E05               	movwf	new_px_char@b,c
  3638  00EF8C  0EC5               	movlw	197
  3639  00EF8E  6E06               	movwf	new_px_char@b+1,c
  3640  00EF90  0E18               	movlw	24
  3641  00EF92  6E07               	movwf	new_px_char@b+2,c
  3642  00EF94  0E63               	movlw	99
  3643  00EF96  6E08               	movwf	new_px_char@b+3,c
  3644  00EF98  ECFC  F06A         	call	_new_px_char	;wreg free
  3645  00EF9C  CFE9 FFD9          	movff	fsr0l,fsr2l
  3646  00EFA0  CFEA FFDA          	movff	fsr0h,fsr2h
  3647  00EFA4  EE00  F011         	lfsr	0,?_px_map
  3648  00EFA8  0E07               	movlw	7
  3649  00EFAA                     u2151:
  3650  00EFAA  CFDB FFEB          	movff	plusw2,plusw0
  3651  00EFAE  06E8               	decf	wreg,f,c
  3652  00EFB0  E2FC               	bc	u2151
  3653  00EFB2  0012               	return	
  3654  00EFB4  0E08               	movlw	8
  3655  00EFB6  6E01               	movwf	new_px_char@a,c
  3656  00EFB8  0E21               	movlw	33
  3657  00EFBA  6E02               	movwf	new_px_char@a+1,c
  3658  00EFBC  0E00               	movlw	0
  3659  00EFBE  6E03               	movwf	new_px_char@a+2,c
  3660  00EFC0  0E00               	movlw	0
  3661  00EFC2  6E04               	movwf	new_px_char@a+3,c
  3662  00EFC4  0EE0               	movlw	224
  3663  00EFC6  6E05               	movwf	new_px_char@b,c
  3664  00EFC8  0EC5               	movlw	197
  3665  00EFCA  6E06               	movwf	new_px_char@b+1,c
  3666  00EFCC  0E18               	movlw	24
  3667  00EFCE  6E07               	movwf	new_px_char@b+2,c
  3668  00EFD0  0E5F               	movlw	95
  3669  00EFD2  6E08               	movwf	new_px_char@b+3,c
  3670  00EFD4  ECFC  F06A         	call	_new_px_char	;wreg free
  3671  00EFD8  CFE9 FFD9          	movff	fsr0l,fsr2l
  3672  00EFDC  CFEA FFDA          	movff	fsr0h,fsr2h
  3673  00EFE0  EE00  F011         	lfsr	0,?_px_map
  3674  00EFE4  0E07               	movlw	7
  3675  00EFE6                     u2161:
  3676  00EFE6  CFDB FFEB          	movff	plusw2,plusw0
  3677  00EFEA  06E8               	decf	wreg,f,c
  3678  00EFEC  E2FC               	bc	u2161
  3679  00EFEE  0012               	return	
  3680  00EFF0  0E8C               	movlw	140
  3681  00EFF2  6E01               	movwf	new_px_char@a,c
  3682  00EFF4  0ED5               	movlw	213
  3683  00EFF6  6E02               	movwf	new_px_char@a+1,c
  3684  00EFF8  0E41               	movlw	65
  3685  00EFFA  6E03               	movwf	new_px_char@a+2,c
  3686  00EFFC  0E00               	movlw	0
  3687  00EFFE  6E04               	movwf	new_px_char@a+3,c
  3688  00F000  0EC0               	movlw	192
  3689  00F002  6E05               	movwf	new_px_char@b,c
  3690  00F004  0EC5               	movlw	197
  3691  00F006  6E06               	movwf	new_px_char@b+1,c
  3692  00F008  0E18               	movlw	24
  3693  00F00A  6E07               	movwf	new_px_char@b+2,c
  3694  00F00C  0E63               	movlw	99
  3695  00F00E  6E08               	movwf	new_px_char@b+3,c
  3696  00F010  ECFC  F06A         	call	_new_px_char	;wreg free
  3697  00F014  CFE9 FFD9          	movff	fsr0l,fsr2l
  3698  00F018  CFEA FFDA          	movff	fsr0h,fsr2h
  3699  00F01C  EE00  F011         	lfsr	0,?_px_map
  3700  00F020  0E07               	movlw	7
  3701  00F022                     u2171:
  3702  00F022  CFDB FFEB          	movff	plusw2,plusw0
  3703  00F026  06E8               	decf	wreg,f,c
  3704  00F028  E2FC               	bc	u2171
  3705  00F02A  0012               	return	
  3706  00F02C  0E49               	movlw	73
  3707  00F02E  6E01               	movwf	new_px_char@a,c
  3708  00F030  0E31               	movlw	49
  3709  00F032  6E02               	movwf	new_px_char@a+1,c
  3710  00F034  0E02               	movlw	2
  3711  00F036  6E03               	movwf	new_px_char@a+2,c
  3712  00F038  0E00               	movlw	0
  3713  00F03A  6E04               	movwf	new_px_char@a+3,c
  3714  00F03C  0EE0               	movlw	224
  3715  00F03E  6E05               	movwf	new_px_char@b,c
  3716  00F040  0EC5               	movlw	197
  3717  00F042  6E06               	movwf	new_px_char@b+1,c
  3718  00F044  0E18               	movlw	24
  3719  00F046  6E07               	movwf	new_px_char@b+2,c
  3720  00F048  0E5F               	movlw	95
  3721  00F04A  6E08               	movwf	new_px_char@b+3,c
  3722  00F04C  ECFC  F06A         	call	_new_px_char	;wreg free
  3723  00F050  CFE9 FFD9          	movff	fsr0l,fsr2l
  3724  00F054  CFEA FFDA          	movff	fsr0h,fsr2h
  3725  00F058  EE00  F011         	lfsr	0,?_px_map
  3726  00F05C  0E07               	movlw	7
  3727  00F05E                     u2181:
  3728  00F05E  CFDB FFEB          	movff	plusw2,plusw0
  3729  00F062  06E8               	decf	wreg,f,c
  3730  00F064  E2FC               	bc	u2181
  3731  00F066  0012               	return	
  3732  00F068  0E84               	movlw	132
  3733  00F06A  6E01               	movwf	new_px_char@a,c
  3734  00F06C  0ED1               	movlw	209
  3735  00F06E  6E02               	movwf	new_px_char@a+1,c
  3736  00F070  0E01               	movlw	1
  3737  00F072  6E03               	movwf	new_px_char@a+2,c
  3738  00F074  0E00               	movlw	0
  3739  00F076  6E04               	movwf	new_px_char@a+3,c
  3740  00F078  0EC0               	movlw	192
  3741  00F07A  6E05               	movwf	new_px_char@b,c
  3742  00F07C  0EC5               	movlw	197
  3743  00F07E  6E06               	movwf	new_px_char@b+1,c
  3744  00F080  0E10               	movlw	16
  3745  00F082  6E07               	movwf	new_px_char@b+2,c
  3746  00F084  0E1C               	movlw	28
  3747  00F086  6E08               	movwf	new_px_char@b+3,c
  3748  00F088  ECFC  F06A         	call	_new_px_char	;wreg free
  3749  00F08C  CFE9 FFD9          	movff	fsr0l,fsr2l
  3750  00F090  CFEA FFDA          	movff	fsr0h,fsr2h
  3751  00F094  EE00  F011         	lfsr	0,?_px_map
  3752  00F098  0E07               	movlw	7
  3753  00F09A                     u2191:
  3754  00F09A  CFDB FFEB          	movff	plusw2,plusw0
  3755  00F09E  06E8               	decf	wreg,f,c
  3756  00F0A0  E2FC               	bc	u2191
  3757  00F0A2  0012               	return	
  3758  00F0A4  0E21               	movlw	33
  3759  00F0A6  6E01               	movwf	new_px_char@a,c
  3760  00F0A8  0E84               	movlw	132
  3761  00F0AA  6E02               	movwf	new_px_char@a+1,c
  3762  00F0AC  0E00               	movlw	0
  3763  00F0AE  6E03               	movwf	new_px_char@a+2,c
  3764  00F0B0  0E00               	movlw	0
  3765  00F0B2  6E04               	movwf	new_px_char@a+3,c
  3766  00F0B4  0EE0               	movlw	224
  3767  00F0B6  6E05               	movwf	new_px_char@b,c
  3768  00F0B8  0E13               	movlw	19
  3769  00F0BA  6E06               	movwf	new_px_char@b+1,c
  3770  00F0BC  0E42               	movlw	66
  3771  00F0BE  6E07               	movwf	new_px_char@b+2,c
  3772  00F0C0  0E08               	movlw	8
  3773  00F0C2  6E08               	movwf	new_px_char@b+3,c
  3774  00F0C4  ECFC  F06A         	call	_new_px_char	;wreg free
  3775  00F0C8  CFE9 FFD9          	movff	fsr0l,fsr2l
  3776  00F0CC  CFEA FFDA          	movff	fsr0h,fsr2h
  3777  00F0D0  EE00  F011         	lfsr	0,?_px_map
  3778  00F0D4  0E07               	movlw	7
  3779  00F0D6                     u2201:
  3780  00F0D6  CFDB FFEB          	movff	plusw2,plusw0
  3781  00F0DA  06E8               	decf	wreg,f,c
  3782  00F0DC  E2FC               	bc	u2201
  3783  00F0DE  0012               	return	
  3784  00F0E0  0E8C               	movlw	140
  3785  00F0E2  6E01               	movwf	new_px_char@a,c
  3786  00F0E4  0ED1               	movlw	209
  3787  00F0E6  6E02               	movwf	new_px_char@a+1,c
  3788  00F0E8  0E01               	movlw	1
  3789  00F0EA  6E03               	movwf	new_px_char@a+2,c
  3790  00F0EC  0E00               	movlw	0
  3791  00F0EE  6E04               	movwf	new_px_char@a+3,c
  3792  00F0F0  0E20               	movlw	32
  3793  00F0F2  6E05               	movwf	new_px_char@b,c
  3794  00F0F4  0EC6               	movlw	198
  3795  00F0F6  6E06               	movwf	new_px_char@b+1,c
  3796  00F0F8  0E18               	movlw	24
  3797  00F0FA  6E07               	movwf	new_px_char@b+2,c
  3798  00F0FC  0E63               	movlw	99
  3799  00F0FE  6E08               	movwf	new_px_char@b+3,c
  3800  00F100  ECFC  F06A         	call	_new_px_char	;wreg free
  3801  00F104  CFE9 FFD9          	movff	fsr0l,fsr2l
  3802  00F108  CFEA FFDA          	movff	fsr0h,fsr2h
  3803  00F10C  EE00  F011         	lfsr	0,?_px_map
  3804  00F110  0E07               	movlw	7
  3805  00F112                     u2211:
  3806  00F112  CFDB FFEB          	movff	plusw2,plusw0
  3807  00F116  06E8               	decf	wreg,f,c
  3808  00F118  E2FC               	bc	u2211
  3809  00F11A  0012               	return	
  3810  00F11C  0E52               	movlw	82
  3811  00F11E  6E01               	movwf	new_px_char@a,c
  3812  00F120  0E84               	movlw	132
  3813  00F122  6E02               	movwf	new_px_char@a+1,c
  3814  00F124  0E00               	movlw	0
  3815  00F126  6E03               	movwf	new_px_char@a+2,c
  3816  00F128  0E00               	movlw	0
  3817  00F12A  6E04               	movwf	new_px_char@a+3,c
  3818  00F12C  0E20               	movlw	32
  3819  00F12E  6E05               	movwf	new_px_char@b,c
  3820  00F130  0EC6               	movlw	198
  3821  00F132  6E06               	movwf	new_px_char@b+1,c
  3822  00F134  0E18               	movlw	24
  3823  00F136  6E07               	movwf	new_px_char@b+2,c
  3824  00F138  0EA3               	movlw	163
  3825  00F13A  6E08               	movwf	new_px_char@b+3,c
  3826  00F13C  ECFC  F06A         	call	_new_px_char	;wreg free
  3827  00F140  CFE9 FFD9          	movff	fsr0l,fsr2l
  3828  00F144  CFEA FFDA          	movff	fsr0h,fsr2h
  3829  00F148  EE00  F011         	lfsr	0,?_px_map
  3830  00F14C  0E07               	movlw	7
  3831  00F14E                     u2221:
  3832  00F14E  CFDB FFEB          	movff	plusw2,plusw0
  3833  00F152  06E8               	decf	wreg,f,c
  3834  00F154  E2FC               	bc	u2221
  3835  00F156  0012               	return	
  3836  00F158  0EAD               	movlw	173
  3837  00F15A  6E01               	movwf	new_px_char@a,c
  3838  00F15C  0E55               	movlw	85
  3839  00F15E  6E02               	movwf	new_px_char@a+1,c
  3840  00F160  0E01               	movlw	1
  3841  00F162  6E03               	movwf	new_px_char@a+2,c
  3842  00F164  0E00               	movlw	0
  3843  00F166  6E04               	movwf	new_px_char@a+3,c
  3844  00F168  0E20               	movlw	32
  3845  00F16A  6E05               	movwf	new_px_char@b,c
  3846  00F16C  0EC6               	movlw	198
  3847  00F16E  6E06               	movwf	new_px_char@b+1,c
  3848  00F170  0E18               	movlw	24
  3849  00F172  6E07               	movwf	new_px_char@b+2,c
  3850  00F174  0E6B               	movlw	107
  3851  00F176  6E08               	movwf	new_px_char@b+3,c
  3852  00F178  ECFC  F06A         	call	_new_px_char	;wreg free
  3853  00F17C  CFE9 FFD9          	movff	fsr0l,fsr2l
  3854  00F180  CFEA FFDA          	movff	fsr0h,fsr2h
  3855  00F184  EE00  F011         	lfsr	0,?_px_map
  3856  00F188  0E07               	movlw	7
  3857  00F18A                     u2231:
  3858  00F18A  CFDB FFEB          	movff	plusw2,plusw0
  3859  00F18E  06E8               	decf	wreg,f,c
  3860  00F190  E2FC               	bc	u2231
  3861  00F192  0012               	return	
  3862  00F194  0E52               	movlw	82
  3863  00F196  6E01               	movwf	new_px_char@a,c
  3864  00F198  0E31               	movlw	49
  3865  00F19A  6E02               	movwf	new_px_char@a+1,c
  3866  00F19C  0E02               	movlw	2
  3867  00F19E  6E03               	movwf	new_px_char@a+2,c
  3868  00F1A0  0E00               	movlw	0
  3869  00F1A2  6E04               	movwf	new_px_char@a+3,c
  3870  00F1A4  0E20               	movlw	32
  3871  00F1A6  6E05               	movwf	new_px_char@b,c
  3872  00F1A8  0E46               	movlw	70
  3873  00F1AA  6E06               	movwf	new_px_char@b+1,c
  3874  00F1AC  0EA5               	movlw	165
  3875  00F1AE  6E07               	movwf	new_px_char@b+2,c
  3876  00F1B0  0E88               	movlw	136
  3877  00F1B2  6E08               	movwf	new_px_char@b+3,c
  3878  00F1B4  ECFC  F06A         	call	_new_px_char	;wreg free
  3879  00F1B8  CFE9 FFD9          	movff	fsr0l,fsr2l
  3880  00F1BC  CFEA FFDA          	movff	fsr0h,fsr2h
  3881  00F1C0  EE00  F011         	lfsr	0,?_px_map
  3882  00F1C4  0E07               	movlw	7
  3883  00F1C6                     u2241:
  3884  00F1C6  CFDB FFEB          	movff	plusw2,plusw0
  3885  00F1CA  06E8               	decf	wreg,f,c
  3886  00F1CC  E2FC               	bc	u2241
  3887  00F1CE  0012               	return	
  3888  00F1D0  0E21               	movlw	33
  3889  00F1D2  6E01               	movwf	new_px_char@a,c
  3890  00F1D4  0E84               	movlw	132
  3891  00F1D6  6E02               	movwf	new_px_char@a+1,c
  3892  00F1D8  0E00               	movlw	0
  3893  00F1DA  6E03               	movwf	new_px_char@a+2,c
  3894  00F1DC  0E00               	movlw	0
  3895  00F1DE  6E04               	movwf	new_px_char@a+3,c
  3896  00F1E0  0E20               	movlw	32
  3897  00F1E2  6E05               	movwf	new_px_char@b,c
  3898  00F1E4  0E46               	movlw	70
  3899  00F1E6  6E06               	movwf	new_px_char@b+1,c
  3900  00F1E8  0EA5               	movlw	165
  3901  00F1EA  6E07               	movwf	new_px_char@b+2,c
  3902  00F1EC  0E08               	movlw	8
  3903  00F1EE  6E08               	movwf	new_px_char@b+3,c
  3904  00F1F0  ECFC  F06A         	call	_new_px_char	;wreg free
  3905  00F1F4  CFE9 FFD9          	movff	fsr0l,fsr2l
  3906  00F1F8  CFEA FFDA          	movff	fsr0h,fsr2h
  3907  00F1FC  EE00  F011         	lfsr	0,?_px_map
  3908  00F200  0E07               	movlw	7
  3909  00F202                     u2251:
  3910  00F202  CFDB FFEB          	movff	plusw2,plusw0
  3911  00F206  06E8               	decf	wreg,f,c
  3912  00F208  E2FC               	bc	u2251
  3913  00F20A  0012               	return	
  3914  00F20C  0E10               	movlw	16
  3915  00F20E  6E01               	movwf	new_px_char@a,c
  3916  00F210  0EE1               	movlw	225
  3917  00F212  6E02               	movwf	new_px_char@a+1,c
  3918  00F214  0E03               	movlw	3
  3919  00F216  6E03               	movwf	new_px_char@a+2,c
  3920  00F218  0E00               	movlw	0
  3921  00F21A  6E04               	movwf	new_px_char@a+3,c
  3922  00F21C  0EE0               	movlw	224
  3923  00F21E  6E05               	movwf	new_px_char@b,c
  3924  00F220  0E43               	movlw	67
  3925  00F222  6E06               	movwf	new_px_char@b+1,c
  3926  00F224  0E84               	movlw	132
  3927  00F226  6E07               	movwf	new_px_char@b+2,c
  3928  00F228  0E88               	movlw	136
  3929  00F22A  6E08               	movwf	new_px_char@b+3,c
  3930  00F22C  ECFC  F06A         	call	_new_px_char	;wreg free
  3931  00F230  CFE9 FFD9          	movff	fsr0l,fsr2l
  3932  00F234  CFEA FFDA          	movff	fsr0h,fsr2h
  3933  00F238  EE00  F011         	lfsr	0,?_px_map
  3934  00F23C  0E07               	movlw	7
  3935  00F23E                     u2261:
  3936  00F23E  CFDB FFEB          	movff	plusw2,plusw0
  3937  00F242  06E8               	decf	wreg,f,c
  3938  00F244  E2FC               	bc	u2261
  3939  00F246  0012               	return	
  3940  00F248  0E10               	movlw	16
  3941  00F24A  6E01               	movwf	new_px_char@a,c
  3942  00F24C  0E42               	movlw	66
  3943  00F24E  6E02               	movwf	new_px_char@a+1,c
  3944  00F250  0E08               	movlw	8
  3945  00F252  6E03               	movwf	new_px_char@a+2,c
  3946  00F254  0E07               	movlw	7
  3947  00F256  6E04               	movwf	new_px_char@a+3,c
  3948  00F258  0EC0               	movlw	192
  3949  00F25A  6E05               	movwf	new_px_char@b,c
  3950  00F25C  0E09               	movlw	9
  3951  00F25E  6E06               	movwf	new_px_char@b+1,c
  3952  00F260  0E21               	movlw	33
  3953  00F262  6E07               	movwf	new_px_char@b+2,c
  3954  00F264  0E84               	movlw	132
  3955  00F266  6E08               	movwf	new_px_char@b+3,c
  3956  00F268  ECFC  F06A         	call	_new_px_char	;wreg free
  3957  00F26C  CFE9 FFD9          	movff	fsr0l,fsr2l
  3958  00F270  CFEA FFDA          	movff	fsr0h,fsr2h
  3959  00F274  EE00  F011         	lfsr	0,?_px_map
  3960  00F278  0E07               	movlw	7
  3961  00F27A                     u2271:
  3962  00F27A  CFDB FFEB          	movff	plusw2,plusw0
  3963  00F27E  06E8               	decf	wreg,f,c
  3964  00F280  E2FC               	bc	u2271
  3965  00F282  0012               	return	
  3966  00F284  0E41               	movlw	65
  3967  00F286  6E01               	movwf	new_px_char@a,c
  3968  00F288  0E08               	movlw	8
  3969  00F28A  6E02               	movwf	new_px_char@a+1,c
  3970  00F28C  0E42               	movlw	66
  3971  00F28E  6E03               	movwf	new_px_char@a+2,c
  3972  00F290  0E00               	movlw	0
  3973  00F292  6E04               	movwf	new_px_char@a+3,c
  3974  00F294  0E00               	movlw	0
  3975  00F296  6E05               	movwf	new_px_char@b,c
  3976  00F298  0E84               	movlw	132
  3977  00F29A  6E06               	movwf	new_px_char@b+1,c
  3978  00F29C  0E20               	movlw	32
  3979  00F29E  6E07               	movwf	new_px_char@b+2,c
  3980  00F2A0  0E04               	movlw	4
  3981  00F2A2  6E08               	movwf	new_px_char@b+3,c
  3982  00F2A4  ECFC  F06A         	call	_new_px_char	;wreg free
  3983  00F2A8  CFE9 FFD9          	movff	fsr0l,fsr2l
  3984  00F2AC  CFEA FFDA          	movff	fsr0h,fsr2h
  3985  00F2B0  EE00  F011         	lfsr	0,?_px_map
  3986  00F2B4  0E07               	movlw	7
  3987  00F2B6                     u2281:
  3988  00F2B6  CFDB FFEB          	movff	plusw2,plusw0
  3989  00F2BA  06E8               	decf	wreg,f,c
  3990  00F2BC  E2FC               	bc	u2281
  3991  00F2BE  0012               	return	
  3992  00F2C0  0E42               	movlw	66
  3993  00F2C2  6E01               	movwf	new_px_char@a,c
  3994  00F2C4  0E08               	movlw	8
  3995  00F2C6  6E02               	movwf	new_px_char@a+1,c
  3996  00F2C8  0E21               	movlw	33
  3997  00F2CA  6E03               	movwf	new_px_char@a+2,c
  3998  00F2CC  0E07               	movlw	7
  3999  00F2CE  6E04               	movwf	new_px_char@a+3,c
  4000  00F2D0  0EC0               	movlw	192
  4001  00F2D2  6E05               	movwf	new_px_char@b,c
  4002  00F2D4  0E21               	movlw	33
  4003  00F2D6  6E06               	movwf	new_px_char@b+1,c
  4004  00F2D8  0E84               	movlw	132
  4005  00F2DA  6E07               	movwf	new_px_char@b+2,c
  4006  00F2DC  0E10               	movlw	16
  4007  00F2DE  6E08               	movwf	new_px_char@b+3,c
  4008  00F2E0  ECFC  F06A         	call	_new_px_char	;wreg free
  4009  00F2E4  CFE9 FFD9          	movff	fsr0l,fsr2l
  4010  00F2E8  CFEA FFDA          	movff	fsr0h,fsr2h
  4011  00F2EC  EE00  F011         	lfsr	0,?_px_map
  4012  00F2F0  0E07               	movlw	7
  4013  00F2F2                     u2291:
  4014  00F2F2  CFDB FFEB          	movff	plusw2,plusw0
  4015  00F2F6  06E8               	decf	wreg,f,c
  4016  00F2F8  E2FC               	bc	u2291
  4017  00F2FA  0012               	return	
  4018  00F2FC  0E00               	movlw	0
  4019  00F2FE  6E01               	movwf	new_px_char@a,c
  4020  00F300  0E00               	movlw	0
  4021  00F302  6E02               	movwf	new_px_char@a+1,c
  4022  00F304  0E00               	movlw	0
  4023  00F306  6E03               	movwf	new_px_char@a+2,c
  4024  00F308  0E00               	movlw	0
  4025  00F30A  6E04               	movwf	new_px_char@a+3,c
  4026  00F30C  0E00               	movlw	0
  4027  00F30E  6E05               	movwf	new_px_char@b,c
  4028  00F310  0E10               	movlw	16
  4029  00F312  6E06               	movwf	new_px_char@b+1,c
  4030  00F314  0E15               	movlw	21
  4031  00F316  6E07               	movwf	new_px_char@b+2,c
  4032  00F318  0E01               	movlw	1
  4033  00F31A  6E08               	movwf	new_px_char@b+3,c
  4034  00F31C  ECFC  F06A         	call	_new_px_char	;wreg free
  4035  00F320  CFE9 FFD9          	movff	fsr0l,fsr2l
  4036  00F324  CFEA FFDA          	movff	fsr0h,fsr2h
  4037  00F328  EE00  F011         	lfsr	0,?_px_map
  4038  00F32C  0E07               	movlw	7
  4039  00F32E                     u2301:
  4040  00F32E  CFDB FFEB          	movff	plusw2,plusw0
  4041  00F332  06E8               	decf	wreg,f,c
  4042  00F334  E2FC               	bc	u2301
  4043  00F336  0012               	return	
  4044  00F338  0E00               	movlw	0
  4045  00F33A  6E01               	movwf	new_px_char@a,c
  4046  00F33C  0E00               	movlw	0
  4047  00F33E  6E02               	movwf	new_px_char@a+1,c
  4048  00F340  0E80               	movlw	128
  4049  00F342  6E03               	movwf	new_px_char@a+2,c
  4050  00F344  0E0F               	movlw	15
  4051  00F346  6E04               	movwf	new_px_char@a+3,c
  4052  00F348  0E00               	movlw	0
  4053  00F34A  6E05               	movwf	new_px_char@b,c
  4054  00F34C  0E00               	movlw	0
  4055  00F34E  6E06               	movwf	new_px_char@b+1,c
  4056  00F350  0E00               	movlw	0
  4057  00F352  6E07               	movwf	new_px_char@b+2,c
  4058  00F354  0E00               	movlw	0
  4059  00F356  6E08               	movwf	new_px_char@b+3,c
  4060  00F358  ECFC  F06A         	call	_new_px_char	;wreg free
  4061  00F35C  CFE9 FFD9          	movff	fsr0l,fsr2l
  4062  00F360  CFEA FFDA          	movff	fsr0h,fsr2h
  4063  00F364  EE00  F011         	lfsr	0,?_px_map
  4064  00F368  0E07               	movlw	7
  4065  00F36A                     u2311:
  4066  00F36A  CFDB FFEB          	movff	plusw2,plusw0
  4067  00F36E  06E8               	decf	wreg,f,c
  4068  00F370  E2FC               	bc	u2311
  4069  00F372  0012               	return	
  4070  00F374  0E00               	movlw	0
  4071  00F376  6E01               	movwf	new_px_char@a,c
  4072  00F378  0E00               	movlw	0
  4073  00F37A  6E02               	movwf	new_px_char@a+1,c
  4074  00F37C  0E00               	movlw	0
  4075  00F37E  6E03               	movwf	new_px_char@a+2,c
  4076  00F380  0E00               	movlw	0
  4077  00F382  6E04               	movwf	new_px_char@a+3,c
  4078  00F384  0EC0               	movlw	192
  4079  00F386  6E05               	movwf	new_px_char@b,c
  4080  00F388  0E10               	movlw	16
  4081  00F38A  6E06               	movwf	new_px_char@b+1,c
  4082  00F38C  0E04               	movlw	4
  4083  00F38E  6E07               	movwf	new_px_char@b+2,c
  4084  00F390  0E00               	movlw	0
  4085  00F392  6E08               	movwf	new_px_char@b+3,c
  4086  00F394  ECFC  F06A         	call	_new_px_char	;wreg free
  4087  00F398  CFE9 FFD9          	movff	fsr0l,fsr2l
  4088  00F39C  CFEA FFDA          	movff	fsr0h,fsr2h
  4089  00F3A0  EE00  F011         	lfsr	0,?_px_map
  4090  00F3A4  0E07               	movlw	7
  4091  00F3A6                     u2321:
  4092  00F3A6  CFDB FFEB          	movff	plusw2,plusw0
  4093  00F3AA  06E8               	decf	wreg,f,c
  4094  00F3AC  E2FC               	bc	u2321
  4095  00F3AE  0012               	return	
  4096  00F3B0  0E8F               	movlw	143
  4097  00F3B2  6E01               	movwf	new_px_char@a,c
  4098  00F3B4  0ED9               	movlw	217
  4099  00F3B6  6E02               	movwf	new_px_char@a+1,c
  4100  00F3B8  0E02               	movlw	2
  4101  00F3BA  6E03               	movwf	new_px_char@a+2,c
  4102  00F3BC  0E00               	movlw	0
  4103  00F3BE  6E04               	movwf	new_px_char@a+3,c
  4104  00F3C0  0E00               	movlw	0
  4105  00F3C2  6E05               	movwf	new_px_char@b,c
  4106  00F3C4  0E00               	movlw	0
  4107  00F3C6  6E06               	movwf	new_px_char@b+1,c
  4108  00F3C8  0EE0               	movlw	224
  4109  00F3CA  6E07               	movwf	new_px_char@b+2,c
  4110  00F3CC  0EA0               	movlw	160
  4111  00F3CE  6E08               	movwf	new_px_char@b+3,c
  4112  00F3D0  ECFC  F06A         	call	_new_px_char	;wreg free
  4113  00F3D4  CFE9 FFD9          	movff	fsr0l,fsr2l
  4114  00F3D8  CFEA FFDA          	movff	fsr0h,fsr2h
  4115  00F3DC  EE00  F011         	lfsr	0,?_px_map
  4116  00F3E0  0E07               	movlw	7
  4117  00F3E2                     u2331:
  4118  00F3E2  CFDB FFEB          	movff	plusw2,plusw0
  4119  00F3E6  06E8               	decf	wreg,f,c
  4120  00F3E8  E2FC               	bc	u2331
  4121  00F3EA  0012               	return	
  4122  00F3EC  0E8C               	movlw	140
  4123  00F3EE  6E01               	movwf	new_px_char@a,c
  4124  00F3F0  0EF1               	movlw	241
  4125  00F3F2  6E02               	movwf	new_px_char@a+1,c
  4126  00F3F4  0E01               	movlw	1
  4127  00F3F6  6E03               	movwf	new_px_char@a+2,c
  4128  00F3F8  0E00               	movlw	0
  4129  00F3FA  6E04               	movwf	new_px_char@a+3,c
  4130  00F3FC  0E20               	movlw	32
  4131  00F3FE  6E05               	movwf	new_px_char@b,c
  4132  00F400  0E84               	movlw	132
  4133  00F402  6E06               	movwf	new_px_char@b+1,c
  4134  00F404  0EF0               	movlw	240
  4135  00F406  6E07               	movwf	new_px_char@b+2,c
  4136  00F408  0E62               	movlw	98
  4137  00F40A  6E08               	movwf	new_px_char@b+3,c
  4138  00F40C  ECFC  F06A         	call	_new_px_char	;wreg free
  4139  00F410  CFE9 FFD9          	movff	fsr0l,fsr2l
  4140  00F414  CFEA FFDA          	movff	fsr0h,fsr2h
  4141  00F418  EE00  F011         	lfsr	0,?_px_map
  4142  00F41C  0E07               	movlw	7
  4143  00F41E                     u2341:
  4144  00F41E  CFDB FFEB          	movff	plusw2,plusw0
  4145  00F422  06E8               	decf	wreg,f,c
  4146  00F424  E2FC               	bc	u2341
  4147  00F426  0012               	return	
  4148  00F428  0E08               	movlw	8
  4149  00F42A  6E01               	movwf	new_px_char@a,c
  4150  00F42C  0ED1               	movlw	209
  4151  00F42E  6E02               	movwf	new_px_char@a+1,c
  4152  00F430  0E01               	movlw	1
  4153  00F432  6E03               	movwf	new_px_char@a+2,c
  4154  00F434  0E00               	movlw	0
  4155  00F436  6E04               	movwf	new_px_char@a+3,c
  4156  00F438  0E00               	movlw	0
  4157  00F43A  6E05               	movwf	new_px_char@b,c
  4158  00F43C  0E00               	movlw	0
  4159  00F43E  6E06               	movwf	new_px_char@b+1,c
  4160  00F440  0EE0               	movlw	224
  4161  00F442  6E07               	movwf	new_px_char@b+2,c
  4162  00F444  0E62               	movlw	98
  4163  00F446  6E08               	movwf	new_px_char@b+3,c
  4164  00F448  ECFC  F06A         	call	_new_px_char	;wreg free
  4165  00F44C  CFE9 FFD9          	movff	fsr0l,fsr2l
  4166  00F450  CFEA FFDA          	movff	fsr0h,fsr2h
  4167  00F454  EE00  F011         	lfsr	0,?_px_map
  4168  00F458  0E07               	movlw	7
  4169  00F45A                     u2351:
  4170  00F45A  CFDB FFEB          	movff	plusw2,plusw0
  4171  00F45E  06E8               	decf	wreg,f,c
  4172  00F460  E2FC               	bc	u2351
  4173  00F462  0012               	return	
  4174  00F464  0E8C               	movlw	140
  4175  00F466  6E01               	movwf	new_px_char@a,c
  4176  00F468  0ED1               	movlw	209
  4177  00F46A  6E02               	movwf	new_px_char@a+1,c
  4178  00F46C  0E03               	movlw	3
  4179  00F46E  6E03               	movwf	new_px_char@a+2,c
  4180  00F470  0E00               	movlw	0
  4181  00F472  6E04               	movwf	new_px_char@a+3,c
  4182  00F474  0E00               	movlw	0
  4183  00F476  6E05               	movwf	new_px_char@b,c
  4184  00F478  0E42               	movlw	66
  4185  00F47A  6E06               	movwf	new_px_char@b+1,c
  4186  00F47C  0EE8               	movlw	232
  4187  00F47E  6E07               	movwf	new_px_char@b+2,c
  4188  00F480  0E63               	movlw	99
  4189  00F482  6E08               	movwf	new_px_char@b+3,c
  4190  00F484  ECFC  F06A         	call	_new_px_char	;wreg free
  4191  00F488  CFE9 FFD9          	movff	fsr0l,fsr2l
  4192  00F48C  CFEA FFDA          	movff	fsr0h,fsr2h
  4193  00F490  EE00  F011         	lfsr	0,?_px_map
  4194  00F494  0E07               	movlw	7
  4195  00F496                     u2361:
  4196  00F496  CFDB FFEB          	movff	plusw2,plusw0
  4197  00F49A  06E8               	decf	wreg,f,c
  4198  00F49C  E2FC               	bc	u2361
  4199  00F49E  0012               	return	
  4200  00F4A0  0E0F               	movlw	15
  4201  00F4A2  6E01               	movwf	new_px_char@a,c
  4202  00F4A4  0ED1               	movlw	209
  4203  00F4A6  6E02               	movwf	new_px_char@a+1,c
  4204  00F4A8  0E01               	movlw	1
  4205  00F4AA  6E03               	movwf	new_px_char@a+2,c
  4206  00F4AC  0E00               	movlw	0
  4207  00F4AE  6E04               	movwf	new_px_char@a+3,c
  4208  00F4B0  0E00               	movlw	0
  4209  00F4B2  6E05               	movwf	new_px_char@b,c
  4210  00F4B4  0E00               	movlw	0
  4211  00F4B6  6E06               	movwf	new_px_char@b+1,c
  4212  00F4B8  0EE0               	movlw	224
  4213  00F4BA  6E07               	movwf	new_px_char@b+2,c
  4214  00F4BC  0EE2               	movlw	226
  4215  00F4BE  6E08               	movwf	new_px_char@b+3,c
  4216  00F4C0  ECFC  F06A         	call	_new_px_char	;wreg free
  4217  00F4C4  CFE9 FFD9          	movff	fsr0l,fsr2l
  4218  00F4C8  CFEA FFDA          	movff	fsr0h,fsr2h
  4219  00F4CC  EE00  F011         	lfsr	0,?_px_map
  4220  00F4D0  0E07               	movlw	7
  4221  00F4D2                     u2371:
  4222  00F4D2  CFDB FFEB          	movff	plusw2,plusw0
  4223  00F4D6  06E8               	decf	wreg,f,c
  4224  00F4D8  E2FC               	bc	u2371
  4225  00F4DA  0012               	return	
  4226  00F4DC  0E10               	movlw	16
  4227  00F4DE  6E01               	movwf	new_px_char@a,c
  4228  00F4E0  0E42               	movlw	66
  4229  00F4E2  6E02               	movwf	new_px_char@a+1,c
  4230  00F4E4  0E00               	movlw	0
  4231  00F4E6  6E03               	movwf	new_px_char@a+2,c
  4232  00F4E8  0E00               	movlw	0
  4233  00F4EA  6E04               	movwf	new_px_char@a+3,c
  4234  00F4EC  0E80               	movlw	128
  4235  00F4EE  6E05               	movwf	new_px_char@b,c
  4236  00F4F0  0E49               	movlw	73
  4237  00F4F2  6E06               	movwf	new_px_char@b+1,c
  4238  00F4F4  0E21               	movlw	33
  4239  00F4F6  6E07               	movwf	new_px_char@b+2,c
  4240  00F4F8  0E9E               	movlw	158
  4241  00F4FA  6E08               	movwf	new_px_char@b+3,c
  4242  00F4FC  ECFC  F06A         	call	_new_px_char	;wreg free
  4243  00F500  CFE9 FFD9          	movff	fsr0l,fsr2l
  4244  00F504  CFEA FFDA          	movff	fsr0h,fsr2h
  4245  00F508  EE00  F011         	lfsr	0,?_px_map
  4246  00F50C  0E07               	movlw	7
  4247  00F50E                     u2381:
  4248  00F50E  CFDB FFEB          	movff	plusw2,plusw0
  4249  00F512  06E8               	decf	wreg,f,c
  4250  00F514  E2FC               	bc	u2381
  4251  00F516  0012               	return	
  4252  00F518  0E8C               	movlw	140
  4253  00F51A  6E01               	movwf	new_px_char@a,c
  4254  00F51C  0E1E               	movlw	30
  4255  00F51E  6E02               	movwf	new_px_char@a+1,c
  4256  00F520  0E46               	movlw	70
  4257  00F522  6E03               	movwf	new_px_char@a+2,c
  4258  00F524  0E07               	movlw	7
  4259  00F526  6E04               	movwf	new_px_char@a+3,c
  4260  00F528  0E00               	movlw	0
  4261  00F52A  6E05               	movwf	new_px_char@b,c
  4262  00F52C  0E00               	movlw	0
  4263  00F52E  6E06               	movwf	new_px_char@b+1,c
  4264  00F530  0EE0               	movlw	224
  4265  00F532  6E07               	movwf	new_px_char@b+2,c
  4266  00F534  0E62               	movlw	98
  4267  00F536  6E08               	movwf	new_px_char@b+3,c
  4268  00F538  ECFC  F06A         	call	_new_px_char	;wreg free
  4269  00F53C  CFE9 FFD9          	movff	fsr0l,fsr2l
  4270  00F540  CFEA FFDA          	movff	fsr0h,fsr2h
  4271  00F544  EE00  F011         	lfsr	0,?_px_map
  4272  00F548  0E07               	movlw	7
  4273  00F54A                     u2391:
  4274  00F54A  CFDB FFEB          	movff	plusw2,plusw0
  4275  00F54E  06E8               	decf	wreg,f,c
  4276  00F550  E2FC               	bc	u2391
  4277  00F552  0012               	return	
  4278  00F554  0E8C               	movlw	140
  4279  00F556  6E01               	movwf	new_px_char@a,c
  4280  00F558  0E31               	movlw	49
  4281  00F55A  6E02               	movwf	new_px_char@a+1,c
  4282  00F55C  0E02               	movlw	2
  4283  00F55E  6E03               	movwf	new_px_char@a+2,c
  4284  00F560  0E00               	movlw	0
  4285  00F562  6E04               	movwf	new_px_char@a+3,c
  4286  00F564  0E20               	movlw	32
  4287  00F566  6E05               	movwf	new_px_char@b,c
  4288  00F568  0E84               	movlw	132
  4289  00F56A  6E06               	movwf	new_px_char@b+1,c
  4290  00F56C  0ED0               	movlw	208
  4291  00F56E  6E07               	movwf	new_px_char@b+2,c
  4292  00F570  0E66               	movlw	102
  4293  00F572  6E08               	movwf	new_px_char@b+3,c
  4294  00F574  ECFC  F06A         	call	_new_px_char	;wreg free
  4295  00F578  CFE9 FFD9          	movff	fsr0l,fsr2l
  4296  00F57C  CFEA FFDA          	movff	fsr0h,fsr2h
  4297  00F580  EE00  F011         	lfsr	0,?_px_map
  4298  00F584  0E07               	movlw	7
  4299  00F586                     u2401:
  4300  00F586  CFDB FFEB          	movff	plusw2,plusw0
  4301  00F58A  06E8               	decf	wreg,f,c
  4302  00F58C  E2FC               	bc	u2401
  4303  00F58E  0012               	return	
  4304  00F590  0E21               	movlw	33
  4305  00F592  6E01               	movwf	new_px_char@a,c
  4306  00F594  0EC4               	movlw	196
  4307  00F596  6E02               	movwf	new_px_char@a+1,c
  4308  00F598  0E01               	movlw	1
  4309  00F59A  6E03               	movwf	new_px_char@a+2,c
  4310  00F59C  0E00               	movlw	0
  4311  00F59E  6E04               	movwf	new_px_char@a+3,c
  4312  00F5A0  0E00               	movlw	0
  4313  00F5A2  6E05               	movwf	new_px_char@b,c
  4314  00F5A4  0E10               	movlw	16
  4315  00F5A6  6E06               	movwf	new_px_char@b+1,c
  4316  00F5A8  0E60               	movlw	96
  4317  00F5AA  6E07               	movwf	new_px_char@b+2,c
  4318  00F5AC  0E08               	movlw	8
  4319  00F5AE  6E08               	movwf	new_px_char@b+3,c
  4320  00F5B0  ECFC  F06A         	call	_new_px_char	;wreg free
  4321  00F5B4  CFE9 FFD9          	movff	fsr0l,fsr2l
  4322  00F5B8  CFEA FFDA          	movff	fsr0h,fsr2h
  4323  00F5BC  EE00  F011         	lfsr	0,?_px_map
  4324  00F5C0  0E07               	movlw	7
  4325  00F5C2                     u2411:
  4326  00F5C2  CFDB FFEB          	movff	plusw2,plusw0
  4327  00F5C6  06E8               	decf	wreg,f,c
  4328  00F5C8  E2FC               	bc	u2411
  4329  00F5CA  0012               	return	
  4330  00F5CC  0E42               	movlw	66
  4331  00F5CE  6E01               	movwf	new_px_char@a,c
  4332  00F5D0  0E28               	movlw	40
  4333  00F5D2  6E02               	movwf	new_px_char@a+1,c
  4334  00F5D4  0E25               	movlw	37
  4335  00F5D6  6E03               	movwf	new_px_char@a+2,c
  4336  00F5D8  0E03               	movlw	3
  4337  00F5DA  6E04               	movwf	new_px_char@a+3,c
  4338  00F5DC  0E00               	movlw	0
  4339  00F5DE  6E05               	movwf	new_px_char@b,c
  4340  00F5E0  0E01               	movlw	1
  4341  00F5E2  6E06               	movwf	new_px_char@b+1,c
  4342  00F5E4  0E86               	movlw	134
  4343  00F5E6  6E07               	movwf	new_px_char@b+2,c
  4344  00F5E8  0E10               	movlw	16
  4345  00F5EA  6E08               	movwf	new_px_char@b+3,c
  4346  00F5EC  ECFC  F06A         	call	_new_px_char	;wreg free
  4347  00F5F0  CFE9 FFD9          	movff	fsr0l,fsr2l
  4348  00F5F4  CFEA FFDA          	movff	fsr0h,fsr2h
  4349  00F5F8  EE00  F011         	lfsr	0,?_px_map
  4350  00F5FC  0E07               	movlw	7
  4351  00F5FE                     u2421:
  4352  00F5FE  CFDB FFEB          	movff	plusw2,plusw0
  4353  00F602  06E8               	decf	wreg,f,c
  4354  00F604  E2FC               	bc	u2421
  4355  00F606  0012               	return	
  4356  00F608  0E28               	movlw	40
  4357  00F60A  6E01               	movwf	new_px_char@a,c
  4358  00F60C  0E29               	movlw	41
  4359  00F60E  6E02               	movwf	new_px_char@a+1,c
  4360  00F610  0E02               	movlw	2
  4361  00F612  6E03               	movwf	new_px_char@a+2,c
  4362  00F614  0E00               	movlw	0
  4363  00F616  6E04               	movwf	new_px_char@a+3,c
  4364  00F618  0E20               	movlw	32
  4365  00F61A  6E05               	movwf	new_px_char@b,c
  4366  00F61C  0E84               	movlw	132
  4367  00F61E  6E06               	movwf	new_px_char@b+1,c
  4368  00F620  0E90               	movlw	144
  4369  00F622  6E07               	movwf	new_px_char@b+2,c
  4370  00F624  0ECA               	movlw	202
  4371  00F626  6E08               	movwf	new_px_char@b+3,c
  4372  00F628  ECFC  F06A         	call	_new_px_char	;wreg free
  4373  00F62C  CFE9 FFD9          	movff	fsr0l,fsr2l
  4374  00F630  CFEA FFDA          	movff	fsr0h,fsr2h
  4375  00F634  EE00  F011         	lfsr	0,?_px_map
  4376  00F638  0E07               	movlw	7
  4377  00F63A                     u2431:
  4378  00F63A  CFDB FFEB          	movff	plusw2,plusw0
  4379  00F63E  06E8               	decf	wreg,f,c
  4380  00F640  E2FC               	bc	u2431
  4381  00F642  0012               	return	
  4382  00F644  0E21               	movlw	33
  4383  00F646  6E01               	movwf	new_px_char@a,c
  4384  00F648  0EC4               	movlw	196
  4385  00F64A  6E02               	movwf	new_px_char@a+1,c
  4386  00F64C  0E01               	movlw	1
  4387  00F64E  6E03               	movwf	new_px_char@a+2,c
  4388  00F650  0E00               	movlw	0
  4389  00F652  6E04               	movwf	new_px_char@a+3,c
  4390  00F654  0EC0               	movlw	192
  4391  00F656  6E05               	movwf	new_px_char@b,c
  4392  00F658  0E10               	movlw	16
  4393  00F65A  6E06               	movwf	new_px_char@b+1,c
  4394  00F65C  0E42               	movlw	66
  4395  00F65E  6E07               	movwf	new_px_char@b+2,c
  4396  00F660  0E08               	movlw	8
  4397  00F662  6E08               	movwf	new_px_char@b+3,c
  4398  00F664  ECFC  F06A         	call	_new_px_char	;wreg free
  4399  00F668  CFE9 FFD9          	movff	fsr0l,fsr2l
  4400  00F66C  CFEA FFDA          	movff	fsr0h,fsr2h
  4401  00F670  EE00  F011         	lfsr	0,?_px_map
  4402  00F674  0E07               	movlw	7
  4403  00F676                     u2441:
  4404  00F676  CFDB FFEB          	movff	plusw2,plusw0
  4405  00F67A  06E8               	decf	wreg,f,c
  4406  00F67C  E2FC               	bc	u2441
  4407  00F67E  0012               	return	
  4408  00F680  0EAD               	movlw	173
  4409  00F682  6E01               	movwf	new_px_char@a,c
  4410  00F684  0E35               	movlw	53
  4411  00F686  6E02               	movwf	new_px_char@a+1,c
  4412  00F688  0E02               	movlw	2
  4413  00F68A  6E03               	movwf	new_px_char@a+2,c
  4414  00F68C  0E00               	movlw	0
  4415  00F68E  6E04               	movwf	new_px_char@a+3,c
  4416  00F690  0E00               	movlw	0
  4417  00F692  6E05               	movwf	new_px_char@b,c
  4418  00F694  0E00               	movlw	0
  4419  00F696  6E06               	movwf	new_px_char@b+1,c
  4420  00F698  0EB0               	movlw	176
  4421  00F69A  6E07               	movwf	new_px_char@b+2,c
  4422  00F69C  0E6A               	movlw	106
  4423  00F69E  6E08               	movwf	new_px_char@b+3,c
  4424  00F6A0  ECFC  F06A         	call	_new_px_char	;wreg free
  4425  00F6A4  CFE9 FFD9          	movff	fsr0l,fsr2l
  4426  00F6A8  CFEA FFDA          	movff	fsr0h,fsr2h
  4427  00F6AC  EE00  F011         	lfsr	0,?_px_map
  4428  00F6B0  0E07               	movlw	7
  4429  00F6B2                     u2451:
  4430  00F6B2  CFDB FFEB          	movff	plusw2,plusw0
  4431  00F6B6  06E8               	decf	wreg,f,c
  4432  00F6B8  E2FC               	bc	u2451
  4433  00F6BA  0012               	return	
  4434  00F6BC  0E8C               	movlw	140
  4435  00F6BE  6E01               	movwf	new_px_char@a,c
  4436  00F6C0  0E31               	movlw	49
  4437  00F6C2  6E02               	movwf	new_px_char@a+1,c
  4438  00F6C4  0E02               	movlw	2
  4439  00F6C6  6E03               	movwf	new_px_char@a+2,c
  4440  00F6C8  0E00               	movlw	0
  4441  00F6CA  6E04               	movwf	new_px_char@a+3,c
  4442  00F6CC  0E00               	movlw	0
  4443  00F6CE  6E05               	movwf	new_px_char@b,c
  4444  00F6D0  0E00               	movlw	0
  4445  00F6D2  6E06               	movwf	new_px_char@b+1,c
  4446  00F6D4  0ED0               	movlw	208
  4447  00F6D6  6E07               	movwf	new_px_char@b+2,c
  4448  00F6D8  0E66               	movlw	102
  4449  00F6DA  6E08               	movwf	new_px_char@b+3,c
  4450  00F6DC  ECFC  F06A         	call	_new_px_char	;wreg free
  4451  00F6E0  CFE9 FFD9          	movff	fsr0l,fsr2l
  4452  00F6E4  CFEA FFDA          	movff	fsr0h,fsr2h
  4453  00F6E8  EE00  F011         	lfsr	0,?_px_map
  4454  00F6EC  0E07               	movlw	7
  4455  00F6EE                     u2461:
  4456  00F6EE  CFDB FFEB          	movff	plusw2,plusw0
  4457  00F6F2  06E8               	decf	wreg,f,c
  4458  00F6F4  E2FC               	bc	u2461
  4459  00F6F6  0012               	return	
  4460  00F6F8  0E8C               	movlw	140
  4461  00F6FA  6E01               	movwf	new_px_char@a,c
  4462  00F6FC  0ED1               	movlw	209
  4463  00F6FE  6E02               	movwf	new_px_char@a+1,c
  4464  00F700  0E01               	movlw	1
  4465  00F702  6E03               	movwf	new_px_char@a+2,c
  4466  00F704  0E00               	movlw	0
  4467  00F706  6E04               	movwf	new_px_char@a+3,c
  4468  00F708  0E00               	movlw	0
  4469  00F70A  6E05               	movwf	new_px_char@b,c
  4470  00F70C  0E00               	movlw	0
  4471  00F70E  6E06               	movwf	new_px_char@b+1,c
  4472  00F710  0EE0               	movlw	224
  4473  00F712  6E07               	movwf	new_px_char@b+2,c
  4474  00F714  0E62               	movlw	98
  4475  00F716  6E08               	movwf	new_px_char@b+3,c
  4476  00F718  ECFC  F06A         	call	_new_px_char	;wreg free
  4477  00F71C  CFE9 FFD9          	movff	fsr0l,fsr2l
  4478  00F720  CFEA FFDA          	movff	fsr0h,fsr2h
  4479  00F724  EE00  F011         	lfsr	0,?_px_map
  4480  00F728  0E07               	movlw	7
  4481  00F72A                     u2471:
  4482  00F72A  CFDB FFEB          	movff	plusw2,plusw0
  4483  00F72E  06E8               	decf	wreg,f,c
  4484  00F730  E2FC               	bc	u2471
  4485  00F732  0012               	return	
  4486  00F734  0E84               	movlw	132
  4487  00F736  6E01               	movwf	new_px_char@a,c
  4488  00F738  0E2F               	movlw	47
  4489  00F73A  6E02               	movwf	new_px_char@a+1,c
  4490  00F73C  0E84               	movlw	132
  4491  00F73E  6E03               	movwf	new_px_char@a+2,c
  4492  00F740  0E00               	movlw	0
  4493  00F742  6E04               	movwf	new_px_char@a+3,c
  4494  00F744  0E00               	movlw	0
  4495  00F746  6E05               	movwf	new_px_char@b,c
  4496  00F748  0E00               	movlw	0
  4497  00F74A  6E06               	movwf	new_px_char@b+1,c
  4498  00F74C  0EF0               	movlw	240
  4499  00F74E  6E07               	movwf	new_px_char@b+2,c
  4500  00F750  0E20               	movlw	32
  4501  00F752  6E08               	movwf	new_px_char@b+3,c
  4502  00F754  ECFC  F06A         	call	_new_px_char	;wreg free
  4503  00F758  CFE9 FFD9          	movff	fsr0l,fsr2l
  4504  00F75C  CFEA FFDA          	movff	fsr0h,fsr2h
  4505  00F760  EE00  F011         	lfsr	0,?_px_map
  4506  00F764  0E07               	movlw	7
  4507  00F766                     u2481:
  4508  00F766  CFDB FFEB          	movff	plusw2,plusw0
  4509  00F76A  06E8               	decf	wreg,f,c
  4510  00F76C  E2FC               	bc	u2481
  4511  00F76E  0012               	return	
  4512  00F770  0E8C               	movlw	140
  4513  00F772  6E01               	movwf	new_px_char@a,c
  4514  00F774  0E1E               	movlw	30
  4515  00F776  6E02               	movwf	new_px_char@a+1,c
  4516  00F778  0E42               	movlw	66
  4517  00F77A  6E03               	movwf	new_px_char@a+2,c
  4518  00F77C  0E08               	movlw	8
  4519  00F77E  6E04               	movwf	new_px_char@a+3,c
  4520  00F780  0E00               	movlw	0
  4521  00F782  6E05               	movwf	new_px_char@b,c
  4522  00F784  0E00               	movlw	0
  4523  00F786  6E06               	movwf	new_px_char@b+1,c
  4524  00F788  0EE0               	movlw	224
  4525  00F78A  6E07               	movwf	new_px_char@b+2,c
  4526  00F78C  0E63               	movlw	99
  4527  00F78E  6E08               	movwf	new_px_char@b+3,c
  4528  00F790  ECFC  F06A         	call	_new_px_char	;wreg free
  4529  00F794  CFE9 FFD9          	movff	fsr0l,fsr2l
  4530  00F798  CFEA FFDA          	movff	fsr0h,fsr2h
  4531  00F79C  EE00  F011         	lfsr	0,?_px_map
  4532  00F7A0  0E07               	movlw	7
  4533  00F7A2                     u2491:
  4534  00F7A2  CFDB FFEB          	movff	plusw2,plusw0
  4535  00F7A6  06E8               	decf	wreg,f,c
  4536  00F7A8  E2FC               	bc	u2491
  4537  00F7AA  0012               	return	
  4538  00F7AC  0E08               	movlw	8
  4539  00F7AE  6E01               	movwf	new_px_char@a,c
  4540  00F7B0  0E21               	movlw	33
  4541  00F7B2  6E02               	movwf	new_px_char@a+1,c
  4542  00F7B4  0E00               	movlw	0
  4543  00F7B6  6E03               	movwf	new_px_char@a+2,c
  4544  00F7B8  0E00               	movlw	0
  4545  00F7BA  6E04               	movwf	new_px_char@a+3,c
  4546  00F7BC  0E00               	movlw	0
  4547  00F7BE  6E05               	movwf	new_px_char@b,c
  4548  00F7C0  0E00               	movlw	0
  4549  00F7C2  6E06               	movwf	new_px_char@b+1,c
  4550  00F7C4  0ED0               	movlw	208
  4551  00F7C6  6E07               	movwf	new_px_char@b+2,c
  4552  00F7C8  0E66               	movlw	102
  4553  00F7CA  6E08               	movwf	new_px_char@b+3,c
  4554  00F7CC  ECFC  F06A         	call	_new_px_char	;wreg free
  4555  00F7D0  CFE9 FFD9          	movff	fsr0l,fsr2l
  4556  00F7D4  CFEA FFDA          	movff	fsr0h,fsr2h
  4557  00F7D8  EE00  F011         	lfsr	0,?_px_map
  4558  00F7DC  0E07               	movlw	7
  4559  00F7DE                     u2501:
  4560  00F7DE  CFDB FFEB          	movff	plusw2,plusw0
  4561  00F7E2  06E8               	decf	wreg,f,c
  4562  00F7E4  E2FC               	bc	u2501
  4563  00F7E6  0012               	return	
  4564  00F7E8  0E41               	movlw	65
  4565  00F7EA  6E01               	movwf	new_px_char@a,c
  4566  00F7EC  0ED1               	movlw	209
  4567  00F7EE  6E02               	movwf	new_px_char@a+1,c
  4568  00F7F0  0E01               	movlw	1
  4569  00F7F2  6E03               	movwf	new_px_char@a+2,c
  4570  00F7F4  0E00               	movlw	0
  4571  00F7F6  6E04               	movwf	new_px_char@a+3,c
  4572  00F7F8  0E00               	movlw	0
  4573  00F7FA  6E05               	movwf	new_px_char@b,c
  4574  00F7FC  0E00               	movlw	0
  4575  00F7FE  6E06               	movwf	new_px_char@b+1,c
  4576  00F800  0EE0               	movlw	224
  4577  00F802  6E07               	movwf	new_px_char@b+2,c
  4578  00F804  0EA2               	movlw	162
  4579  00F806  6E08               	movwf	new_px_char@b+3,c
  4580  00F808  ECFC  F06A         	call	_new_px_char	;wreg free
  4581  00F80C  CFE9 FFD9          	movff	fsr0l,fsr2l
  4582  00F810  CFEA FFDA          	movff	fsr0h,fsr2h
  4583  00F814  EE00  F011         	lfsr	0,?_px_map
  4584  00F818  0E07               	movlw	7
  4585  00F81A                     u2511:
  4586  00F81A  CFDB FFEB          	movff	plusw2,plusw0
  4587  00F81E  06E8               	decf	wreg,f,c
  4588  00F820  E2FC               	bc	u2511
  4589  00F822  0012               	return	
  4590  00F824  0E10               	movlw	16
  4591  00F826  6E01               	movwf	new_px_char@a,c
  4592  00F828  0E92               	movlw	146
  4593  00F82A  6E02               	movwf	new_px_char@a+1,c
  4594  00F82C  0E01               	movlw	1
  4595  00F82E  6E03               	movwf	new_px_char@a+2,c
  4596  00F830  0E00               	movlw	0
  4597  00F832  6E04               	movwf	new_px_char@a+3,c
  4598  00F834  0E00               	movlw	0
  4599  00F836  6E05               	movwf	new_px_char@b,c
  4600  00F838  0E08               	movlw	8
  4601  00F83A  6E06               	movwf	new_px_char@b+1,c
  4602  00F83C  0EF1               	movlw	241
  4603  00F83E  6E07               	movwf	new_px_char@b+2,c
  4604  00F840  0E84               	movlw	132
  4605  00F842  6E08               	movwf	new_px_char@b+3,c
  4606  00F844  ECFC  F06A         	call	_new_px_char	;wreg free
  4607  00F848  CFE9 FFD9          	movff	fsr0l,fsr2l
  4608  00F84C  CFEA FFDA          	movff	fsr0h,fsr2h
  4609  00F850  EE00  F011         	lfsr	0,?_px_map
  4610  00F854  0E07               	movlw	7
  4611  00F856                     u2521:
  4612  00F856  CFDB FFEB          	movff	plusw2,plusw0
  4613  00F85A  06E8               	decf	wreg,f,c
  4614  00F85C  E2FC               	bc	u2521
  4615  00F85E  0012               	return	
  4616  00F860  0E8C               	movlw	140
  4617  00F862  6E01               	movwf	new_px_char@a,c
  4618  00F864  0ED9               	movlw	217
  4619  00F866  6E02               	movwf	new_px_char@a+1,c
  4620  00F868  0E02               	movlw	2
  4621  00F86A  6E03               	movwf	new_px_char@a+2,c
  4622  00F86C  0E00               	movlw	0
  4623  00F86E  6E04               	movwf	new_px_char@a+3,c
  4624  00F870  0E00               	movlw	0
  4625  00F872  6E05               	movwf	new_px_char@b,c
  4626  00F874  0E00               	movlw	0
  4627  00F876  6E06               	movwf	new_px_char@b+1,c
  4628  00F878  0E10               	movlw	16
  4629  00F87A  6E07               	movwf	new_px_char@b+2,c
  4630  00F87C  0E63               	movlw	99
  4631  00F87E  6E08               	movwf	new_px_char@b+3,c
  4632  00F880  ECFC  F06A         	call	_new_px_char	;wreg free
  4633  00F884  CFE9 FFD9          	movff	fsr0l,fsr2l
  4634  00F888  CFEA FFDA          	movff	fsr0h,fsr2h
  4635  00F88C  EE00  F011         	lfsr	0,?_px_map
  4636  00F890  0E07               	movlw	7
  4637  00F892                     u2531:
  4638  00F892  CFDB FFEB          	movff	plusw2,plusw0
  4639  00F896  06E8               	decf	wreg,f,c
  4640  00F898  E2FC               	bc	u2531
  4641  00F89A  0012               	return	
  4642  00F89C  0E54               	movlw	84
  4643  00F89E  6E01               	movwf	new_px_char@a,c
  4644  00F8A0  0E8A               	movlw	138
  4645  00F8A2  6E02               	movwf	new_px_char@a+1,c
  4646  00F8A4  0E00               	movlw	0
  4647  00F8A6  6E03               	movwf	new_px_char@a+2,c
  4648  00F8A8  0E00               	movlw	0
  4649  00F8AA  6E04               	movwf	new_px_char@a+3,c
  4650  00F8AC  0E00               	movlw	0
  4651  00F8AE  6E05               	movwf	new_px_char@b,c
  4652  00F8B0  0E00               	movlw	0
  4653  00F8B2  6E06               	movwf	new_px_char@b+1,c
  4654  00F8B4  0E10               	movlw	16
  4655  00F8B6  6E07               	movwf	new_px_char@b+2,c
  4656  00F8B8  0E63               	movlw	99
  4657  00F8BA  6E08               	movwf	new_px_char@b+3,c
  4658  00F8BC  ECFC  F06A         	call	_new_px_char	;wreg free
  4659  00F8C0  CFE9 FFD9          	movff	fsr0l,fsr2l
  4660  00F8C4  CFEA FFDA          	movff	fsr0h,fsr2h
  4661  00F8C8  EE00  F011         	lfsr	0,?_px_map
  4662  00F8CC  0E07               	movlw	7
  4663  00F8CE                     u2541:
  4664  00F8CE  CFDB FFEB          	movff	plusw2,plusw0
  4665  00F8D2  06E8               	decf	wreg,f,c
  4666  00F8D4  E2FC               	bc	u2541
  4667  00F8D6  0012               	return	
  4668  00F8D8  0EAD               	movlw	173
  4669  00F8DA  6E01               	movwf	new_px_char@a,c
  4670  00F8DC  0E55               	movlw	85
  4671  00F8DE  6E02               	movwf	new_px_char@a+1,c
  4672  00F8E0  0E01               	movlw	1
  4673  00F8E2  6E03               	movwf	new_px_char@a+2,c
  4674  00F8E4  0E00               	movlw	0
  4675  00F8E6  6E04               	movwf	new_px_char@a+3,c
  4676  00F8E8  0E00               	movlw	0
  4677  00F8EA  6E05               	movwf	new_px_char@b,c
  4678  00F8EC  0E00               	movlw	0
  4679  00F8EE  6E06               	movwf	new_px_char@b+1,c
  4680  00F8F0  0E10               	movlw	16
  4681  00F8F2  6E07               	movwf	new_px_char@b+2,c
  4682  00F8F4  0E63               	movlw	99
  4683  00F8F6  6E08               	movwf	new_px_char@b+3,c
  4684  00F8F8  ECFC  F06A         	call	_new_px_char	;wreg free
  4685  00F8FC  CFE9 FFD9          	movff	fsr0l,fsr2l
  4686  00F900  CFEA FFDA          	movff	fsr0h,fsr2h
  4687  00F904  EE00  F011         	lfsr	0,?_px_map
  4688  00F908  0E07               	movlw	7
  4689  00F90A                     u2551:
  4690  00F90A  CFDB FFEB          	movff	plusw2,plusw0
  4691  00F90E  06E8               	decf	wreg,f,c
  4692  00F910  E2FC               	bc	u2551
  4693  00F912  0012               	return	
  4694  00F914  0E21               	movlw	33
  4695  00F916  6E01               	movwf	new_px_char@a,c
  4696  00F918  0E2A               	movlw	42
  4697  00F91A  6E02               	movwf	new_px_char@a+1,c
  4698  00F91C  0E02               	movlw	2
  4699  00F91E  6E03               	movwf	new_px_char@a+2,c
  4700  00F920  0E00               	movlw	0
  4701  00F922  6E04               	movwf	new_px_char@a+3,c
  4702  00F924  0E00               	movlw	0
  4703  00F926  6E05               	movwf	new_px_char@b,c
  4704  00F928  0E00               	movlw	0
  4705  00F92A  6E06               	movwf	new_px_char@b+1,c
  4706  00F92C  0E10               	movlw	16
  4707  00F92E  6E07               	movwf	new_px_char@b+2,c
  4708  00F930  0E15               	movlw	21
  4709  00F932  6E08               	movwf	new_px_char@b+3,c
  4710  00F934  ECFC  F06A         	call	_new_px_char	;wreg free
  4711  00F938  CFE9 FFD9          	movff	fsr0l,fsr2l
  4712  00F93C  CFEA FFDA          	movff	fsr0h,fsr2h
  4713  00F940  EE00  F011         	lfsr	0,?_px_map
  4714  00F944  0E07               	movlw	7
  4715  00F946                     u2561:
  4716  00F946  CFDB FFEB          	movff	plusw2,plusw0
  4717  00F94A  06E8               	decf	wreg,f,c
  4718  00F94C  E2FC               	bc	u2561
  4719  00F94E  0012               	return	
  4720  00F950  0ECC               	movlw	204
  4721  00F952  6E01               	movwf	new_px_char@a,c
  4722  00F954  0E16               	movlw	22
  4723  00F956  6E02               	movwf	new_px_char@a+1,c
  4724  00F958  0E46               	movlw	70
  4725  00F95A  6E03               	movwf	new_px_char@a+2,c
  4726  00F95C  0E07               	movlw	7
  4727  00F95E  6E04               	movwf	new_px_char@a+3,c
  4728  00F960  0E00               	movlw	0
  4729  00F962  6E05               	movwf	new_px_char@b,c
  4730  00F964  0E00               	movlw	0
  4731  00F966  6E06               	movwf	new_px_char@b+1,c
  4732  00F968  0E10               	movlw	16
  4733  00F96A  6E07               	movwf	new_px_char@b+2,c
  4734  00F96C  0E63               	movlw	99
  4735  00F96E  6E08               	movwf	new_px_char@b+3,c
  4736  00F970  ECFC  F06A         	call	_new_px_char	;wreg free
  4737  00F974  CFE9 FFD9          	movff	fsr0l,fsr2l
  4738  00F978  CFEA FFDA          	movff	fsr0h,fsr2h
  4739  00F97C  EE00  F011         	lfsr	0,?_px_map
  4740  00F980  0E07               	movlw	7
  4741  00F982                     u2571:
  4742  00F982  CFDB FFEB          	movff	plusw2,plusw0
  4743  00F986  06E8               	decf	wreg,f,c
  4744  00F988  E2FC               	bc	u2571
  4745  00F98A  0012               	return	
  4746  00F98C  0E11               	movlw	17
  4747  00F98E  6E01               	movwf	new_px_char@a,c
  4748  00F990  0EE1               	movlw	225
  4749  00F992  6E02               	movwf	new_px_char@a+1,c
  4750  00F994  0E03               	movlw	3
  4751  00F996  6E03               	movwf	new_px_char@a+2,c
  4752  00F998  0E00               	movlw	0
  4753  00F99A  6E04               	movwf	new_px_char@a+3,c
  4754  00F99C  0E00               	movlw	0
  4755  00F99E  6E05               	movwf	new_px_char@b,c
  4756  00F9A0  0E00               	movlw	0
  4757  00F9A2  6E06               	movwf	new_px_char@b+1,c
  4758  00F9A4  0EF0               	movlw	240
  4759  00F9A6  6E07               	movwf	new_px_char@b+2,c
  4760  00F9A8  0E11               	movlw	17
  4761  00F9AA  6E08               	movwf	new_px_char@b+3,c
  4762  00F9AC  ECFC  F06A         	call	_new_px_char	;wreg free
  4763  00F9B0  CFE9 FFD9          	movff	fsr0l,fsr2l
  4764  00F9B4  CFEA FFDA          	movff	fsr0h,fsr2h
  4765  00F9B8  EE00  F011         	lfsr	0,?_px_map
  4766  00F9BC  0E07               	movlw	7
  4767  00F9BE                     u2581:
  4768  00F9BE  CFDB FFEB          	movff	plusw2,plusw0
  4769  00F9C2  06E8               	decf	wreg,f,c
  4770  00F9C4  E2FC               	bc	u2581
  4771  00F9C6  0012               	return	
  4772  00F9C8  0E20               	movlw	32
  4773  00F9CA  6E01               	movwf	new_px_char@a,c
  4774  00F9CC  0E84               	movlw	132
  4775  00F9CE  6E02               	movwf	new_px_char@a+1,c
  4776  00F9D0  0E10               	movlw	16
  4777  00F9D2  6E03               	movwf	new_px_char@a+2,c
  4778  00F9D4  0E0C               	movlw	12
  4779  00F9D6  6E04               	movwf	new_px_char@a+3,c
  4780  00F9D8  0E00               	movlw	0
  4781  00F9DA  6E05               	movwf	new_px_char@b,c
  4782  00F9DC  0E13               	movlw	19
  4783  00F9DE  6E06               	movwf	new_px_char@b+1,c
  4784  00F9E0  0E42               	movlw	66
  4785  00F9E2  6E07               	movwf	new_px_char@b+2,c
  4786  00F9E4  0EC8               	movlw	200
  4787  00F9E6  6E08               	movwf	new_px_char@b+3,c
  4788  00F9E8  ECFC  F06A         	call	_new_px_char	;wreg free
  4789  00F9EC  CFE9 FFD9          	movff	fsr0l,fsr2l
  4790  00F9F0  CFEA FFDA          	movff	fsr0h,fsr2h
  4791  00F9F4  EE00  F011         	lfsr	0,?_px_map
  4792  00F9F8  0E07               	movlw	7
  4793  00F9FA                     u2591:
  4794  00F9FA  CFDB FFEB          	movff	plusw2,plusw0
  4795  00F9FE  06E8               	decf	wreg,f,c
  4796  00FA00  E2FC               	bc	u2591
  4797  00FA02  0012               	return	
  4798  00FA04  0E21               	movlw	33
  4799  00FA06  6E01               	movwf	new_px_char@a,c
  4800  00FA08  0E84               	movlw	132
  4801  00FA0A  6E02               	movwf	new_px_char@a+1,c
  4802  00FA0C  0E10               	movlw	16
  4803  00FA0E  6E03               	movwf	new_px_char@a+2,c
  4804  00FA10  0E00               	movlw	0
  4805  00FA12  6E04               	movwf	new_px_char@a+3,c
  4806  00FA14  0E00               	movlw	0
  4807  00FA16  6E05               	movwf	new_px_char@b,c
  4808  00FA18  0E10               	movlw	16
  4809  00FA1A  6E06               	movwf	new_px_char@b+1,c
  4810  00FA1C  0E42               	movlw	66
  4811  00FA1E  6E07               	movwf	new_px_char@b+2,c
  4812  00FA20  0E08               	movlw	8
  4813  00FA22  6E08               	movwf	new_px_char@b+3,c
  4814  00FA24  ECFC  F06A         	call	_new_px_char	;wreg free
  4815  00FA28  CFE9 FFD9          	movff	fsr0l,fsr2l
  4816  00FA2C  CFEA FFDA          	movff	fsr0h,fsr2h
  4817  00FA30  EE00  F011         	lfsr	0,?_px_map
  4818  00FA34  0E07               	movlw	7
  4819  00FA36                     u2601:
  4820  00FA36  CFDB FFEB          	movff	plusw2,plusw0
  4821  00FA3A  06E8               	decf	wreg,f,c
  4822  00FA3C  E2FC               	bc	u2601
  4823  00FA3E  0012               	return	
  4824  00FA40  0E26               	movlw	38
  4825  00FA42  6E01               	movwf	new_px_char@a,c
  4826  00FA44  0E84               	movlw	132
  4827  00FA46  6E02               	movwf	new_px_char@a+1,c
  4828  00FA48  0E90               	movlw	144
  4829  00FA4A  6E03               	movwf	new_px_char@a+2,c
  4830  00FA4C  0E01               	movlw	1
  4831  00FA4E  6E04               	movwf	new_px_char@a+3,c
  4832  00FA50  0E60               	movlw	96
  4833  00FA52  6E05               	movwf	new_px_char@b,c
  4834  00FA54  0E10               	movlw	16
  4835  00FA56  6E06               	movwf	new_px_char@b+1,c
  4836  00FA58  0E42               	movlw	66
  4837  00FA5A  6E07               	movwf	new_px_char@b+2,c
  4838  00FA5C  0E08               	movlw	8
  4839  00FA5E  6E08               	movwf	new_px_char@b+3,c
  4840  00FA60  ECFC  F06A         	call	_new_px_char	;wreg free
  4841  00FA64  CFE9 FFD9          	movff	fsr0l,fsr2l
  4842  00FA68  CFEA FFDA          	movff	fsr0h,fsr2h
  4843  00FA6C  EE00  F011         	lfsr	0,?_px_map
  4844  00FA70  0E07               	movlw	7
  4845  00FA72                     u2611:
  4846  00FA72  CFDB FFEB          	movff	plusw2,plusw0
  4847  00FA76  06E8               	decf	wreg,f,c
  4848  00FA78  E2FC               	bc	u2611
  4849  00FA7A  0012               	return	
  4850  00FA7C  0E00               	movlw	0
  4851  00FA7E  6E01               	movwf	new_px_char@a,c
  4852  00FA80  0E00               	movlw	0
  4853  00FA82  6E02               	movwf	new_px_char@a+1,c
  4854  00FA84  0E00               	movlw	0
  4855  00FA86  6E03               	movwf	new_px_char@a+2,c
  4856  00FA88  0E00               	movlw	0
  4857  00FA8A  6E04               	movwf	new_px_char@a+3,c
  4858  00FA8C  0E00               	movlw	0
  4859  00FA8E  6E05               	movwf	new_px_char@b,c
  4860  00FA90  0EC8               	movlw	200
  4861  00FA92  6E06               	movwf	new_px_char@b+1,c
  4862  00FA94  0E9A               	movlw	154
  4863  00FA96  6E07               	movwf	new_px_char@b+2,c
  4864  00FA98  0E00               	movlw	0
  4865  00FA9A  6E08               	movwf	new_px_char@b+3,c
  4866  00FA9C  ECFC  F06A         	call	_new_px_char	;wreg free
  4867  00FAA0  CFE9 FFD9          	movff	fsr0l,fsr2l
  4868  00FAA4  CFEA FFDA          	movff	fsr0h,fsr2h
  4869  00FAA8  EE00  F011         	lfsr	0,?_px_map
  4870  00FAAC  0E07               	movlw	7
  4871  00FAAE                     u2621:
  4872  00FAAE  CFDB FFEB          	movff	plusw2,plusw0
  4873  00FAB2  06E8               	decf	wreg,f,c
  4874  00FAB4  E2FC               	bc	u2621
  4875  00FAB6  0012               	return	
  4876  00FAB8  0E00               	movlw	0
  4877  00FABA  6E01               	movwf	new_px_char@a,c
  4878  00FABC  0E00               	movlw	0
  4879  00FABE  6E02               	movwf	new_px_char@a+1,c
  4880  00FAC0  0E00               	movlw	0
  4881  00FAC2  6E03               	movwf	new_px_char@a+2,c
  4882  00FAC4  0E00               	movlw	0
  4883  00FAC6  6E04               	movwf	new_px_char@a+3,c
  4884  00FAC8  0E00               	movlw	0
  4885  00FACA  6E05               	movwf	new_px_char@b,c
  4886  00FACC  0E00               	movlw	0
  4887  00FACE  6E06               	movwf	new_px_char@b+1,c
  4888  00FAD0  0E00               	movlw	0
  4889  00FAD2  6E07               	movwf	new_px_char@b+2,c
  4890  00FAD4  0E00               	movlw	0
  4891  00FAD6  6E08               	movwf	new_px_char@b+3,c
  4892  00FAD8  ECFC  F06A         	call	_new_px_char	;wreg free
  4893  00FADC  CFE9 FFD9          	movff	fsr0l,fsr2l
  4894  00FAE0  CFEA FFDA          	movff	fsr0h,fsr2h
  4895  00FAE4  EE00  F011         	lfsr	0,?_px_map
  4896  00FAE8  0E07               	movlw	7
  4897  00FAEA                     u2631:
  4898  00FAEA  CFDB FFEB          	movff	plusw2,plusw0
  4899  00FAEE  06E8               	decf	wreg,f,c
  4900  00FAF0  E2FC               	bc	u2631
  4901                           
  4902                           ;px_ascii.c: 118: }
  4903  00FAF2  0012               	return	
  4904  00FAF4                     l347:
  4905  00FAF4  501A               	movf	px_map@c,w,c
  4906                           
  4907                           ; Switch size 1, requested type "space"
  4908                           ; Number of cases is 95, Range of values is 32 to 126
  4909                           ; switch strategies available:
  4910                           ; Name         Instructions Cycles
  4911                           ; simple_byte          286   144 (average)
  4912                           ;	Chosen strategy is simple_byte
  4913  00FAF6  0A20               	xorlw	32	; case 32
  4914  00FAF8  B4D8               	btfsc	status,2,c
  4915  00FAFA  EF3A  F072         	goto	l348
  4916  00FAFE  0A01               	xorlw	1	; case 33
  4917  00FB00  B4D8               	btfsc	status,2,c
  4918  00FB02  EF58  F072         	goto	l350
  4919  00FB06  0A03               	xorlw	3	; case 34
  4920  00FB08  B4D8               	btfsc	status,2,c
  4921  00FB0A  EF76  F072         	goto	l351
  4922  00FB0E  0A01               	xorlw	1	; case 35
  4923  00FB10  B4D8               	btfsc	status,2,c
  4924  00FB12  EF94  F072         	goto	l352
  4925  00FB16  0A07               	xorlw	7	; case 36
  4926  00FB18  B4D8               	btfsc	status,2,c
  4927  00FB1A  EFB2  F072         	goto	l353
  4928  00FB1E  0A01               	xorlw	1	; case 37
  4929  00FB20  B4D8               	btfsc	status,2,c
  4930  00FB22  EFD0  F072         	goto	l354
  4931  00FB26  0A03               	xorlw	3	; case 38
  4932  00FB28  B4D8               	btfsc	status,2,c
  4933  00FB2A  EFEE  F072         	goto	l355
  4934  00FB2E  0A01               	xorlw	1	; case 39
  4935  00FB30  B4D8               	btfsc	status,2,c
  4936  00FB32  EF0C  F073         	goto	l356
  4937  00FB36  0A0F               	xorlw	15	; case 40
  4938  00FB38  B4D8               	btfsc	status,2,c
  4939  00FB3A  EF2A  F073         	goto	l357
  4940  00FB3E  0A01               	xorlw	1	; case 41
  4941  00FB40  B4D8               	btfsc	status,2,c
  4942  00FB42  EF48  F073         	goto	l358
  4943  00FB46  0A03               	xorlw	3	; case 42
  4944  00FB48  B4D8               	btfsc	status,2,c
  4945  00FB4A  EF66  F073         	goto	l359
  4946  00FB4E  0A01               	xorlw	1	; case 43
  4947  00FB50  B4D8               	btfsc	status,2,c
  4948  00FB52  EF84  F073         	goto	l360
  4949  00FB56  0A07               	xorlw	7	; case 44
  4950  00FB58  B4D8               	btfsc	status,2,c
  4951  00FB5A  EFA2  F073         	goto	l361
  4952  00FB5E  0A01               	xorlw	1	; case 45
  4953  00FB60  B4D8               	btfsc	status,2,c
  4954  00FB62  EFC0  F073         	goto	l362
  4955  00FB66  0A03               	xorlw	3	; case 46
  4956  00FB68  B4D8               	btfsc	status,2,c
  4957  00FB6A  EFDE  F073         	goto	l363
  4958  00FB6E  0A01               	xorlw	1	; case 47
  4959  00FB70  B4D8               	btfsc	status,2,c
  4960  00FB72  EFFC  F073         	goto	l364
  4961  00FB76  0A1F               	xorlw	31	; case 48
  4962  00FB78  B4D8               	btfsc	status,2,c
  4963  00FB7A  EF1A  F074         	goto	l365
  4964  00FB7E  0A01               	xorlw	1	; case 49
  4965  00FB80  B4D8               	btfsc	status,2,c
  4966  00FB82  EF38  F074         	goto	l366
  4967  00FB86  0A03               	xorlw	3	; case 50
  4968  00FB88  B4D8               	btfsc	status,2,c
  4969  00FB8A  EF56  F074         	goto	l367
  4970  00FB8E  0A01               	xorlw	1	; case 51
  4971  00FB90  B4D8               	btfsc	status,2,c
  4972  00FB92  EF74  F074         	goto	l368
  4973  00FB96  0A07               	xorlw	7	; case 52
  4974  00FB98  B4D8               	btfsc	status,2,c
  4975  00FB9A  EF92  F074         	goto	l369
  4976  00FB9E  0A01               	xorlw	1	; case 53
  4977  00FBA0  B4D8               	btfsc	status,2,c
  4978  00FBA2  EFB0  F074         	goto	l370
  4979  00FBA6  0A03               	xorlw	3	; case 54
  4980  00FBA8  B4D8               	btfsc	status,2,c
  4981  00FBAA  EFCE  F074         	goto	l371
  4982  00FBAE  0A01               	xorlw	1	; case 55
  4983  00FBB0  B4D8               	btfsc	status,2,c
  4984  00FBB2  EFEC  F074         	goto	l372
  4985  00FBB6  0A0F               	xorlw	15	; case 56
  4986  00FBB8  B4D8               	btfsc	status,2,c
  4987  00FBBA  EF0A  F075         	goto	l373
  4988  00FBBE  0A01               	xorlw	1	; case 57
  4989  00FBC0  B4D8               	btfsc	status,2,c
  4990  00FBC2  EF28  F075         	goto	l374
  4991  00FBC6  0A03               	xorlw	3	; case 58
  4992  00FBC8  B4D8               	btfsc	status,2,c
  4993  00FBCA  EF46  F075         	goto	l375
  4994  00FBCE  0A01               	xorlw	1	; case 59
  4995  00FBD0  B4D8               	btfsc	status,2,c
  4996  00FBD2  EF64  F075         	goto	l376
  4997  00FBD6  0A07               	xorlw	7	; case 60
  4998  00FBD8  B4D8               	btfsc	status,2,c
  4999  00FBDA  EF82  F075         	goto	l377
  5000  00FBDE  0A01               	xorlw	1	; case 61
  5001  00FBE0  B4D8               	btfsc	status,2,c
  5002  00FBE2  EFA0  F075         	goto	l378
  5003  00FBE6  0A03               	xorlw	3	; case 62
  5004  00FBE8  B4D8               	btfsc	status,2,c
  5005  00FBEA  EFBE  F075         	goto	l379
  5006  00FBEE  0A01               	xorlw	1	; case 63
  5007  00FBF0  B4D8               	btfsc	status,2,c
  5008  00FBF2  EFDC  F075         	goto	l380
  5009  00FBF6  0A7F               	xorlw	127	; case 64
  5010  00FBF8  B4D8               	btfsc	status,2,c
  5011  00FBFA  EFFA  F075         	goto	l381
  5012  00FBFE  0A01               	xorlw	1	; case 65
  5013  00FC00  B4D8               	btfsc	status,2,c
  5014  00FC02  EF18  F076         	goto	l382
  5015  00FC06  0A03               	xorlw	3	; case 66
  5016  00FC08  B4D8               	btfsc	status,2,c
  5017  00FC0A  EF36  F076         	goto	l383
  5018  00FC0E  0A01               	xorlw	1	; case 67
  5019  00FC10  B4D8               	btfsc	status,2,c
  5020  00FC12  EF54  F076         	goto	l384
  5021  00FC16  0A07               	xorlw	7	; case 68
  5022  00FC18  B4D8               	btfsc	status,2,c
  5023  00FC1A  EF72  F076         	goto	l385
  5024  00FC1E  0A01               	xorlw	1	; case 69
  5025  00FC20  B4D8               	btfsc	status,2,c
  5026  00FC22  EF90  F076         	goto	l386
  5027  00FC26  0A03               	xorlw	3	; case 70
  5028  00FC28  B4D8               	btfsc	status,2,c
  5029  00FC2A  EFAE  F076         	goto	l387
  5030  00FC2E  0A01               	xorlw	1	; case 71
  5031  00FC30  B4D8               	btfsc	status,2,c
  5032  00FC32  EFCC  F076         	goto	l388
  5033  00FC36  0A0F               	xorlw	15	; case 72
  5034  00FC38  B4D8               	btfsc	status,2,c
  5035  00FC3A  EFEA  F076         	goto	l389
  5036  00FC3E  0A01               	xorlw	1	; case 73
  5037  00FC40  B4D8               	btfsc	status,2,c
  5038  00FC42  EF08  F077         	goto	l390
  5039  00FC46  0A03               	xorlw	3	; case 74
  5040  00FC48  B4D8               	btfsc	status,2,c
  5041  00FC4A  EF26  F077         	goto	l391
  5042  00FC4E  0A01               	xorlw	1	; case 75
  5043  00FC50  B4D8               	btfsc	status,2,c
  5044  00FC52  EF44  F077         	goto	l392
  5045  00FC56  0A07               	xorlw	7	; case 76
  5046  00FC58  B4D8               	btfsc	status,2,c
  5047  00FC5A  EF62  F077         	goto	l393
  5048  00FC5E  0A01               	xorlw	1	; case 77
  5049  00FC60  B4D8               	btfsc	status,2,c
  5050  00FC62  EF80  F077         	goto	l394
  5051  00FC66  0A03               	xorlw	3	; case 78
  5052  00FC68  B4D8               	btfsc	status,2,c
  5053  00FC6A  EF9E  F077         	goto	l395
  5054  00FC6E  0A01               	xorlw	1	; case 79
  5055  00FC70  B4D8               	btfsc	status,2,c
  5056  00FC72  EFBC  F077         	goto	l396
  5057  00FC76  0A1F               	xorlw	31	; case 80
  5058  00FC78  B4D8               	btfsc	status,2,c
  5059  00FC7A  EFDA  F077         	goto	l397
  5060  00FC7E  0A01               	xorlw	1	; case 81
  5061  00FC80  B4D8               	btfsc	status,2,c
  5062  00FC82  EFF8  F077         	goto	l398
  5063  00FC86  0A03               	xorlw	3	; case 82
  5064  00FC88  B4D8               	btfsc	status,2,c
  5065  00FC8A  EF16  F078         	goto	l399
  5066  00FC8E  0A01               	xorlw	1	; case 83
  5067  00FC90  B4D8               	btfsc	status,2,c
  5068  00FC92  EF34  F078         	goto	l400
  5069  00FC96  0A07               	xorlw	7	; case 84
  5070  00FC98  B4D8               	btfsc	status,2,c
  5071  00FC9A  EF52  F078         	goto	l401
  5072  00FC9E  0A01               	xorlw	1	; case 85
  5073  00FCA0  B4D8               	btfsc	status,2,c
  5074  00FCA2  EF70  F078         	goto	l402
  5075  00FCA6  0A03               	xorlw	3	; case 86
  5076  00FCA8  B4D8               	btfsc	status,2,c
  5077  00FCAA  EF8E  F078         	goto	l403
  5078  00FCAE  0A01               	xorlw	1	; case 87
  5079  00FCB0  B4D8               	btfsc	status,2,c
  5080  00FCB2  EFAC  F078         	goto	l404
  5081  00FCB6  0A0F               	xorlw	15	; case 88
  5082  00FCB8  B4D8               	btfsc	status,2,c
  5083  00FCBA  EFCA  F078         	goto	l405
  5084  00FCBE  0A01               	xorlw	1	; case 89
  5085  00FCC0  B4D8               	btfsc	status,2,c
  5086  00FCC2  EFE8  F078         	goto	l406
  5087  00FCC6  0A03               	xorlw	3	; case 90
  5088  00FCC8  B4D8               	btfsc	status,2,c
  5089  00FCCA  EF06  F079         	goto	l407
  5090  00FCCE  0A01               	xorlw	1	; case 91
  5091  00FCD0  B4D8               	btfsc	status,2,c
  5092  00FCD2  EF24  F079         	goto	l408
  5093  00FCD6  0A07               	xorlw	7	; case 92
  5094  00FCD8  B4D8               	btfsc	status,2,c
  5095  00FCDA  EF42  F079         	goto	l409
  5096  00FCDE  0A01               	xorlw	1	; case 93
  5097  00FCE0  B4D8               	btfsc	status,2,c
  5098  00FCE2  EF60  F079         	goto	l410
  5099  00FCE6  0A03               	xorlw	3	; case 94
  5100  00FCE8  B4D8               	btfsc	status,2,c
  5101  00FCEA  EF7E  F079         	goto	l411
  5102  00FCEE  0A01               	xorlw	1	; case 95
  5103  00FCF0  B4D8               	btfsc	status,2,c
  5104  00FCF2  EF9C  F079         	goto	l412
  5105  00FCF6  0A3F               	xorlw	63	; case 96
  5106  00FCF8  B4D8               	btfsc	status,2,c
  5107  00FCFA  EFBA  F079         	goto	l413
  5108  00FCFE  0A01               	xorlw	1	; case 97
  5109  00FD00  B4D8               	btfsc	status,2,c
  5110  00FD02  EFD8  F079         	goto	l414
  5111  00FD06  0A03               	xorlw	3	; case 98
  5112  00FD08  B4D8               	btfsc	status,2,c
  5113  00FD0A  EFF6  F079         	goto	l415
  5114  00FD0E  0A01               	xorlw	1	; case 99
  5115  00FD10  B4D8               	btfsc	status,2,c
  5116  00FD12  EF14  F07A         	goto	l416
  5117  00FD16  0A07               	xorlw	7	; case 100
  5118  00FD18  B4D8               	btfsc	status,2,c
  5119  00FD1A  EF32  F07A         	goto	l417
  5120  00FD1E  0A01               	xorlw	1	; case 101
  5121  00FD20  B4D8               	btfsc	status,2,c
  5122  00FD22  EF50  F07A         	goto	l418
  5123  00FD26  0A03               	xorlw	3	; case 102
  5124  00FD28  B4D8               	btfsc	status,2,c
  5125  00FD2A  EF6E  F07A         	goto	l419
  5126  00FD2E  0A01               	xorlw	1	; case 103
  5127  00FD30  B4D8               	btfsc	status,2,c
  5128  00FD32  EF8C  F07A         	goto	l420
  5129  00FD36  0A0F               	xorlw	15	; case 104
  5130  00FD38  B4D8               	btfsc	status,2,c
  5131  00FD3A  D40C               	goto	l421
  5132  00FD3C  0A01               	xorlw	1	; case 105
  5133  00FD3E  B4D8               	btfsc	status,2,c
  5134  00FD40  D427               	goto	l422
  5135  00FD42  0A03               	xorlw	3	; case 106
  5136  00FD44  B4D8               	btfsc	status,2,c
  5137  00FD46  D442               	goto	l423
  5138  00FD48  0A01               	xorlw	1	; case 107
  5139  00FD4A  B4D8               	btfsc	status,2,c
  5140  00FD4C  D45D               	goto	l424
  5141  00FD4E  0A07               	xorlw	7	; case 108
  5142  00FD50  B4D8               	btfsc	status,2,c
  5143  00FD52  D478               	goto	l425
  5144  00FD54  0A01               	xorlw	1	; case 109
  5145  00FD56  B4D8               	btfsc	status,2,c
  5146  00FD58  D493               	goto	l426
  5147  00FD5A  0A03               	xorlw	3	; case 110
  5148  00FD5C  B4D8               	btfsc	status,2,c
  5149  00FD5E  D4AE               	goto	l427
  5150  00FD60  0A01               	xorlw	1	; case 111
  5151  00FD62  B4D8               	btfsc	status,2,c
  5152  00FD64  D4C9               	goto	l428
  5153  00FD66  0A1F               	xorlw	31	; case 112
  5154  00FD68  B4D8               	btfsc	status,2,c
  5155  00FD6A  D4E4               	goto	l429
  5156  00FD6C  0A01               	xorlw	1	; case 113
  5157  00FD6E  B4D8               	btfsc	status,2,c
  5158  00FD70  D4FF               	goto	l430
  5159  00FD72  0A03               	xorlw	3	; case 114
  5160  00FD74  B4D8               	btfsc	status,2,c
  5161  00FD76  D51A               	goto	l431
  5162  00FD78  0A01               	xorlw	1	; case 115
  5163  00FD7A  B4D8               	btfsc	status,2,c
  5164  00FD7C  D535               	goto	l432
  5165  00FD7E  0A07               	xorlw	7	; case 116
  5166  00FD80  B4D8               	btfsc	status,2,c
  5167  00FD82  D550               	goto	l433
  5168  00FD84  0A01               	xorlw	1	; case 117
  5169  00FD86  B4D8               	btfsc	status,2,c
  5170  00FD88  D56B               	goto	l434
  5171  00FD8A  0A03               	xorlw	3	; case 118
  5172  00FD8C  B4D8               	btfsc	status,2,c
  5173  00FD8E  D586               	goto	l435
  5174  00FD90  0A01               	xorlw	1	; case 119
  5175  00FD92  B4D8               	btfsc	status,2,c
  5176  00FD94  D5A1               	goto	l436
  5177  00FD96  0A0F               	xorlw	15	; case 120
  5178  00FD98  B4D8               	btfsc	status,2,c
  5179  00FD9A  D5BC               	goto	l437
  5180  00FD9C  0A01               	xorlw	1	; case 121
  5181  00FD9E  B4D8               	btfsc	status,2,c
  5182  00FDA0  D5D7               	goto	l438
  5183  00FDA2  0A03               	xorlw	3	; case 122
  5184  00FDA4  B4D8               	btfsc	status,2,c
  5185  00FDA6  D5F2               	goto	l439
  5186  00FDA8  0A01               	xorlw	1	; case 123
  5187  00FDAA  B4D8               	btfsc	status,2,c
  5188  00FDAC  D60D               	goto	l440
  5189  00FDAE  0A07               	xorlw	7	; case 124
  5190  00FDB0  B4D8               	btfsc	status,2,c
  5191  00FDB2  D628               	goto	l441
  5192  00FDB4  0A01               	xorlw	1	; case 125
  5193  00FDB6  B4D8               	btfsc	status,2,c
  5194  00FDB8  D643               	goto	l442
  5195  00FDBA  0A03               	xorlw	3	; case 126
  5196  00FDBC  B4D8               	btfsc	status,2,c
  5197  00FDBE  D65E               	goto	l443
  5198  00FDC0  D67B               	goto	l444
  5199  00FDC2                     __end_of_px_map:
  5200                           	opt stack 0
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodl	equ	0xFF3
  5206                           indf0	equ	0xFEF
  5207                           postinc0	equ	0xFEE
  5208                           plusw0	equ	0xFEB
  5209                           fsr0h	equ	0xFEA
  5210                           fsr0l	equ	0xFE9
  5211                           wreg	equ	0xFE8
  5212                           postdec1	equ	0xFE5
  5213                           plusw1	equ	0xFE3
  5214                           fsr1l	equ	0xFE1
  5215                           plusw2	equ	0xFDB
  5216                           fsr2h	equ	0xFDA
  5217                           fsr2l	equ	0xFD9
  5218                           status	equ	0xFD8
  5219                           
  5220 ;; *************** function _new_px_char *****************
  5221 ;; Defined at:
  5222 ;;		line 12 in file "px_ascii.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  a               4    0[COMRAM] unsigned long 
  5225 ;;  b               4    4[COMRAM] unsigned long 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  p               8    8[COMRAM] struct .
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  8    0[COMRAM] struct .
  5230 ;; Registers used:
  5231 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5237 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;Total ram usage:       16 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_px_map
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text4
  5251  00D5F8                     __ptext4:
  5252                           	opt stack 0
  5253  00D5F8                     _new_px_char:
  5254                           	opt stack 27
  5255                           
  5256                           ;px_ascii.c: 13: px_char p;
  5257                           ;px_ascii.c: 14: p.part[1] = a;
  5258                           
  5259                           ;incstack = 0
  5260  00D5F8  C001  F00D         	movff	new_px_char@a,new_px_char@p+4
  5261  00D5FC  C002  F00E         	movff	new_px_char@a+1,new_px_char@p+5
  5262  00D600  C003  F00F         	movff	new_px_char@a+2,new_px_char@p+6
  5263  00D604  C004  F010         	movff	new_px_char@a+3,new_px_char@p+7
  5264                           
  5265                           ;px_ascii.c: 15: p.part[0] = b;
  5266  00D608  C005  F009         	movff	new_px_char@b,new_px_char@p
  5267  00D60C  C006  F00A         	movff	new_px_char@b+1,new_px_char@p+1
  5268  00D610  C007  F00B         	movff	new_px_char@b+2,new_px_char@p+2
  5269  00D614  C008  F00C         	movff	new_px_char@b+3,new_px_char@p+3
  5270                           
  5271                           ;px_ascii.c: 16: return p;
  5272  00D618  EE20  F009         	lfsr	2,new_px_char@p
  5273  00D61C  EE00  F001         	lfsr	0,?_new_px_char
  5274  00D620  0E07               	movlw	7
  5275  00D622                     u1511:
  5276  00D622  CFDB FFEB          	movff	plusw2,plusw0
  5277  00D626  06E8               	decf	wreg,f,c
  5278  00D628  E2FC               	bc	u1511
  5279  00D62A  0012               	return	
  5280  00D62C                     __end_of_new_px_char:
  5281                           	opt stack 0
  5282                           tblptru	equ	0xFF8
  5283                           tblptrh	equ	0xFF7
  5284                           tblptrl	equ	0xFF6
  5285                           tablat	equ	0xFF5
  5286                           prodl	equ	0xFF3
  5287                           indf0	equ	0xFEF
  5288                           postinc0	equ	0xFEE
  5289                           plusw0	equ	0xFEB
  5290                           fsr0h	equ	0xFEA
  5291                           fsr0l	equ	0xFE9
  5292                           wreg	equ	0xFE8
  5293                           postdec1	equ	0xFE5
  5294                           plusw1	equ	0xFE3
  5295                           fsr1l	equ	0xFE1
  5296                           plusw2	equ	0xFDB
  5297                           fsr2h	equ	0xFDA
  5298                           fsr2l	equ	0xFD9
  5299                           status	equ	0xFD8
  5300                           
  5301 ;; *************** function _draw_px_char *****************
  5302 ;; Defined at:
  5303 ;;		line 61 in file "main.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  x               2   32[COMRAM] int 
  5306 ;;  y               2   34[COMRAM] int 
  5307 ;;  p               8   36[COMRAM] struct .
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  i               2   52[COMRAM] int 
  5310 ;;  m               4   48[COMRAM] unsigned long 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5320 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;Total ram usage:       22 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    5
  5327 ;; This function calls:
  5328 ;;		___awdiv
  5329 ;;		___awmod
  5330 ;;		_glcdDrawPixel
  5331 ;; This function is called by:
  5332 ;;		_print_px_char
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text5
  5337  00D8BE                     __ptext5:
  5338                           	opt stack 0
  5339  00D8BE                     _draw_px_char:
  5340                           	opt stack 23
  5341                           
  5342                           ;main.c: 62: uint32_t m = 0b1;
  5343                           
  5344                           ;incstack = 0
  5345  00D8BE  0E01               	movlw	1
  5346  00D8C0  6E31               	movwf	draw_px_char@m,c
  5347  00D8C2  0E00               	movlw	0
  5348  00D8C4  6E32               	movwf	draw_px_char@m+1,c
  5349  00D8C6  0E00               	movlw	0
  5350  00D8C8  6E33               	movwf	draw_px_char@m+2,c
  5351  00D8CA  0E00               	movlw	0
  5352  00D8CC  6E34               	movwf	draw_px_char@m+3,c
  5353                           
  5354                           ;main.c: 63: for(int i = 0; i < 32; i++) {
  5355  00D8CE  0E00               	movlw	0
  5356  00D8D0  6E36               	movwf	draw_px_char@i+1,c
  5357  00D8D2  0E00               	movlw	0
  5358  00D8D4  6E35               	movwf	draw_px_char@i,c
  5359  00D8D6  BE36               	btfsc	draw_px_char@i+1,7,c
  5360  00D8D8  D008               	goto	l132
  5361  00D8DA  5036               	movf	draw_px_char@i+1,w,c
  5362  00D8DC  E105               	bnz	u1640
  5363  00D8DE  0E20               	movlw	32
  5364  00D8E0  5C35               	subwf	draw_px_char@i,w,c
  5365  00D8E2  B0D8               	btfsc	status,0,c
  5366  00D8E4  0012               	return	
  5367  00D8E6  D001               	goto	l132
  5368  00D8E8                     u1640:
  5369  00D8E8  0012               	return	
  5370  00D8EA                     l132:
  5371                           
  5372                           ;main.c: 64: if(m & p.part[0]) glcdDrawPixel(x+i%5, y+i/5, BLACK);
  5373  00D8EA  5031               	movf	draw_px_char@m,w,c
  5374  00D8EC  1425               	andwf	draw_px_char@p,w,c
  5375  00D8EE  6E2D               	movwf	??_draw_px_char& (0+255),c
  5376  00D8F0  5032               	movf	draw_px_char@m+1,w,c
  5377  00D8F2  1426               	andwf	draw_px_char@p+1,w,c
  5378  00D8F4  6E2E               	movwf	(??_draw_px_char+1)& (0+255),c
  5379  00D8F6  5033               	movf	draw_px_char@m+2,w,c
  5380  00D8F8  1427               	andwf	draw_px_char@p+2,w,c
  5381  00D8FA  6E2F               	movwf	(??_draw_px_char+2)& (0+255),c
  5382  00D8FC  5034               	movf	draw_px_char@m+3,w,c
  5383  00D8FE  1428               	andwf	draw_px_char@p+3,w,c
  5384  00D900  6E30               	movwf	(??_draw_px_char+3)& (0+255),c
  5385  00D902  502D               	movf	??_draw_px_char,w,c
  5386  00D904  102E               	iorwf	??_draw_px_char+1,w,c
  5387  00D906  102F               	iorwf	??_draw_px_char+2,w,c
  5388  00D908  1030               	iorwf	??_draw_px_char+3,w,c
  5389  00D90A  B4D8               	btfsc	status,2,c
  5390  00D90C  D02B               	goto	l134
  5391  00D90E  C035  F007         	movff	draw_px_char@i,___awdiv@dividend
  5392  00D912  C036  F008         	movff	draw_px_char@i+1,___awdiv@dividend+1
  5393  00D916  0E00               	movlw	0
  5394  00D918  6E0A               	movwf	___awdiv@divisor+1,c
  5395  00D91A  0E05               	movlw	5
  5396  00D91C  6E09               	movwf	___awdiv@divisor,c
  5397  00D91E  ECC9  F06B         	call	___awdiv	;wreg free
  5398  00D922  5007               	movf	?___awdiv,w,c
  5399  00D924  2423               	addwf	draw_px_char@y,w,c
  5400  00D926  6E1A               	movwf	glcdDrawPixel@YS,c
  5401  00D928  0EA0               	movlw	low _BLACK
  5402  00D92A  6EF6               	movwf	tblptrl,c
  5403  00D92C                     	if	1	;There is more than 1 active tblptr byte
  5404  00D92C  0EFF               	movlw	high _BLACK
  5405  00D92E  6EF7               	movwf	tblptrh,c
  5406  00D930                     	endif
  5407  00D930                     	if	0	;There are less than 3 active tblptr bytes
  5408  00D930                     	endif
  5409  00D930  0009               	tblrd		*+
  5410  00D932  CFF5 F01B          	movff	tablat,glcdDrawPixel@color
  5411  00D936  0009               	tblrd		*+
  5412  00D938  CFF5 F01C          	movff	tablat,glcdDrawPixel@color+1
  5413  00D93C  0009               	tblrd		*+
  5414  00D93E  CFF5 F01D          	movff	tablat,glcdDrawPixel@color+2
  5415  00D942  000A               	tblrd		*-
  5416  00D944  CFF5 F01E          	movff	tablat,glcdDrawPixel@color+3
  5417  00D948  C035  F001         	movff	draw_px_char@i,___awmod@dividend
  5418  00D94C  C036  F002         	movff	draw_px_char@i+1,___awmod@dividend+1
  5419  00D950  0E00               	movlw	0
  5420  00D952  6E04               	movwf	___awmod@divisor+1,c
  5421  00D954  0E05               	movlw	5
  5422  00D956  6E03               	movwf	___awmod@divisor,c
  5423  00D958  EC91  F06B         	call	___awmod	;wreg free
  5424  00D95C  5001               	movf	?___awmod,w,c
  5425  00D95E  2421               	addwf	draw_px_char@x,w,c
  5426  00D960  EC5A  F06B         	call	_glcdDrawPixel
  5427  00D964                     l134:
  5428                           
  5429                           ;main.c: 65: if(m & p.part[1]) glcdDrawPixel(x+(i+32)%5, y+(i+32)/5, BLACK);
  5430  00D964  5031               	movf	draw_px_char@m,w,c
  5431  00D966  1429               	andwf	draw_px_char@p+4,w,c
  5432  00D968  6E2D               	movwf	??_draw_px_char& (0+255),c
  5433  00D96A  5032               	movf	draw_px_char@m+1,w,c
  5434  00D96C  142A               	andwf	draw_px_char@p+5,w,c
  5435  00D96E  6E2E               	movwf	(??_draw_px_char+1)& (0+255),c
  5436  00D970  5033               	movf	draw_px_char@m+2,w,c
  5437  00D972  142B               	andwf	draw_px_char@p+6,w,c
  5438  00D974  6E2F               	movwf	(??_draw_px_char+2)& (0+255),c
  5439  00D976  5034               	movf	draw_px_char@m+3,w,c
  5440  00D978  142C               	andwf	draw_px_char@p+7,w,c
  5441  00D97A  6E30               	movwf	(??_draw_px_char+3)& (0+255),c
  5442  00D97C  502D               	movf	??_draw_px_char,w,c
  5443  00D97E  102E               	iorwf	??_draw_px_char+1,w,c
  5444  00D980  102F               	iorwf	??_draw_px_char+2,w,c
  5445  00D982  1030               	iorwf	??_draw_px_char+3,w,c
  5446  00D984  B4D8               	btfsc	status,2,c
  5447  00D986  D02F               	goto	l135
  5448  00D988  0E20               	movlw	32
  5449  00D98A  2435               	addwf	draw_px_char@i,w,c
  5450  00D98C  6E07               	movwf	___awdiv@dividend,c
  5451  00D98E  0E00               	movlw	0
  5452  00D990  2036               	addwfc	draw_px_char@i+1,w,c
  5453  00D992  6E08               	movwf	___awdiv@dividend+1,c
  5454  00D994  0E00               	movlw	0
  5455  00D996  6E0A               	movwf	___awdiv@divisor+1,c
  5456  00D998  0E05               	movlw	5
  5457  00D99A  6E09               	movwf	___awdiv@divisor,c
  5458  00D99C  ECC9  F06B         	call	___awdiv	;wreg free
  5459  00D9A0  5007               	movf	?___awdiv,w,c
  5460  00D9A2  2423               	addwf	draw_px_char@y,w,c
  5461  00D9A4  6E1A               	movwf	glcdDrawPixel@YS,c
  5462  00D9A6  0EA0               	movlw	low _BLACK
  5463  00D9A8  6EF6               	movwf	tblptrl,c
  5464  00D9AA                     	if	1	;There is more than 1 active tblptr byte
  5465  00D9AA  0EFF               	movlw	high _BLACK
  5466  00D9AC  6EF7               	movwf	tblptrh,c
  5467  00D9AE                     	endif
  5468  00D9AE                     	if	0	;There are less than 3 active tblptr bytes
  5469  00D9AE                     	endif
  5470  00D9AE  0009               	tblrd		*+
  5471  00D9B0  CFF5 F01B          	movff	tablat,glcdDrawPixel@color
  5472  00D9B4  0009               	tblrd		*+
  5473  00D9B6  CFF5 F01C          	movff	tablat,glcdDrawPixel@color+1
  5474  00D9BA  0009               	tblrd		*+
  5475  00D9BC  CFF5 F01D          	movff	tablat,glcdDrawPixel@color+2
  5476  00D9C0  000A               	tblrd		*-
  5477  00D9C2  CFF5 F01E          	movff	tablat,glcdDrawPixel@color+3
  5478  00D9C6  0E20               	movlw	32
  5479  00D9C8  2435               	addwf	draw_px_char@i,w,c
  5480  00D9CA  6E01               	movwf	___awmod@dividend,c
  5481  00D9CC  0E00               	movlw	0
  5482  00D9CE  2036               	addwfc	draw_px_char@i+1,w,c
  5483  00D9D0  6E02               	movwf	___awmod@dividend+1,c
  5484  00D9D2  0E00               	movlw	0
  5485  00D9D4  6E04               	movwf	___awmod@divisor+1,c
  5486  00D9D6  0E05               	movlw	5
  5487  00D9D8  6E03               	movwf	___awmod@divisor,c
  5488  00D9DA  EC91  F06B         	call	___awmod	;wreg free
  5489  00D9DE  5001               	movf	?___awmod,w,c
  5490  00D9E0  2421               	addwf	draw_px_char@x,w,c
  5491  00D9E2  EC5A  F06B         	call	_glcdDrawPixel
  5492  00D9E6                     l135:
  5493                           
  5494                           ;main.c: 67: m <<= 1;
  5495  00D9E6  90D8               	bcf	status,0,c
  5496  00D9E8  3631               	rlcf	draw_px_char@m,f,c
  5497  00D9EA  3632               	rlcf	draw_px_char@m+1,f,c
  5498  00D9EC  3633               	rlcf	draw_px_char@m+2,f,c
  5499  00D9EE  3634               	rlcf	draw_px_char@m+3,f,c
  5500  00D9F0  4A35               	infsnz	draw_px_char@i,f,c
  5501  00D9F2  2A36               	incf	draw_px_char@i+1,f,c
  5502  00D9F4  BE36               	btfsc	draw_px_char@i+1,7,c
  5503  00D9F6  D779               	goto	l132
  5504  00D9F8  5036               	movf	draw_px_char@i+1,w,c
  5505  00D9FA  E101               	bnz	l136
  5506  00D9FC  D770               	goto	L3
  5507  00D9FE                     l136:
  5508  00D9FE  0012               	return		;funcret
  5509  00DA00                     __end_of_draw_px_char:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           prodl	equ	0xFF3
  5516                           indf0	equ	0xFEF
  5517                           postinc0	equ	0xFEE
  5518                           plusw0	equ	0xFEB
  5519                           fsr0h	equ	0xFEA
  5520                           fsr0l	equ	0xFE9
  5521                           wreg	equ	0xFE8
  5522                           postdec1	equ	0xFE5
  5523                           plusw1	equ	0xFE3
  5524                           fsr1l	equ	0xFE1
  5525                           plusw2	equ	0xFDB
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8
  5529                           
  5530 ;; *************** function _glcdDrawPixel *****************
  5531 ;; Defined at:
  5532 ;;		line 147 in file "GLCD_PIC_V1.1.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  XS              1    wreg     unsigned char 
  5535 ;;  YS              1   25[COMRAM] unsigned char 
  5536 ;;  color           4   26[COMRAM] unsigned long 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  XS              1   31[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5548 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;Total ram usage:        7 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    4
  5555 ;; This function calls:
  5556 ;;		_glcdDrawRectangle
  5557 ;; This function is called by:
  5558 ;;		_draw_px_char
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text6
  5563  00D6B4                     __ptext6:
  5564                           	opt stack 0
  5565  00D6B4                     _glcdDrawPixel:
  5566                           	opt stack 23
  5567                           
  5568                           ;incstack = 0
  5569                           ;glcdDrawPixel@XS stored from wreg
  5570  00D6B4  6E20               	movwf	glcdDrawPixel@XS,c
  5571                           
  5572                           ;GLCD_PIC_V1.1.c: 160: if(XS >= GLCD_SIZE_HORZ){ XS = GLCD_SIZE_HORZ - 1; }
  5573  00D6B6  0EE5               	movlw	low _GLCD_SIZE_HORZ
  5574  00D6B8  6EF6               	movwf	tblptrl,c
  5575  00D6BA                     	if	1	;There is more than 1 active tblptr byte
  5576  00D6BA  0EFF               	movlw	high _GLCD_SIZE_HORZ
  5577  00D6BC  6EF7               	movwf	tblptrh,c
  5578  00D6BE                     	endif
  5579  00D6BE                     	if	0	;There are less than 3 active tblptr bytes
  5580  00D6BE                     	endif
  5581  00D6BE  0009               	tblrd		*+
  5582  00D6C0  50F5               	movf	tablat,w,c
  5583  00D6C2  5C20               	subwf	glcdDrawPixel@XS,w,c
  5584  00D6C4  A0D8               	btfss	status,0,c
  5585  00D6C6  D009               	goto	l315
  5586  00D6C8  0EE5               	movlw	low _GLCD_SIZE_HORZ
  5587  00D6CA  6EF6               	movwf	tblptrl,c
  5588  00D6CC                     	if	1	;There is more than 1 active tblptr byte
  5589  00D6CC  0EFF               	movlw	high _GLCD_SIZE_HORZ
  5590  00D6CE  6EF7               	movwf	tblptrh,c
  5591  00D6D0                     	endif
  5592  00D6D0                     	if	0	;There are less than 3 active tblptr bytes
  5593  00D6D0                     	endif
  5594  00D6D0  0008               	tblrd		*
  5595  00D6D2  CFF5 F01F          	movff	tablat,??_glcdDrawPixel
  5596  00D6D6  041F               	decf	??_glcdDrawPixel,w,c
  5597  00D6D8  6E20               	movwf	glcdDrawPixel@XS,c
  5598  00D6DA                     l315:
  5599                           
  5600                           ;GLCD_PIC_V1.1.c: 161: if(YS >= GLCD_SIZE_VERT){ YS = GLCD_SIZE_HORZ - 1; }
  5601  00D6DA  0EE4               	movlw	low _GLCD_SIZE_VERT
  5602  00D6DC  6EF6               	movwf	tblptrl,c
  5603  00D6DE                     	if	1	;There is more than 1 active tblptr byte
  5604  00D6DE  0EFF               	movlw	high _GLCD_SIZE_VERT
  5605  00D6E0  6EF7               	movwf	tblptrh,c
  5606  00D6E2                     	endif
  5607  00D6E2                     	if	0	;There are less than 3 active tblptr bytes
  5608  00D6E2                     	endif
  5609  00D6E2  0009               	tblrd		*+
  5610  00D6E4  50F5               	movf	tablat,w,c
  5611  00D6E6  5C1A               	subwf	glcdDrawPixel@YS,w,c
  5612  00D6E8  A0D8               	btfss	status,0,c
  5613  00D6EA  D009               	goto	l316
  5614  00D6EC  0EE5               	movlw	low _GLCD_SIZE_HORZ
  5615  00D6EE  6EF6               	movwf	tblptrl,c
  5616  00D6F0                     	if	1	;There is more than 1 active tblptr byte
  5617  00D6F0  0EFF               	movlw	high _GLCD_SIZE_HORZ
  5618  00D6F2  6EF7               	movwf	tblptrh,c
  5619  00D6F4                     	endif
  5620  00D6F4                     	if	0	;There are less than 3 active tblptr bytes
  5621  00D6F4                     	endif
  5622  00D6F4  0008               	tblrd		*
  5623  00D6F6  CFF5 F01F          	movff	tablat,??_glcdDrawPixel
  5624  00D6FA  041F               	decf	??_glcdDrawPixel,w,c
  5625  00D6FC  6E1A               	movwf	glcdDrawPixel@YS,c
  5626  00D6FE                     l316:
  5627                           
  5628                           ;GLCD_PIC_V1.1.c: 164: glcdDrawRectangle(XS, XS, YS, YS, color);
  5629  00D6FE  C020  F007         	movff	glcdDrawPixel@XS,glcdDrawRectangle@XE
  5630  00D702  C01A  F008         	movff	glcdDrawPixel@YS,glcdDrawRectangle@YS
  5631  00D706  C01A  F009         	movff	glcdDrawPixel@YS,glcdDrawRectangle@YE
  5632  00D70A  C01B  F00A         	movff	glcdDrawPixel@color,glcdDrawRectangle@color
  5633  00D70E  C01C  F00B         	movff	glcdDrawPixel@color+1,glcdDrawRectangle@color+1
  5634  00D712  C01D  F00C         	movff	glcdDrawPixel@color+2,glcdDrawRectangle@color+2
  5635  00D716  C01E  F00D         	movff	glcdDrawPixel@color+3,glcdDrawRectangle@color+3
  5636  00D71A  5020               	movf	glcdDrawPixel@XS,w,c
  5637  00D71C  EC00  F06D         	call	_glcdDrawRectangle
  5638  00D720  0012               	return		;funcret
  5639  00D722                     __end_of_glcdDrawPixel:
  5640                           	opt stack 0
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           prodl	equ	0xFF3
  5646                           indf0	equ	0xFEF
  5647                           postinc0	equ	0xFEE
  5648                           plusw0	equ	0xFEB
  5649                           fsr0h	equ	0xFEA
  5650                           fsr0l	equ	0xFE9
  5651                           wreg	equ	0xFE8
  5652                           postdec1	equ	0xFE5
  5653                           plusw1	equ	0xFE3
  5654                           fsr1l	equ	0xFE1
  5655                           plusw2	equ	0xFDB
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function ___awmod *****************
  5661 ;; Defined at:
  5662 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/awmod.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  dividend        2    0[COMRAM] int 
  5665 ;;  divisor         2    2[COMRAM] int 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  sign            1    5[COMRAM] unsigned char 
  5668 ;;  counter         1    4[COMRAM] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  2    0[COMRAM] int 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;Total ram usage:        6 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_draw_px_char
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text7
  5693  00D722                     __ptext7:
  5694                           	opt stack 0
  5695  00D722                     ___awmod:
  5696                           	opt stack 27
  5697                           
  5698                           ;incstack = 0
  5699  00D722  0E00               	movlw	0
  5700  00D724  6E06               	movwf	___awmod@sign,c
  5701  00D726  AE02               	btfss	___awmod@dividend+1,7,c
  5702  00D728  D006               	goto	l635
  5703  00D72A  6C01               	negf	___awmod@dividend,c
  5704  00D72C  1E02               	comf	___awmod@dividend+1,f,c
  5705  00D72E  B0D8               	btfsc	status,0,c
  5706  00D730  2A02               	incf	___awmod@dividend+1,f,c
  5707  00D732  0E01               	movlw	1
  5708  00D734  6E06               	movwf	___awmod@sign,c
  5709  00D736                     l635:
  5710  00D736  AE04               	btfss	___awmod@divisor+1,7,c
  5711  00D738  D004               	goto	l636
  5712  00D73A  6C03               	negf	___awmod@divisor,c
  5713  00D73C  1E04               	comf	___awmod@divisor+1,f,c
  5714  00D73E  B0D8               	btfsc	status,0,c
  5715  00D740  2A04               	incf	___awmod@divisor+1,f,c
  5716  00D742                     l636:
  5717  00D742  5003               	movf	___awmod@divisor,w,c
  5718  00D744  1004               	iorwf	___awmod@divisor+1,w,c
  5719  00D746  B4D8               	btfsc	status,2,c
  5720  00D748  D018               	goto	l643
  5721  00D74A  0E01               	movlw	1
  5722  00D74C  6E05               	movwf	___awmod@counter,c
  5723  00D74E  D004               	goto	l638
  5724  00D750  90D8               	bcf	status,0,c
  5725  00D752  3603               	rlcf	___awmod@divisor,f,c
  5726  00D754  3604               	rlcf	___awmod@divisor+1,f,c
  5727  00D756  2A05               	incf	___awmod@counter,f,c
  5728  00D758                     l638:
  5729  00D758  AE04               	btfss	___awmod@divisor+1,7,c
  5730  00D75A  D7FA               	goto	l639
  5731  00D75C                     u1610:
  5732  00D75C  5003               	movf	___awmod@divisor,w,c
  5733  00D75E  5C01               	subwf	___awmod@dividend,w,c
  5734  00D760  5004               	movf	___awmod@divisor+1,w,c
  5735  00D762  5802               	subwfb	___awmod@dividend+1,w,c
  5736  00D764  A0D8               	btfss	status,0,c
  5737  00D766  D004               	goto	l642
  5738  00D768  5003               	movf	___awmod@divisor,w,c
  5739  00D76A  5E01               	subwf	___awmod@dividend,f,c
  5740  00D76C  5004               	movf	___awmod@divisor+1,w,c
  5741  00D76E  5A02               	subwfb	___awmod@dividend+1,f,c
  5742  00D770                     l642:
  5743  00D770  90D8               	bcf	status,0,c
  5744  00D772  3204               	rrcf	___awmod@divisor+1,f,c
  5745  00D774  3203               	rrcf	___awmod@divisor,f,c
  5746  00D776  2E05               	decfsz	___awmod@counter,f,c
  5747  00D778  D7F1               	goto	u1610
  5748  00D77A                     l643:
  5749  00D77A  5006               	movf	___awmod@sign,w,c
  5750  00D77C  B4D8               	btfsc	status,2,c
  5751  00D77E  D004               	goto	l644
  5752  00D780  6C01               	negf	___awmod@dividend,c
  5753  00D782  1E02               	comf	___awmod@dividend+1,f,c
  5754  00D784  B0D8               	btfsc	status,0,c
  5755  00D786  2A02               	incf	___awmod@dividend+1,f,c
  5756  00D788                     l644:
  5757  00D788  C001  F001         	movff	___awmod@dividend,?___awmod
  5758  00D78C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5759  00D790  0012               	return	
  5760  00D792                     __end_of___awmod:
  5761                           	opt stack 0
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodl	equ	0xFF3
  5767                           indf0	equ	0xFEF
  5768                           postinc0	equ	0xFEE
  5769                           plusw0	equ	0xFEB
  5770                           fsr0h	equ	0xFEA
  5771                           fsr0l	equ	0xFE9
  5772                           wreg	equ	0xFE8
  5773                           postdec1	equ	0xFE5
  5774                           plusw1	equ	0xFE3
  5775                           fsr1l	equ	0xFE1
  5776                           plusw2	equ	0xFDB
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function ___awdiv *****************
  5782 ;; Defined at:
  5783 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/awdiv.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  dividend        2    6[COMRAM] int 
  5786 ;;  divisor         2    8[COMRAM] int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  quotient        2   12[COMRAM] int 
  5789 ;;  sign            1   11[COMRAM] unsigned char 
  5790 ;;  counter         1   10[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  2    6[COMRAM] int 
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;Total ram usage:        8 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_draw_px_char
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text8
  5815  00D792                     __ptext8:
  5816                           	opt stack 0
  5817  00D792                     ___awdiv:
  5818                           	opt stack 27
  5819                           
  5820                           ;incstack = 0
  5821  00D792  0E00               	movlw	0
  5822  00D794  6E0C               	movwf	___awdiv@sign,c
  5823  00D796  AE0A               	btfss	___awdiv@divisor+1,7,c
  5824  00D798  D006               	goto	l622
  5825  00D79A  6C09               	negf	___awdiv@divisor,c
  5826  00D79C  1E0A               	comf	___awdiv@divisor+1,f,c
  5827  00D79E  B0D8               	btfsc	status,0,c
  5828  00D7A0  2A0A               	incf	___awdiv@divisor+1,f,c
  5829  00D7A2  0E01               	movlw	1
  5830  00D7A4  6E0C               	movwf	___awdiv@sign,c
  5831  00D7A6                     l622:
  5832  00D7A6  AE08               	btfss	___awdiv@dividend+1,7,c
  5833  00D7A8  D006               	goto	l623
  5834  00D7AA  6C07               	negf	___awdiv@dividend,c
  5835  00D7AC  1E08               	comf	___awdiv@dividend+1,f,c
  5836  00D7AE  B0D8               	btfsc	status,0,c
  5837  00D7B0  2A08               	incf	___awdiv@dividend+1,f,c
  5838  00D7B2  0E01               	movlw	1
  5839  00D7B4  1A0C               	xorwf	___awdiv@sign,f,c
  5840  00D7B6                     l623:
  5841  00D7B6  0E00               	movlw	0
  5842  00D7B8  6E0E               	movwf	___awdiv@quotient+1,c
  5843  00D7BA  0E00               	movlw	0
  5844  00D7BC  6E0D               	movwf	___awdiv@quotient,c
  5845  00D7BE  5009               	movf	___awdiv@divisor,w,c
  5846  00D7C0  100A               	iorwf	___awdiv@divisor+1,w,c
  5847  00D7C2  B4D8               	btfsc	status,2,c
  5848  00D7C4  D01C               	goto	l630
  5849  00D7C6  0E01               	movlw	1
  5850  00D7C8  6E0B               	movwf	___awdiv@counter,c
  5851  00D7CA  D004               	goto	l625
  5852  00D7CC  90D8               	bcf	status,0,c
  5853  00D7CE  3609               	rlcf	___awdiv@divisor,f,c
  5854  00D7D0  360A               	rlcf	___awdiv@divisor+1,f,c
  5855  00D7D2  2A0B               	incf	___awdiv@counter,f,c
  5856  00D7D4                     l625:
  5857  00D7D4  AE0A               	btfss	___awdiv@divisor+1,7,c
  5858  00D7D6  D7FA               	goto	l626
  5859  00D7D8                     u1550:
  5860  00D7D8  90D8               	bcf	status,0,c
  5861  00D7DA  360D               	rlcf	___awdiv@quotient,f,c
  5862  00D7DC  360E               	rlcf	___awdiv@quotient+1,f,c
  5863  00D7DE  5009               	movf	___awdiv@divisor,w,c
  5864  00D7E0  5C07               	subwf	___awdiv@dividend,w,c
  5865  00D7E2  500A               	movf	___awdiv@divisor+1,w,c
  5866  00D7E4  5808               	subwfb	___awdiv@dividend+1,w,c
  5867  00D7E6  A0D8               	btfss	status,0,c
  5868  00D7E8  D005               	goto	l629
  5869  00D7EA  5009               	movf	___awdiv@divisor,w,c
  5870  00D7EC  5E07               	subwf	___awdiv@dividend,f,c
  5871  00D7EE  500A               	movf	___awdiv@divisor+1,w,c
  5872  00D7F0  5A08               	subwfb	___awdiv@dividend+1,f,c
  5873  00D7F2  800D               	bsf	___awdiv@quotient,0,c
  5874  00D7F4                     l629:
  5875  00D7F4  90D8               	bcf	status,0,c
  5876  00D7F6  320A               	rrcf	___awdiv@divisor+1,f,c
  5877  00D7F8  3209               	rrcf	___awdiv@divisor,f,c
  5878  00D7FA  2E0B               	decfsz	___awdiv@counter,f,c
  5879  00D7FC  D7ED               	goto	u1550
  5880  00D7FE                     l630:
  5881  00D7FE  500C               	movf	___awdiv@sign,w,c
  5882  00D800  B4D8               	btfsc	status,2,c
  5883  00D802  D004               	goto	l631
  5884  00D804  6C0D               	negf	___awdiv@quotient,c
  5885  00D806  1E0E               	comf	___awdiv@quotient+1,f,c
  5886  00D808  B0D8               	btfsc	status,0,c
  5887  00D80A  2A0E               	incf	___awdiv@quotient+1,f,c
  5888  00D80C                     l631:
  5889  00D80C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5890  00D810  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5891  00D814  0012               	return	
  5892  00D816                     __end_of___awdiv:
  5893                           	opt stack 0
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodl	equ	0xFF3
  5899                           indf0	equ	0xFEF
  5900                           postinc0	equ	0xFEE
  5901                           plusw0	equ	0xFEB
  5902                           fsr0h	equ	0xFEA
  5903                           fsr0l	equ	0xFE9
  5904                           wreg	equ	0xFE8
  5905                           postdec1	equ	0xFE5
  5906                           plusw1	equ	0xFE3
  5907                           fsr1l	equ	0xFE1
  5908                           plusw2	equ	0xFDB
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function _init *****************
  5914 ;; Defined at:
  5915 ;;		line 21 in file "main.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    5
  5936 ;; This function calls:
  5937 ;;		_initGLCD
  5938 ;; This function is called by:
  5939 ;;		_main
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text9
  5944  00D594                     __ptext9:
  5945                           	opt stack 0
  5946  00D594                     _init:
  5947                           	opt stack 25
  5948                           
  5949                           ;main.c: 26: LATA = 0x00;
  5950                           
  5951                           ;incstack = 0
  5952  00D594  0E00               	movlw	0
  5953  00D596  6E89               	movwf	3977,c	;volatile
  5954                           
  5955                           ;main.c: 27: LATB = 0x00;
  5956  00D598  0E00               	movlw	0
  5957  00D59A  6E8A               	movwf	3978,c	;volatile
  5958                           
  5959                           ;main.c: 28: LATC = 0x00;
  5960  00D59C  0E00               	movlw	0
  5961  00D59E  6E8B               	movwf	3979,c	;volatile
  5962                           
  5963                           ;main.c: 29: LATD = 0x00;
  5964  00D5A0  0E00               	movlw	0
  5965  00D5A2  6E8C               	movwf	3980,c	;volatile
  5966                           
  5967                           ;main.c: 30: LATE = 0x00;
  5968  00D5A4  0E00               	movlw	0
  5969  00D5A6  6E8D               	movwf	3981,c	;volatile
  5970                           
  5971                           ;main.c: 34: TRISA = 0xFF;
  5972  00D5A8  6892               	setf	3986,c	;volatile
  5973                           
  5974                           ;main.c: 35: TRISB = 0xFF;
  5975  00D5AA  6893               	setf	3987,c	;volatile
  5976                           
  5977                           ;main.c: 36: TRISC = 0b10000000;
  5978  00D5AC  0E80               	movlw	128
  5979  00D5AE  6E94               	movwf	3988,c	;volatile
  5980                           
  5981                           ;main.c: 40: TRISD = 0b00000001;
  5982  00D5B0  0E01               	movlw	1
  5983  00D5B2  6E95               	movwf	3989,c	;volatile
  5984                           
  5985                           ;main.c: 46: TRISE = 0b00000100;
  5986  00D5B4  0E04               	movlw	4
  5987  00D5B6  6E96               	movwf	3990,c	;volatile
  5988                           
  5989                           ;main.c: 53: ADCON0 = 0x00;
  5990  00D5B8  0E00               	movlw	0
  5991  00D5BA  6EC2               	movwf	4034,c	;volatile
  5992                           
  5993                           ;main.c: 54: ADCON1 = 0b00001111;
  5994  00D5BC  0E0F               	movlw	15
  5995  00D5BE  6EC1               	movwf	4033,c	;volatile
  5996                           
  5997                           ;main.c: 58: initGLCD();
  5998  00D5C0  ECC0  F06D         	call	_initGLCD	;wreg free
  5999  00D5C4  0012               	return		;funcret
  6000  00D5C6                     __end_of_init:
  6001                           	opt stack 0
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodl	equ	0xFF3
  6007                           indf0	equ	0xFEF
  6008                           postinc0	equ	0xFEE
  6009                           plusw0	equ	0xFEB
  6010                           fsr0h	equ	0xFEA
  6011                           fsr0l	equ	0xFE9
  6012                           wreg	equ	0xFE8
  6013                           postdec1	equ	0xFE5
  6014                           plusw1	equ	0xFE3
  6015                           fsr1l	equ	0xFE1
  6016                           plusw2	equ	0xFDB
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function _initGLCD *****************
  6022 ;; Defined at:
  6023 ;;		line 238 in file "GLCD_PIC_V1.1.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;Total ram usage:        2 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    4
  6044 ;; This function calls:
  6045 ;;		_glcdDrawRectangle
  6046 ;;		_glcdSetCOLMOD
  6047 ;;		_glcdTransfer
  6048 ;;		_spiInit
  6049 ;; This function is called by:
  6050 ;;		_init
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text10
  6055  00DB80                     __ptext10:
  6056                           	opt stack 0
  6057  00DB80                     _initGLCD:
  6058                           	opt stack 25
  6059                           
  6060                           ;GLCD_PIC_V1.1.c: 262: LATDbits.LATD0 = 1;
  6061                           
  6062                           ;incstack = 0
  6063  00DB80  808C               	bsf	3980,0,c	;volatile
  6064                           
  6065                           ;GLCD_PIC_V1.1.c: 263: LATDbits.LATD1 = 1;
  6066  00DB82  828C               	bsf	3980,1,c	;volatile
  6067                           
  6068                           ;GLCD_PIC_V1.1.c: 264: TRISDbits.TRISD0 = 0;
  6069  00DB84  9095               	bcf	3989,0,c	;volatile
  6070                           
  6071                           ;GLCD_PIC_V1.1.c: 265: TRISDbits.TRISD1 = 0;
  6072  00DB86  9295               	bcf	3989,1,c	;volatile
  6073                           
  6074                           ;GLCD_PIC_V1.1.c: 268: spiInit(4);
  6075  00DB88  0E04               	movlw	4
  6076  00DB8A  EC16  F06B         	call	_spiInit
  6077                           
  6078                           ;GLCD_PIC_V1.1.c: 272: _delay((unsigned long)((20)*(40000000/4000.0)));
  6079  00DB8E  0E02               	movlw	2
  6080  00DB90  6E1B               	movwf	(??_initGLCD+1)& (0+255),c
  6081  00DB92  0E04               	movlw	4
  6082  00DB94  6E1A               	movwf	??_initGLCD& (0+255),c
  6083  00DB96  0EBA               	movlw	186
  6084  00DB98                     u2767:
  6085  00DB98  2EE8               	decfsz	wreg,f,c
  6086  00DB9A  D7FE               	bra	u2767
  6087  00DB9C  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  6088  00DB9E  D7FC               	bra	u2767
  6089  00DBA0  2E1B               	decfsz	(??_initGLCD+1)& (0+255),f,c
  6090  00DBA2  D7FA               	bra	u2767
  6091  00DBA4  D000               	nop2	
  6092                           
  6093                           ;GLCD_PIC_V1.1.c: 275: { glcdTransfer(INST_SWRESET, 1); _delay((unsigned long)((130)*(40
      +                          000000/4000.0))); };
  6094  00DBA6  0E01               	movlw	1
  6095  00DBA8  6E04               	movwf	glcdTransfer@cmd,c
  6096  00DBAA  0EC2               	movlw	low GLCD_PIC@INST_SWRESET
  6097  00DBAC  6EF6               	movwf	tblptrl,c
  6098  00DBAE                     	if	1	;There is more than 1 active tblptr byte
  6099  00DBAE  0EFF               	movlw	high GLCD_PIC@INST_SWRESET
  6100  00DBB0  6EF7               	movwf	tblptrh,c
  6101  00DBB2                     	endif
  6102  00DBB2                     	if	0	;There are less than 3 active tblptr bytes
  6103  00DBB2                     	endif
  6104  00DBB2  0008               	tblrd		*
  6105  00DBB4  50F5               	movf	tablat,w,c
  6106  00DBB6  ECA0  F06A         	call	_glcdTransfer
  6107  00DBBA  0E07               	movlw	7
  6108  00DBBC  6E1B               	movwf	(??_initGLCD+1)& (0+255),c
  6109  00DBBE  0E99               	movlw	153
  6110  00DBC0  6E1A               	movwf	??_initGLCD& (0+255),c
  6111  00DBC2  0E49               	movlw	73
  6112  00DBC4                     u2777:
  6113  00DBC4  2EE8               	decfsz	wreg,f,c
  6114  00DBC6  D7FE               	bra	u2777
  6115  00DBC8  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  6116  00DBCA  D7FC               	bra	u2777
  6117  00DBCC  2E1B               	decfsz	(??_initGLCD+1)& (0+255),f,c
  6118  00DBCE  D7FA               	bra	u2777
  6119  00DBD0  F000               	nop	
  6120                           
  6121                           ;GLCD_PIC_V1.1.c: 277: { glcdTransfer(INST_SLPOUT, 1); _delay((unsigned long)((130)*(400
      +                          00000/4000.0))); };
  6122  00DBD2  0E01               	movlw	1
  6123  00DBD4  6E04               	movwf	glcdTransfer@cmd,c
  6124  00DBD6  0EC0               	movlw	low GLCD_PIC@INST_SLPOUT
  6125  00DBD8  6EF6               	movwf	tblptrl,c
  6126  00DBDA                     	if	1	;There is more than 1 active tblptr byte
  6127  00DBDA  0EFF               	movlw	high GLCD_PIC@INST_SLPOUT
  6128  00DBDC  6EF7               	movwf	tblptrh,c
  6129  00DBDE                     	endif
  6130  00DBDE                     	if	0	;There are less than 3 active tblptr bytes
  6131  00DBDE                     	endif
  6132  00DBDE  0008               	tblrd		*
  6133  00DBE0  50F5               	movf	tablat,w,c
  6134  00DBE2  ECA0  F06A         	call	_glcdTransfer
  6135  00DBE6  0E07               	movlw	7
  6136  00DBE8  6E1B               	movwf	(??_initGLCD+1)& (0+255),c
  6137  00DBEA  0E99               	movlw	153
  6138  00DBEC  6E1A               	movwf	??_initGLCD& (0+255),c
  6139  00DBEE  0E49               	movlw	73
  6140  00DBF0                     u2787:
  6141  00DBF0  2EE8               	decfsz	wreg,f,c
  6142  00DBF2  D7FE               	bra	u2787
  6143  00DBF4  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  6144  00DBF6  D7FC               	bra	u2787
  6145  00DBF8  2E1B               	decfsz	(??_initGLCD+1)& (0+255),f,c
  6146  00DBFA  D7FA               	bra	u2787
  6147  00DBFC  F000               	nop	
  6148                           
  6149                           ;GLCD_PIC_V1.1.c: 280: glcdTransfer(INST_FRMCTR1, 1);
  6150  00DBFE  0E01               	movlw	1
  6151  00DC00  6E04               	movwf	glcdTransfer@cmd,c
  6152  00DC02  0EAE               	movlw	low GLCD_PIC@INST_FRMCTR1
  6153  00DC04  6EF6               	movwf	tblptrl,c
  6154  00DC06                     	if	1	;There is more than 1 active tblptr byte
  6155  00DC06  0EFF               	movlw	high GLCD_PIC@INST_FRMCTR1
  6156  00DC08  6EF7               	movwf	tblptrh,c
  6157  00DC0A                     	endif
  6158  00DC0A                     	if	0	;There are less than 3 active tblptr bytes
  6159  00DC0A                     	endif
  6160  00DC0A  0008               	tblrd		*
  6161  00DC0C  50F5               	movf	tablat,w,c
  6162  00DC0E  ECA0  F06A         	call	_glcdTransfer
  6163                           
  6164                           ;GLCD_PIC_V1.1.c: 281: glcdTransfer(0x00, 0);
  6165  00DC12  0E00               	movlw	0
  6166  00DC14  6E04               	movwf	glcdTransfer@cmd,c
  6167  00DC16  0E00               	movlw	0
  6168  00DC18  ECA0  F06A         	call	_glcdTransfer
  6169                           
  6170                           ;GLCD_PIC_V1.1.c: 282: glcdTransfer(0x06, 0);
  6171  00DC1C  0E00               	movlw	0
  6172  00DC1E  6E04               	movwf	glcdTransfer@cmd,c
  6173  00DC20  0E06               	movlw	6
  6174  00DC22  ECA0  F06A         	call	_glcdTransfer
  6175                           
  6176                           ;GLCD_PIC_V1.1.c: 283: glcdTransfer(0x03, 0);
  6177  00DC26  0E00               	movlw	0
  6178  00DC28  6E04               	movwf	glcdTransfer@cmd,c
  6179  00DC2A  0E03               	movlw	3
  6180  00DC2C  ECA0  F06A         	call	_glcdTransfer
  6181                           
  6182                           ;GLCD_PIC_V1.1.c: 285: glcdTransfer(INST_FRMCTR2, 1);
  6183  00DC30  0E01               	movlw	1
  6184  00DC32  6E04               	movwf	glcdTransfer@cmd,c
  6185  00DC34  0EAD               	movlw	low GLCD_PIC@INST_FRMCTR2
  6186  00DC36  6EF6               	movwf	tblptrl,c
  6187  00DC38                     	if	1	;There is more than 1 active tblptr byte
  6188  00DC38  0EFF               	movlw	high GLCD_PIC@INST_FRMCTR2
  6189  00DC3A  6EF7               	movwf	tblptrh,c
  6190  00DC3C                     	endif
  6191  00DC3C                     	if	0	;There are less than 3 active tblptr bytes
  6192  00DC3C                     	endif
  6193  00DC3C  0008               	tblrd		*
  6194  00DC3E  50F5               	movf	tablat,w,c
  6195  00DC40  ECA0  F06A         	call	_glcdTransfer
  6196                           
  6197                           ;GLCD_PIC_V1.1.c: 286: glcdTransfer(0x01, 0);
  6198  00DC44  0E00               	movlw	0
  6199  00DC46  6E04               	movwf	glcdTransfer@cmd,c
  6200  00DC48  0E01               	movlw	1
  6201  00DC4A  ECA0  F06A         	call	_glcdTransfer
  6202                           
  6203                           ;GLCD_PIC_V1.1.c: 287: glcdTransfer(0x2C, 0);
  6204  00DC4E  0E00               	movlw	0
  6205  00DC50  6E04               	movwf	glcdTransfer@cmd,c
  6206  00DC52  0E2C               	movlw	44
  6207  00DC54  ECA0  F06A         	call	_glcdTransfer
  6208                           
  6209                           ;GLCD_PIC_V1.1.c: 288: glcdTransfer(0x2D, 0);
  6210  00DC58  0E00               	movlw	0
  6211  00DC5A  6E04               	movwf	glcdTransfer@cmd,c
  6212  00DC5C  0E2D               	movlw	45
  6213  00DC5E  ECA0  F06A         	call	_glcdTransfer
  6214                           
  6215                           ;GLCD_PIC_V1.1.c: 290: glcdTransfer(INST_FRMCTR3, 1);
  6216  00DC62  0E01               	movlw	1
  6217  00DC64  6E04               	movwf	glcdTransfer@cmd,c
  6218  00DC66  0EAC               	movlw	low GLCD_PIC@INST_FRMCTR3
  6219  00DC68  6EF6               	movwf	tblptrl,c
  6220  00DC6A                     	if	1	;There is more than 1 active tblptr byte
  6221  00DC6A  0EFF               	movlw	high GLCD_PIC@INST_FRMCTR3
  6222  00DC6C  6EF7               	movwf	tblptrh,c
  6223  00DC6E                     	endif
  6224  00DC6E                     	if	0	;There are less than 3 active tblptr bytes
  6225  00DC6E                     	endif
  6226  00DC6E  0008               	tblrd		*
  6227  00DC70  50F5               	movf	tablat,w,c
  6228  00DC72  ECA0  F06A         	call	_glcdTransfer
  6229                           
  6230                           ;GLCD_PIC_V1.1.c: 291: glcdTransfer(0x01, 0);
  6231  00DC76  0E00               	movlw	0
  6232  00DC78  6E04               	movwf	glcdTransfer@cmd,c
  6233  00DC7A  0E01               	movlw	1
  6234  00DC7C  ECA0  F06A         	call	_glcdTransfer
  6235                           
  6236                           ;GLCD_PIC_V1.1.c: 292: glcdTransfer(0x2C, 0);
  6237  00DC80  0E00               	movlw	0
  6238  00DC82  6E04               	movwf	glcdTransfer@cmd,c
  6239  00DC84  0E2C               	movlw	44
  6240  00DC86  ECA0  F06A         	call	_glcdTransfer
  6241                           
  6242                           ;GLCD_PIC_V1.1.c: 293: glcdTransfer(0x2D, 0);
  6243  00DC8A  0E00               	movlw	0
  6244  00DC8C  6E04               	movwf	glcdTransfer@cmd,c
  6245  00DC8E  0E2D               	movlw	45
  6246  00DC90  ECA0  F06A         	call	_glcdTransfer
  6247                           
  6248                           ;GLCD_PIC_V1.1.c: 295: glcdTransfer(INST_INVCTR, 1);
  6249  00DC94  0E01               	movlw	1
  6250  00DC96  6E04               	movwf	glcdTransfer@cmd,c
  6251  00DC98  0EAB               	movlw	low GLCD_PIC@INST_INVCTR
  6252  00DC9A  6EF6               	movwf	tblptrl,c
  6253  00DC9C                     	if	1	;There is more than 1 active tblptr byte
  6254  00DC9C  0EFF               	movlw	high GLCD_PIC@INST_INVCTR
  6255  00DC9E  6EF7               	movwf	tblptrh,c
  6256  00DCA0                     	endif
  6257  00DCA0                     	if	0	;There are less than 3 active tblptr bytes
  6258  00DCA0                     	endif
  6259  00DCA0  0008               	tblrd		*
  6260  00DCA2  50F5               	movf	tablat,w,c
  6261  00DCA4  ECA0  F06A         	call	_glcdTransfer
  6262                           
  6263                           ;GLCD_PIC_V1.1.c: 296: glcdTransfer(0x00, 0);
  6264  00DCA8  0E00               	movlw	0
  6265  00DCAA  6E04               	movwf	glcdTransfer@cmd,c
  6266  00DCAC  0E00               	movlw	0
  6267  00DCAE  ECA0  F06A         	call	_glcdTransfer
  6268                           
  6269                           ;GLCD_PIC_V1.1.c: 299: glcdTransfer(INST_PWCTR1, 1);
  6270  00DCB2  0E01               	movlw	1
  6271  00DCB4  6E04               	movwf	glcdTransfer@cmd,c
  6272  00DCB6  0EAA               	movlw	low GLCD_PIC@INST_PWCTR1
  6273  00DCB8  6EF6               	movwf	tblptrl,c
  6274  00DCBA                     	if	1	;There is more than 1 active tblptr byte
  6275  00DCBA  0EFF               	movlw	high GLCD_PIC@INST_PWCTR1
  6276  00DCBC  6EF7               	movwf	tblptrh,c
  6277  00DCBE                     	endif
  6278  00DCBE                     	if	0	;There are less than 3 active tblptr bytes
  6279  00DCBE                     	endif
  6280  00DCBE  0008               	tblrd		*
  6281  00DCC0  50F5               	movf	tablat,w,c
  6282  00DCC2  ECA0  F06A         	call	_glcdTransfer
  6283                           
  6284                           ;GLCD_PIC_V1.1.c: 300: glcdTransfer(0xA2, 0);
  6285  00DCC6  0E00               	movlw	0
  6286  00DCC8  6E04               	movwf	glcdTransfer@cmd,c
  6287  00DCCA  0EA2               	movlw	162
  6288  00DCCC  ECA0  F06A         	call	_glcdTransfer
  6289                           
  6290                           ;GLCD_PIC_V1.1.c: 301: glcdTransfer(0x02, 0);
  6291  00DCD0  0E00               	movlw	0
  6292  00DCD2  6E04               	movwf	glcdTransfer@cmd,c
  6293  00DCD4  0E02               	movlw	2
  6294  00DCD6  ECA0  F06A         	call	_glcdTransfer
  6295                           
  6296                           ;GLCD_PIC_V1.1.c: 302: glcdTransfer(0x84, 0);
  6297  00DCDA  0E00               	movlw	0
  6298  00DCDC  6E04               	movwf	glcdTransfer@cmd,c
  6299  00DCDE  0E84               	movlw	132
  6300  00DCE0  ECA0  F06A         	call	_glcdTransfer
  6301                           
  6302                           ;GLCD_PIC_V1.1.c: 304: glcdTransfer(INST_PWCTR2, 1);
  6303  00DCE4  0E01               	movlw	1
  6304  00DCE6  6E04               	movwf	glcdTransfer@cmd,c
  6305  00DCE8  0EA9               	movlw	low GLCD_PIC@INST_PWCTR2
  6306  00DCEA  6EF6               	movwf	tblptrl,c
  6307  00DCEC                     	if	1	;There is more than 1 active tblptr byte
  6308  00DCEC  0EFF               	movlw	high GLCD_PIC@INST_PWCTR2
  6309  00DCEE  6EF7               	movwf	tblptrh,c
  6310  00DCF0                     	endif
  6311  00DCF0                     	if	0	;There are less than 3 active tblptr bytes
  6312  00DCF0                     	endif
  6313  00DCF0  0008               	tblrd		*
  6314  00DCF2  50F5               	movf	tablat,w,c
  6315  00DCF4  ECA0  F06A         	call	_glcdTransfer
  6316                           
  6317                           ;GLCD_PIC_V1.1.c: 305: glcdTransfer(0xC5, 0);
  6318  00DCF8  0E00               	movlw	0
  6319  00DCFA  6E04               	movwf	glcdTransfer@cmd,c
  6320  00DCFC  0EC5               	movlw	197
  6321  00DCFE  ECA0  F06A         	call	_glcdTransfer
  6322                           
  6323                           ;GLCD_PIC_V1.1.c: 307: glcdTransfer(INST_PWCTR3, 1);
  6324  00DD02  0E01               	movlw	1
  6325  00DD04  6E04               	movwf	glcdTransfer@cmd,c
  6326  00DD06  0EA8               	movlw	low GLCD_PIC@INST_PWCTR3
  6327  00DD08  6EF6               	movwf	tblptrl,c
  6328  00DD0A                     	if	1	;There is more than 1 active tblptr byte
  6329  00DD0A  0EFF               	movlw	high GLCD_PIC@INST_PWCTR3
  6330  00DD0C  6EF7               	movwf	tblptrh,c
  6331  00DD0E                     	endif
  6332  00DD0E                     	if	0	;There are less than 3 active tblptr bytes
  6333  00DD0E                     	endif
  6334  00DD0E  0008               	tblrd		*
  6335  00DD10  50F5               	movf	tablat,w,c
  6336  00DD12  ECA0  F06A         	call	_glcdTransfer
  6337                           
  6338                           ;GLCD_PIC_V1.1.c: 308: glcdTransfer(0x0A, 0);
  6339  00DD16  0E00               	movlw	0
  6340  00DD18  6E04               	movwf	glcdTransfer@cmd,c
  6341  00DD1A  0E0A               	movlw	10
  6342  00DD1C  ECA0  F06A         	call	_glcdTransfer
  6343                           
  6344                           ;GLCD_PIC_V1.1.c: 309: glcdTransfer(0x00, 0);
  6345  00DD20  0E00               	movlw	0
  6346  00DD22  6E04               	movwf	glcdTransfer@cmd,c
  6347  00DD24  0E00               	movlw	0
  6348  00DD26  ECA0  F06A         	call	_glcdTransfer
  6349                           
  6350                           ;GLCD_PIC_V1.1.c: 311: glcdTransfer(INST_PWCTR4, 1);
  6351  00DD2A  0E01               	movlw	1
  6352  00DD2C  6E04               	movwf	glcdTransfer@cmd,c
  6353  00DD2E  0EA7               	movlw	low GLCD_PIC@INST_PWCTR4
  6354  00DD30  6EF6               	movwf	tblptrl,c
  6355  00DD32                     	if	1	;There is more than 1 active tblptr byte
  6356  00DD32  0EFF               	movlw	high GLCD_PIC@INST_PWCTR4
  6357  00DD34  6EF7               	movwf	tblptrh,c
  6358  00DD36                     	endif
  6359  00DD36                     	if	0	;There are less than 3 active tblptr bytes
  6360  00DD36                     	endif
  6361  00DD36  0008               	tblrd		*
  6362  00DD38  50F5               	movf	tablat,w,c
  6363  00DD3A  ECA0  F06A         	call	_glcdTransfer
  6364                           
  6365                           ;GLCD_PIC_V1.1.c: 312: glcdTransfer(0x8A, 0);
  6366  00DD3E  0E00               	movlw	0
  6367  00DD40  6E04               	movwf	glcdTransfer@cmd,c
  6368  00DD42  0E8A               	movlw	138
  6369  00DD44  ECA0  F06A         	call	_glcdTransfer
  6370                           
  6371                           ;GLCD_PIC_V1.1.c: 313: glcdTransfer(0x2A, 0);
  6372  00DD48  0E00               	movlw	0
  6373  00DD4A  6E04               	movwf	glcdTransfer@cmd,c
  6374  00DD4C  0E2A               	movlw	42
  6375  00DD4E  ECA0  F06A         	call	_glcdTransfer
  6376                           
  6377                           ;GLCD_PIC_V1.1.c: 315: glcdTransfer(INST_PWCTR5, 1);
  6378  00DD52  0E01               	movlw	1
  6379  00DD54  6E04               	movwf	glcdTransfer@cmd,c
  6380  00DD56  0EA6               	movlw	low GLCD_PIC@INST_PWCTR5
  6381  00DD58  6EF6               	movwf	tblptrl,c
  6382  00DD5A                     	if	1	;There is more than 1 active tblptr byte
  6383  00DD5A  0EFF               	movlw	high GLCD_PIC@INST_PWCTR5
  6384  00DD5C  6EF7               	movwf	tblptrh,c
  6385  00DD5E                     	endif
  6386  00DD5E                     	if	0	;There are less than 3 active tblptr bytes
  6387  00DD5E                     	endif
  6388  00DD5E  0008               	tblrd		*
  6389  00DD60  50F5               	movf	tablat,w,c
  6390  00DD62  ECA0  F06A         	call	_glcdTransfer
  6391                           
  6392                           ;GLCD_PIC_V1.1.c: 316: glcdTransfer(0x8A, 0);
  6393  00DD66  0E00               	movlw	0
  6394  00DD68  6E04               	movwf	glcdTransfer@cmd,c
  6395  00DD6A  0E8A               	movlw	138
  6396  00DD6C  ECA0  F06A         	call	_glcdTransfer
  6397                           
  6398                           ;GLCD_PIC_V1.1.c: 317: glcdTransfer(0x2A, 0);
  6399  00DD70  0E00               	movlw	0
  6400  00DD72  6E04               	movwf	glcdTransfer@cmd,c
  6401  00DD74  0E2A               	movlw	42
  6402  00DD76  ECA0  F06A         	call	_glcdTransfer
  6403                           
  6404                           ;GLCD_PIC_V1.1.c: 320: glcdTransfer(INST_VMCTR1, 1);
  6405  00DD7A  0E01               	movlw	1
  6406  00DD7C  6E04               	movwf	glcdTransfer@cmd,c
  6407  00DD7E  0EA5               	movlw	low GLCD_PIC@INST_VMCTR1
  6408  00DD80  6EF6               	movwf	tblptrl,c
  6409  00DD82                     	if	1	;There is more than 1 active tblptr byte
  6410  00DD82  0EFF               	movlw	high GLCD_PIC@INST_VMCTR1
  6411  00DD84  6EF7               	movwf	tblptrh,c
  6412  00DD86                     	endif
  6413  00DD86                     	if	0	;There are less than 3 active tblptr bytes
  6414  00DD86                     	endif
  6415  00DD86  0008               	tblrd		*
  6416  00DD88  50F5               	movf	tablat,w,c
  6417  00DD8A  ECA0  F06A         	call	_glcdTransfer
  6418                           
  6419                           ;GLCD_PIC_V1.1.c: 321: glcdTransfer(0x3C, 0);
  6420  00DD8E  0E00               	movlw	0
  6421  00DD90  6E04               	movwf	glcdTransfer@cmd,c
  6422  00DD92  0E3C               	movlw	60
  6423  00DD94  ECA0  F06A         	call	_glcdTransfer
  6424                           
  6425                           ;GLCD_PIC_V1.1.c: 323: glcdTransfer(INST_INVOFF, 1);
  6426  00DD98  0E01               	movlw	1
  6427  00DD9A  6E04               	movwf	glcdTransfer@cmd,c
  6428  00DD9C  0EBD               	movlw	low GLCD_PIC@INST_INVOFF
  6429  00DD9E  6EF6               	movwf	tblptrl,c
  6430  00DDA0                     	if	1	;There is more than 1 active tblptr byte
  6431  00DDA0  0EFF               	movlw	high GLCD_PIC@INST_INVOFF
  6432  00DDA2  6EF7               	movwf	tblptrh,c
  6433  00DDA4                     	endif
  6434  00DDA4                     	if	0	;There are less than 3 active tblptr bytes
  6435  00DDA4                     	endif
  6436  00DDA4  0008               	tblrd		*
  6437  00DDA6  50F5               	movf	tablat,w,c
  6438  00DDA8  ECA0  F06A         	call	_glcdTransfer
  6439                           
  6440                           ;GLCD_PIC_V1.1.c: 331: glcdSetCOLMOD(18);
  6441  00DDAC  0E12               	movlw	18
  6442  00DDAE  EC32  F06B         	call	_glcdSetCOLMOD
  6443                           
  6444                           ;GLCD_PIC_V1.1.c: 334: glcdTransfer(INST_GAMSET, 1);
  6445  00DDB2  0E01               	movlw	1
  6446  00DDB4  6E04               	movwf	glcdTransfer@cmd,c
  6447  00DDB6  0EBB               	movlw	low GLCD_PIC@INST_GAMSET
  6448  00DDB8  6EF6               	movwf	tblptrl,c
  6449  00DDBA                     	if	1	;There is more than 1 active tblptr byte
  6450  00DDBA  0EFF               	movlw	high GLCD_PIC@INST_GAMSET
  6451  00DDBC  6EF7               	movwf	tblptrh,c
  6452  00DDBE                     	endif
  6453  00DDBE                     	if	0	;There are less than 3 active tblptr bytes
  6454  00DDBE                     	endif
  6455  00DDBE  0008               	tblrd		*
  6456  00DDC0  50F5               	movf	tablat,w,c
  6457  00DDC2  ECA0  F06A         	call	_glcdTransfer
  6458                           
  6459                           ;GLCD_PIC_V1.1.c: 335: glcdTransfer(0x01, 0);
  6460  00DDC6  0E00               	movlw	0
  6461  00DDC8  6E04               	movwf	glcdTransfer@cmd,c
  6462  00DDCA  0E01               	movlw	1
  6463  00DDCC  ECA0  F06A         	call	_glcdTransfer
  6464                           
  6465                           ;GLCD_PIC_V1.1.c: 337: glcdTransfer(INST_IDMOFF, 1);
  6466  00DDD0  0E01               	movlw	1
  6467  00DDD2  6E04               	movwf	glcdTransfer@cmd,c
  6468  00DDD4  0EB1               	movlw	low GLCD_PIC@INST_IDMOFF
  6469  00DDD6  6EF6               	movwf	tblptrl,c
  6470  00DDD8                     	if	1	;There is more than 1 active tblptr byte
  6471  00DDD8  0EFF               	movlw	high GLCD_PIC@INST_IDMOFF
  6472  00DDDA  6EF7               	movwf	tblptrh,c
  6473  00DDDC                     	endif
  6474  00DDDC                     	if	0	;There are less than 3 active tblptr bytes
  6475  00DDDC                     	endif
  6476  00DDDC  0008               	tblrd		*
  6477  00DDDE  50F5               	movf	tablat,w,c
  6478  00DDE0  ECA0  F06A         	call	_glcdTransfer
  6479                           
  6480                           ;GLCD_PIC_V1.1.c: 339: glcdTransfer(INST_NORON, 1);
  6481  00DDE4  0E01               	movlw	1
  6482  00DDE6  6E04               	movwf	glcdTransfer@cmd,c
  6483  00DDE8  0EBE               	movlw	low GLCD_PIC@INST_NORON
  6484  00DDEA  6EF6               	movwf	tblptrl,c
  6485  00DDEC                     	if	1	;There is more than 1 active tblptr byte
  6486  00DDEC  0EFF               	movlw	high GLCD_PIC@INST_NORON
  6487  00DDEE  6EF7               	movwf	tblptrh,c
  6488  00DDF0                     	endif
  6489  00DDF0                     	if	0	;There are less than 3 active tblptr bytes
  6490  00DDF0                     	endif
  6491  00DDF0  0008               	tblrd		*
  6492  00DDF2  50F5               	movf	tablat,w,c
  6493  00DDF4  ECA0  F06A         	call	_glcdTransfer
  6494                           
  6495                           ;GLCD_PIC_V1.1.c: 342: MADCTLbits.MX = 1;
  6496  00DDF8  8C77               	bsf	_MADCTLbits,6,c
  6497                           
  6498                           ;GLCD_PIC_V1.1.c: 343: MADCTLbits.MY = 1;
  6499  00DDFA  8E77               	bsf	_MADCTLbits,7,c
  6500                           
  6501                           ;GLCD_PIC_V1.1.c: 344: MADCTLbits.MV = 1;
  6502  00DDFC  8A77               	bsf	_MADCTLbits,5,c
  6503                           
  6504                           ;GLCD_PIC_V1.1.c: 345: MADCTLbits.ML = 0;
  6505  00DDFE  9877               	bcf	_MADCTLbits,4,c
  6506                           
  6507                           ;GLCD_PIC_V1.1.c: 346: MADCTLbits.RGB = 0;
  6508  00DE00  9677               	bcf	_MADCTLbits,3,c
  6509                           
  6510                           ;GLCD_PIC_V1.1.c: 347: MADCTLbits.MH = 0;
  6511  00DE02  9477               	bcf	_MADCTLbits,2,c
  6512                           
  6513                           ;GLCD_PIC_V1.1.c: 348: { glcdTransfer(INST_MADCTL, 1); glcdTransfer(MADCTLbits.reg, 0);}
      +                          ;
  6514  00DE04  0E01               	movlw	1
  6515  00DE06  6E04               	movwf	glcdTransfer@cmd,c
  6516  00DE08  0EB2               	movlw	low GLCD_PIC@INST_MADCTL
  6517  00DE0A  6EF6               	movwf	tblptrl,c
  6518  00DE0C                     	if	1	;There is more than 1 active tblptr byte
  6519  00DE0C  0EFF               	movlw	high GLCD_PIC@INST_MADCTL
  6520  00DE0E  6EF7               	movwf	tblptrh,c
  6521  00DE10                     	endif
  6522  00DE10                     	if	0	;There are less than 3 active tblptr bytes
  6523  00DE10                     	endif
  6524  00DE10  0008               	tblrd		*
  6525  00DE12  50F5               	movf	tablat,w,c
  6526  00DE14  ECA0  F06A         	call	_glcdTransfer
  6527  00DE18  0E00               	movlw	0
  6528  00DE1A  6E04               	movwf	glcdTransfer@cmd,c
  6529  00DE1C  5077               	movf	_MADCTLbits,w,c
  6530  00DE1E  ECA0  F06A         	call	_glcdTransfer
  6531                           
  6532                           ;GLCD_PIC_V1.1.c: 352: glcdDrawRectangle(0, GLCD_SIZE_HORZ, 0, GLCD_SIZE_VERT, BLACK);
  6533  00DE22  0EE5               	movlw	low _GLCD_SIZE_HORZ
  6534  00DE24  6EF6               	movwf	tblptrl,c
  6535  00DE26                     	if	1	;There is more than 1 active tblptr byte
  6536  00DE26  0EFF               	movlw	high _GLCD_SIZE_HORZ
  6537  00DE28  6EF7               	movwf	tblptrh,c
  6538  00DE2A                     	endif
  6539  00DE2A                     	if	0	;There are less than 3 active tblptr bytes
  6540  00DE2A                     	endif
  6541  00DE2A  0008               	tblrd		*
  6542  00DE2C  CFF5 F007          	movff	tablat,glcdDrawRectangle@XE
  6543  00DE30  0E00               	movlw	0
  6544  00DE32  6E08               	movwf	glcdDrawRectangle@YS,c
  6545  00DE34  0EE4               	movlw	low _GLCD_SIZE_VERT
  6546  00DE36  6EF6               	movwf	tblptrl,c
  6547  00DE38                     	if	1	;There is more than 1 active tblptr byte
  6548  00DE38  0EFF               	movlw	high _GLCD_SIZE_VERT
  6549  00DE3A  6EF7               	movwf	tblptrh,c
  6550  00DE3C                     	endif
  6551  00DE3C                     	if	0	;There are less than 3 active tblptr bytes
  6552  00DE3C                     	endif
  6553  00DE3C  0008               	tblrd		*
  6554  00DE3E  CFF5 F009          	movff	tablat,glcdDrawRectangle@YE
  6555  00DE42  0EA0               	movlw	low _BLACK
  6556  00DE44  6EF6               	movwf	tblptrl,c
  6557  00DE46                     	if	1	;There is more than 1 active tblptr byte
  6558  00DE46  0EFF               	movlw	high _BLACK
  6559  00DE48  6EF7               	movwf	tblptrh,c
  6560  00DE4A                     	endif
  6561  00DE4A                     	if	0	;There are less than 3 active tblptr bytes
  6562  00DE4A                     	endif
  6563  00DE4A  0009               	tblrd		*+
  6564  00DE4C  CFF5 F00A          	movff	tablat,glcdDrawRectangle@color
  6565  00DE50  0009               	tblrd		*+
  6566  00DE52  CFF5 F00B          	movff	tablat,glcdDrawRectangle@color+1
  6567  00DE56  0009               	tblrd		*+
  6568  00DE58  CFF5 F00C          	movff	tablat,glcdDrawRectangle@color+2
  6569  00DE5C  000A               	tblrd		*-
  6570  00DE5E  CFF5 F00D          	movff	tablat,glcdDrawRectangle@color+3
  6571  00DE62  0E00               	movlw	0
  6572  00DE64  EC00  F06D         	call	_glcdDrawRectangle
  6573                           
  6574                           ;GLCD_PIC_V1.1.c: 354: glcdTransfer(INST_DISPON, 1);
  6575  00DE68  0E01               	movlw	1
  6576  00DE6A  6E04               	movwf	glcdTransfer@cmd,c
  6577  00DE6C  0EB9               	movlw	low GLCD_PIC@INST_DISPON
  6578  00DE6E  6EF6               	movwf	tblptrl,c
  6579  00DE70                     	if	1	;There is more than 1 active tblptr byte
  6580  00DE70  0EFF               	movlw	high GLCD_PIC@INST_DISPON
  6581  00DE72  6EF7               	movwf	tblptrh,c
  6582  00DE74                     	endif
  6583  00DE74                     	if	0	;There are less than 3 active tblptr bytes
  6584  00DE74                     	endif
  6585  00DE74  0008               	tblrd		*
  6586  00DE76  50F5               	movf	tablat,w,c
  6587  00DE78  ECA0  F06A         	call	_glcdTransfer
  6588                           
  6589                           ;GLCD_PIC_V1.1.c: 355: _delay((unsigned long)((10)*(40000000/4000.0)));
  6590  00DE7C  0E82               	movlw	130
  6591  00DE7E  6E1A               	movwf	??_initGLCD& (0+255),c
  6592  00DE80  0EDE               	movlw	222
  6593  00DE82                     u2797:
  6594  00DE82  2EE8               	decfsz	wreg,f,c
  6595  00DE84  D7FE               	bra	u2797
  6596  00DE86  2E1A               	decfsz	??_initGLCD& (0+255),f,c
  6597  00DE88  D7FC               	bra	u2797
  6598  00DE8A  0012               	return		;funcret
  6599  00DE8C                     __end_of_initGLCD:
  6600                           	opt stack 0
  6601                           tblptru	equ	0xFF8
  6602                           tblptrh	equ	0xFF7
  6603                           tblptrl	equ	0xFF6
  6604                           tablat	equ	0xFF5
  6605                           prodl	equ	0xFF3
  6606                           indf0	equ	0xFEF
  6607                           postinc0	equ	0xFEE
  6608                           plusw0	equ	0xFEB
  6609                           fsr0h	equ	0xFEA
  6610                           fsr0l	equ	0xFE9
  6611                           wreg	equ	0xFE8
  6612                           postdec1	equ	0xFE5
  6613                           plusw1	equ	0xFE3
  6614                           fsr1l	equ	0xFE1
  6615                           plusw2	equ	0xFDB
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function _spiInit *****************
  6621 ;; Defined at:
  6622 ;;		line 54 in file "SPI_PIC.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  divider         1    wreg     unsigned char 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  divider         1    0[COMRAM] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;Total ram usage:        1 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_initGLCD
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text11
  6650  00D62C                     __ptext11:
  6651                           	opt stack 0
  6652  00D62C                     _spiInit:
  6653                           	opt stack 28
  6654                           
  6655                           ;incstack = 0
  6656                           ;spiInit@divider stored from wreg
  6657  00D62C  6E01               	movwf	spiInit@divider,c
  6658                           
  6659                           ;SPI_PIC.c: 65: SSPCON1bits.SSPEN = 0;
  6660  00D62E  9AC6               	bcf	4038,5,c	;volatile
  6661                           
  6662                           ;SPI_PIC.c: 66: SSPSTAT = 0x00;
  6663  00D630  0E00               	movlw	0
  6664  00D632  6EC7               	movwf	4039,c	;volatile
  6665                           
  6666                           ;SPI_PIC.c: 71: switch(divider){
  6667  00D634  D007               	goto	l185
  6668  00D636                     
  6669                           ;SPI_PIC.c: 76: SSPCON1 = 0b00010001;
  6670  00D636  0E11               	movlw	17
  6671  00D638  D003               	goto	L6
  6672  00D63A                     
  6673                           ;SPI_PIC.c: 79: SSPCON1 = 0b00010010;
  6674  00D63A  0E12               	movlw	18
  6675  00D63C  D001               	goto	L6
  6676  00D63E                     
  6677                           ;SPI_PIC.c: 82: SSPCON1 = 0b00010000;
  6678  00D63E  0E10               	movlw	16
  6679  00D640                     L6:
  6680  00D640  6EC6               	movwf	4038,c	;volatile
  6681                           
  6682                           ;SPI_PIC.c: 83: }
  6683  00D642  D00B               	goto	l187
  6684  00D644                     l185:
  6685  00D644  5001               	movf	spiInit@divider,w,c
  6686                           
  6687                           ; Switch size 1, requested type "space"
  6688                           ; Number of cases is 3, Range of values is 4 to 64
  6689                           ; switch strategies available:
  6690                           ; Name         Instructions Cycles
  6691                           ; simple_byte           10     6 (average)
  6692                           ;	Chosen strategy is simple_byte
  6693  00D646  0A04               	xorlw	4	; case 4
  6694  00D648  B4D8               	btfsc	status,2,c
  6695  00D64A  D7F9               	goto	l190
  6696  00D64C  0A14               	xorlw	20	; case 16
  6697  00D64E  B4D8               	btfsc	status,2,c
  6698  00D650  D7F2               	goto	l188
  6699  00D652  0A50               	xorlw	80	; case 64
  6700  00D654  B4D8               	btfsc	status,2,c
  6701  00D656  D7F1               	goto	l189
  6702  00D658  D7F2               	goto	l190
  6703  00D65A                     l187:
  6704                           
  6705                           ;SPI_PIC.c: 86: TRISCbits.TRISC5 = 0;
  6706  00D65A  9A94               	bcf	3988,5,c	;volatile
  6707                           
  6708                           ;SPI_PIC.c: 87: TRISCbits.TRISC4 = 1;
  6709  00D65C  8894               	bsf	3988,4,c	;volatile
  6710                           
  6711                           ;SPI_PIC.c: 88: TRISCbits.TRISC3 = 0;
  6712  00D65E  9694               	bcf	3988,3,c	;volatile
  6713                           
  6714                           ;SPI_PIC.c: 91: SSPCON1bits.SSPEN = 1;
  6715  00D660  8AC6               	bsf	4038,5,c	;volatile
  6716  00D662  0012               	return		;funcret
  6717  00D664                     __end_of_spiInit:
  6718                           	opt stack 0
  6719                           tblptru	equ	0xFF8
  6720                           tblptrh	equ	0xFF7
  6721                           tblptrl	equ	0xFF6
  6722                           tablat	equ	0xFF5
  6723                           prodl	equ	0xFF3
  6724                           indf0	equ	0xFEF
  6725                           postinc0	equ	0xFEE
  6726                           plusw0	equ	0xFEB
  6727                           fsr0h	equ	0xFEA
  6728                           fsr0l	equ	0xFE9
  6729                           wreg	equ	0xFE8
  6730                           postdec1	equ	0xFE5
  6731                           plusw1	equ	0xFE3
  6732                           fsr1l	equ	0xFE1
  6733                           plusw2	equ	0xFDB
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function _glcdSetCOLMOD *****************
  6739 ;; Defined at:
  6740 ;;		line 167 in file "GLCD_PIC_V1.1.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  numBitsPerPi    1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  numBitsPerPi    1    6[COMRAM] unsigned char 
  6745 ;;  rawData         2    7[COMRAM] unsigned short 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      void 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;Total ram usage:        3 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    3
  6762 ;; This function calls:
  6763 ;;		_glcdTransfer
  6764 ;; This function is called by:
  6765 ;;		_initGLCD
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text12
  6770  00D664                     __ptext12:
  6771                           	opt stack 0
  6772  00D664                     _glcdSetCOLMOD:
  6773                           	opt stack 25
  6774                           
  6775                           ;incstack = 0
  6776                           ;glcdSetCOLMOD@numBitsPerPixel stored from wreg
  6777  00D664  6E07               	movwf	glcdSetCOLMOD@numBitsPerPixel,c
  6778                           
  6779                           ;GLCD_PIC_V1.1.c: 176: unsigned short rawData;
  6780                           ;GLCD_PIC_V1.1.c: 177: switch(numBitsPerPixel){
  6781  00D666  D00D               	goto	l320
  6782  00D668                     
  6783                           ;GLCD_PIC_V1.1.c: 179: rawData = 0b00000011;
  6784  00D668  0E00               	movlw	0
  6785  00D66A  6E09               	movwf	glcdSetCOLMOD@rawData+1,c
  6786  00D66C  0E03               	movlw	3
  6787  00D66E  D003               	goto	L8
  6788  00D670                     
  6789                           ;GLCD_PIC_V1.1.c: 182: rawData = 0b00000101;
  6790  00D670  0E00               	movlw	0
  6791  00D672  6E09               	movwf	glcdSetCOLMOD@rawData+1,c
  6792  00D674  0E05               	movlw	5
  6793  00D676                     L8:
  6794  00D676  6E08               	movwf	glcdSetCOLMOD@rawData,c
  6795                           
  6796                           ;GLCD_PIC_V1.1.c: 186: break;
  6797  00D678  D00D               	goto	l322
  6798  00D67A                     
  6799                           ;GLCD_PIC_V1.1.c: 188: rawData = 0b00000110;
  6800  00D67A  0E00               	movlw	0
  6801  00D67C  6E09               	movwf	glcdSetCOLMOD@rawData+1,c
  6802  00D67E  0E06               	movlw	6
  6803  00D680  D7FA               	goto	L8
  6804  00D682                     l320:
  6805  00D682  5007               	movf	glcdSetCOLMOD@numBitsPerPixel,w,c
  6806                           
  6807                           ; Switch size 1, requested type "space"
  6808                           ; Number of cases is 3, Range of values is 12 to 18
  6809                           ; switch strategies available:
  6810                           ; Name         Instructions Cycles
  6811                           ; simple_byte           10     6 (average)
  6812                           ;	Chosen strategy is simple_byte
  6813  00D684  0A0C               	xorlw	12	; case 12
  6814  00D686  B4D8               	btfsc	status,2,c
  6815  00D688  D7EF               	goto	l321
  6816  00D68A  0A1C               	xorlw	28	; case 16
  6817  00D68C  B4D8               	btfsc	status,2,c
  6818  00D68E  D7F0               	goto	l323
  6819  00D690  0A02               	xorlw	2	; case 18
  6820  00D692  D7F3               	goto	l325
  6821  00D694                     l322:
  6822                           
  6823                           ;GLCD_PIC_V1.1.c: 191: glcdTransfer(INST_COLMOD, 1);
  6824  00D694  0E01               	movlw	1
  6825  00D696  6E04               	movwf	glcdTransfer@cmd,c
  6826  00D698  0EAF               	movlw	low GLCD_PIC@INST_COLMOD
  6827  00D69A  6EF6               	movwf	tblptrl,c
  6828  00D69C                     	if	1	;There is more than 1 active tblptr byte
  6829  00D69C  0EFF               	movlw	high GLCD_PIC@INST_COLMOD
  6830  00D69E  6EF7               	movwf	tblptrh,c
  6831  00D6A0                     	endif
  6832  00D6A0                     	if	0	;There are less than 3 active tblptr bytes
  6833  00D6A0                     	endif
  6834  00D6A0  0008               	tblrd		*
  6835  00D6A2  50F5               	movf	tablat,w,c
  6836  00D6A4  ECA0  F06A         	call	_glcdTransfer
  6837                           
  6838                           ;GLCD_PIC_V1.1.c: 192: glcdTransfer(rawData, 0);
  6839  00D6A8  0E00               	movlw	0
  6840  00D6AA  6E04               	movwf	glcdTransfer@cmd,c
  6841  00D6AC  5008               	movf	glcdSetCOLMOD@rawData,w,c
  6842  00D6AE  ECA0  F06A         	call	_glcdTransfer
  6843  00D6B2  0012               	return		;funcret
  6844  00D6B4                     __end_of_glcdSetCOLMOD:
  6845                           	opt stack 0
  6846                           tblptru	equ	0xFF8
  6847                           tblptrh	equ	0xFF7
  6848                           tblptrl	equ	0xFF6
  6849                           tablat	equ	0xFF5
  6850                           prodl	equ	0xFF3
  6851                           indf0	equ	0xFEF
  6852                           postinc0	equ	0xFEE
  6853                           plusw0	equ	0xFEB
  6854                           fsr0h	equ	0xFEA
  6855                           fsr0l	equ	0xFE9
  6856                           wreg	equ	0xFE8
  6857                           postdec1	equ	0xFE5
  6858                           plusw1	equ	0xFE3
  6859                           fsr1l	equ	0xFE1
  6860                           plusw2	equ	0xFDB
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _glcdDrawRectangle *****************
  6866 ;; Defined at:
  6867 ;;		line 38 in file "GLCD_PIC_V1.1.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  XS              1    wreg     unsigned char 
  6870 ;;  XE              1    6[COMRAM] unsigned char 
  6871 ;;  YS              1    7[COMRAM] unsigned char 
  6872 ;;  YE              1    8[COMRAM] unsigned char 
  6873 ;;  color           4    9[COMRAM] unsigned long 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  XS              1   24[COMRAM] unsigned char 
  6876 ;;  i               2   19[COMRAM] unsigned short 
  6877 ;;  colorData       3   21[COMRAM] unsigned char [3]
  6878 ;;  numLoops        2   17[COMRAM] unsigned short 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6888 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;Total ram usage:       19 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    3
  6895 ;; This function calls:
  6896 ;;		___wmul
  6897 ;;		_glcdTransfer
  6898 ;;		_spiSend
  6899 ;; This function is called by:
  6900 ;;		_main
  6901 ;;		_glcdDrawPixel
  6902 ;;		_initGLCD
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text13
  6907  00DA00                     __ptext13:
  6908                           	opt stack 0
  6909  00DA00                     _glcdDrawRectangle:
  6910                           	opt stack 23
  6911                           
  6912                           ;incstack = 0
  6913                           ;glcdDrawRectangle@XS stored from wreg
  6914  00DA00  6E19               	movwf	glcdDrawRectangle@XS,c
  6915                           
  6916                           ;GLCD_PIC_V1.1.c: 58: if(MADCTLbits.MX == 1 && MADCTLbits.MV ==1){
  6917  00DA02  BC77               	btfsc	_MADCTLbits,6,c
  6918  00DA04  AA77               	btfss	_MADCTLbits,5,c
  6919  00DA06  D005               	goto	l301
  6920                           
  6921                           ;GLCD_PIC_V1.1.c: 60: YS += 3;
  6922  00DA08  0E03               	movlw	3
  6923  00DA0A  2608               	addwf	glcdDrawRectangle@YS,f,c
  6924                           
  6925                           ;GLCD_PIC_V1.1.c: 61: YE += 3;
  6926  00DA0C  0E03               	movlw	3
  6927  00DA0E  2609               	addwf	glcdDrawRectangle@YE,f,c
  6928  00DA10  D015               	goto	l1964
  6929  00DA12                     l301:
  6930                           
  6931                           ;GLCD_PIC_V1.1.c: 65: else if(MADCTLbits.MY == 1){
  6932  00DA12  AE77               	btfss	_MADCTLbits,7,c
  6933  00DA14  D008               	goto	l303
  6934                           
  6935                           ;GLCD_PIC_V1.1.c: 67: YS += 2;
  6936  00DA16  0E02               	movlw	2
  6937  00DA18  2608               	addwf	glcdDrawRectangle@YS,f,c
  6938                           
  6939                           ;GLCD_PIC_V1.1.c: 68: YE += 2;
  6940  00DA1A  0E02               	movlw	2
  6941  00DA1C  2609               	addwf	glcdDrawRectangle@YE,f,c
  6942                           
  6943                           ;GLCD_PIC_V1.1.c: 69: XS += 3;
  6944  00DA1E  0E03               	movlw	3
  6945  00DA20  2619               	addwf	glcdDrawRectangle@XS,f,c
  6946                           
  6947                           ;GLCD_PIC_V1.1.c: 70: XE += 3;
  6948  00DA22  0E03               	movlw	3
  6949  00DA24  D00E               	goto	L10
  6950  00DA26                     l303:
  6951                           
  6952                           ;GLCD_PIC_V1.1.c: 72: else if(MADCTLbits.MX == 1){
  6953  00DA26  AC77               	btfss	_MADCTLbits,6,c
  6954  00DA28  D007               	goto	l305
  6955                           
  6956                           ;GLCD_PIC_V1.1.c: 74: YS += 2;
  6957  00DA2A  0E02               	movlw	2
  6958  00DA2C  2608               	addwf	glcdDrawRectangle@YS,f,c
  6959                           
  6960                           ;GLCD_PIC_V1.1.c: 75: YE += 2;
  6961  00DA2E  0E02               	movlw	2
  6962  00DA30  2609               	addwf	glcdDrawRectangle@YE,f,c
  6963                           
  6964                           ;GLCD_PIC_V1.1.c: 76: XS += 1;
  6965  00DA32  2A19               	incf	glcdDrawRectangle@XS,f,c
  6966                           
  6967                           ;GLCD_PIC_V1.1.c: 77: XE += 1;
  6968  00DA34  2A07               	incf	glcdDrawRectangle@XE,f,c
  6969                           
  6970                           ;GLCD_PIC_V1.1.c: 78: }
  6971  00DA36  D006               	goto	l306
  6972  00DA38                     l305:
  6973                           
  6974                           ;GLCD_PIC_V1.1.c: 79: else{
  6975                           ;GLCD_PIC_V1.1.c: 81: YS += 1;
  6976  00DA38  2A08               	incf	glcdDrawRectangle@YS,f,c
  6977                           
  6978                           ;GLCD_PIC_V1.1.c: 82: YE += 1;
  6979  00DA3A  2A09               	incf	glcdDrawRectangle@YE,f,c
  6980  00DA3C                     l1964:
  6981                           
  6982                           ;GLCD_PIC_V1.1.c: 83: XS += 2;
  6983  00DA3C  0E02               	movlw	2
  6984  00DA3E  2619               	addwf	glcdDrawRectangle@XS,f,c
  6985                           
  6986                           ;GLCD_PIC_V1.1.c: 84: XE += 2;
  6987  00DA40  0E02               	movlw	2
  6988  00DA42                     L10:
  6989  00DA42  2607               	addwf	glcdDrawRectangle@XE,f,c
  6990  00DA44                     l306:
  6991                           
  6992                           ;GLCD_PIC_V1.1.c: 85: }
  6993                           ;GLCD_PIC_V1.1.c: 89: glcdTransfer(INST_RASET, 1);
  6994  00DA44  0E01               	movlw	1
  6995  00DA46  6E04               	movwf	glcdTransfer@cmd,c
  6996  00DA48  0EB7               	movlw	low GLCD_PIC@INST_RASET
  6997  00DA4A  6EF6               	movwf	tblptrl,c
  6998  00DA4C                     	if	1	;There is more than 1 active tblptr byte
  6999  00DA4C  0EFF               	movlw	high GLCD_PIC@INST_RASET
  7000  00DA4E  6EF7               	movwf	tblptrh,c
  7001  00DA50                     	endif
  7002  00DA50                     	if	0	;There are less than 3 active tblptr bytes
  7003  00DA50                     	endif
  7004  00DA50  0008               	tblrd		*
  7005  00DA52  50F5               	movf	tablat,w,c
  7006  00DA54  ECA0  F06A         	call	_glcdTransfer
  7007                           
  7008                           ;GLCD_PIC_V1.1.c: 90: glcdTransfer(0x00, 0);
  7009  00DA58  0E00               	movlw	0
  7010  00DA5A  6E04               	movwf	glcdTransfer@cmd,c
  7011  00DA5C  0E00               	movlw	0
  7012  00DA5E  ECA0  F06A         	call	_glcdTransfer
  7013                           
  7014                           ;GLCD_PIC_V1.1.c: 91: glcdTransfer(XS, 0);
  7015  00DA62  0E00               	movlw	0
  7016  00DA64  6E04               	movwf	glcdTransfer@cmd,c
  7017  00DA66  5019               	movf	glcdDrawRectangle@XS,w,c
  7018  00DA68  ECA0  F06A         	call	_glcdTransfer
  7019                           
  7020                           ;GLCD_PIC_V1.1.c: 92: glcdTransfer(0x00, 0);
  7021  00DA6C  0E00               	movlw	0
  7022  00DA6E  6E04               	movwf	glcdTransfer@cmd,c
  7023  00DA70  0E00               	movlw	0
  7024  00DA72  ECA0  F06A         	call	_glcdTransfer
  7025                           
  7026                           ;GLCD_PIC_V1.1.c: 93: glcdTransfer(XE - 1, 0);
  7027  00DA76  0E00               	movlw	0
  7028  00DA78  6E04               	movwf	glcdTransfer@cmd,c
  7029  00DA7A  0407               	decf	glcdDrawRectangle@XE,w,c
  7030  00DA7C  ECA0  F06A         	call	_glcdTransfer
  7031                           
  7032                           ;GLCD_PIC_V1.1.c: 97: glcdTransfer(INST_CASET, 1);
  7033  00DA80  0E01               	movlw	1
  7034  00DA82  6E04               	movwf	glcdTransfer@cmd,c
  7035  00DA84  0EB8               	movlw	low GLCD_PIC@INST_CASET
  7036  00DA86  6EF6               	movwf	tblptrl,c
  7037  00DA88                     	if	1	;There is more than 1 active tblptr byte
  7038  00DA88  0EFF               	movlw	high GLCD_PIC@INST_CASET
  7039  00DA8A  6EF7               	movwf	tblptrh,c
  7040  00DA8C                     	endif
  7041  00DA8C                     	if	0	;There are less than 3 active tblptr bytes
  7042  00DA8C                     	endif
  7043  00DA8C  0008               	tblrd		*
  7044  00DA8E  50F5               	movf	tablat,w,c
  7045  00DA90  ECA0  F06A         	call	_glcdTransfer
  7046                           
  7047                           ;GLCD_PIC_V1.1.c: 98: glcdTransfer(0x00, 0);
  7048  00DA94  0E00               	movlw	0
  7049  00DA96  6E04               	movwf	glcdTransfer@cmd,c
  7050  00DA98  0E00               	movlw	0
  7051  00DA9A  ECA0  F06A         	call	_glcdTransfer
  7052                           
  7053                           ;GLCD_PIC_V1.1.c: 99: glcdTransfer(YS, 0);
  7054  00DA9E  0E00               	movlw	0
  7055  00DAA0  6E04               	movwf	glcdTransfer@cmd,c
  7056  00DAA2  5008               	movf	glcdDrawRectangle@YS,w,c
  7057  00DAA4  ECA0  F06A         	call	_glcdTransfer
  7058                           
  7059                           ;GLCD_PIC_V1.1.c: 100: glcdTransfer(0x00, 0);
  7060  00DAA8  0E00               	movlw	0
  7061  00DAAA  6E04               	movwf	glcdTransfer@cmd,c
  7062  00DAAC  0E00               	movlw	0
  7063  00DAAE  ECA0  F06A         	call	_glcdTransfer
  7064                           
  7065                           ;GLCD_PIC_V1.1.c: 101: glcdTransfer(YE - 1, 0);
  7066  00DAB2  0E00               	movlw	0
  7067  00DAB4  6E04               	movwf	glcdTransfer@cmd,c
  7068  00DAB6  0409               	decf	glcdDrawRectangle@YE,w,c
  7069  00DAB8  ECA0  F06A         	call	_glcdTransfer
  7070                           
  7071                           ;GLCD_PIC_V1.1.c: 103: glcdTransfer(INST_RAMWR, 1);
  7072  00DABC  0E01               	movlw	1
  7073  00DABE  6E04               	movwf	glcdTransfer@cmd,c
  7074  00DAC0  0EB6               	movlw	low GLCD_PIC@INST_RAMWR
  7075  00DAC2  6EF6               	movwf	tblptrl,c
  7076  00DAC4                     	if	1	;There is more than 1 active tblptr byte
  7077  00DAC4  0EFF               	movlw	high GLCD_PIC@INST_RAMWR
  7078  00DAC6  6EF7               	movwf	tblptrh,c
  7079  00DAC8                     	endif
  7080  00DAC8                     	if	0	;There are less than 3 active tblptr bytes
  7081  00DAC8                     	endif
  7082  00DAC8  0008               	tblrd		*
  7083  00DACA  50F5               	movf	tablat,w,c
  7084  00DACC  ECA0  F06A         	call	_glcdTransfer
  7085                           
  7086                           ;GLCD_PIC_V1.1.c: 107: if((XE == XS) && (YE == YS)){
  7087  00DAD0  5019               	movf	glcdDrawRectangle@XS,w,c
  7088  00DAD2  1807               	xorwf	glcdDrawRectangle@XE,w,c
  7089  00DAD4  A4D8               	btfss	status,2,c
  7090  00DAD6  D014               	goto	l307
  7091  00DAD8  5008               	movf	glcdDrawRectangle@YS,w,c
  7092  00DADA  1809               	xorwf	glcdDrawRectangle@YE,w,c
  7093  00DADC  A4D8               	btfss	status,2,c
  7094  00DADE  D010               	goto	l307
  7095                           
  7096                           ;GLCD_PIC_V1.1.c: 114: glcdTransfer(color & 0xFF, 0);
  7097  00DAE0  0E00               	movlw	0
  7098  00DAE2  6E04               	movwf	glcdTransfer@cmd,c
  7099  00DAE4  500A               	movf	glcdDrawRectangle@color,w,c
  7100  00DAE6  ECA0  F06A         	call	_glcdTransfer
  7101                           
  7102                           ;GLCD_PIC_V1.1.c: 115: glcdTransfer((color >> 8) & 0xFF, 0);
  7103  00DAEA  0E00               	movlw	0
  7104  00DAEC  6E04               	movwf	glcdTransfer@cmd,c
  7105  00DAEE  500B               	movf	glcdDrawRectangle@color+1,w,c
  7106  00DAF0  ECA0  F06A         	call	_glcdTransfer
  7107                           
  7108                           ;GLCD_PIC_V1.1.c: 116: glcdTransfer((color >> 16) & 0xFF, 0);
  7109  00DAF4  0E00               	movlw	0
  7110  00DAF6  6E04               	movwf	glcdTransfer@cmd,c
  7111  00DAF8  500C               	movf	glcdDrawRectangle@color+2,w,c
  7112  00DAFA  ECA0  F06A         	call	_glcdTransfer
  7113                           
  7114                           ;GLCD_PIC_V1.1.c: 117: }
  7115  00DAFE  0012               	return	
  7116  00DB00                     l307:
  7117                           
  7118                           ;GLCD_PIC_V1.1.c: 118: else{
  7119                           ;GLCD_PIC_V1.1.c: 130: unsigned short numLoops = (XE - XS) * (YE - YS);
  7120  00DB00  5019               	movf	glcdDrawRectangle@XS,w,c
  7121  00DB02  6E0E               	movwf	??_glcdDrawRectangle& (0+255),c
  7122  00DB04  6A0F               	clrf	(??_glcdDrawRectangle+1)& (0+255),c
  7123  00DB06  1E0E               	comf	??_glcdDrawRectangle,f,c
  7124  00DB08  1E0F               	comf	??_glcdDrawRectangle+1,f,c
  7125  00DB0A  4A0E               	infsnz	??_glcdDrawRectangle,f,c
  7126  00DB0C  2A0F               	incf	??_glcdDrawRectangle+1,f,c
  7127  00DB0E  5007               	movf	glcdDrawRectangle@XE,w,c
  7128  00DB10  240E               	addwf	??_glcdDrawRectangle,w,c
  7129  00DB12  6E01               	movwf	___wmul@multiplier,c
  7130  00DB14  0E00               	movlw	0
  7131  00DB16  200F               	addwfc	??_glcdDrawRectangle+1,w,c
  7132  00DB18  6E02               	movwf	___wmul@multiplier+1,c
  7133  00DB1A  5008               	movf	glcdDrawRectangle@YS,w,c
  7134  00DB1C  6E10               	movwf	(??_glcdDrawRectangle+2)& (0+255),c
  7135  00DB1E  6A11               	clrf	(??_glcdDrawRectangle+3)& (0+255),c
  7136  00DB20  1E10               	comf	??_glcdDrawRectangle+2,f,c
  7137  00DB22  1E11               	comf	??_glcdDrawRectangle+3,f,c
  7138  00DB24  4A10               	infsnz	??_glcdDrawRectangle+2,f,c
  7139  00DB26  2A11               	incf	??_glcdDrawRectangle+3,f,c
  7140  00DB28  5009               	movf	glcdDrawRectangle@YE,w,c
  7141  00DB2A  2410               	addwf	??_glcdDrawRectangle+2,w,c
  7142  00DB2C  6E03               	movwf	___wmul@multiplicand,c
  7143  00DB2E  0E00               	movlw	0
  7144  00DB30  2011               	addwfc	??_glcdDrawRectangle+3,w,c
  7145  00DB32  6E04               	movwf	___wmul@multiplicand+1,c
  7146  00DB34  EC8D  F06A         	call	___wmul	;wreg free
  7147  00DB38  C001  F012         	movff	?___wmul,glcdDrawRectangle@numLoops
  7148  00DB3C  C002  F013         	movff	?___wmul+1,glcdDrawRectangle@numLoops+1
  7149                           
  7150                           ;GLCD_PIC_V1.1.c: 131: unsigned char colorData[3];
  7151                           ;GLCD_PIC_V1.1.c: 132: colorData[0] = color & 0xFF;
  7152  00DB40  C00A  F016         	movff	glcdDrawRectangle@color,glcdDrawRectangle@colorData
  7153                           
  7154                           ;GLCD_PIC_V1.1.c: 133: colorData[1] = (color >> 8) & 0xFF;
  7155  00DB44  C00B  F017         	movff	glcdDrawRectangle@color+1,glcdDrawRectangle@colorData+1
  7156                           
  7157                           ;GLCD_PIC_V1.1.c: 134: colorData[2] = (color >> 16) & 0xFF;
  7158  00DB48  C00C  F018         	movff	glcdDrawRectangle@color+2,glcdDrawRectangle@colorData+2
  7159                           
  7160                           ;GLCD_PIC_V1.1.c: 136: LATDbits.LATD0 = 0;
  7161  00DB4C  908C               	bcf	3980,0,c	;volatile
  7162                           
  7163                           ;GLCD_PIC_V1.1.c: 137: LATDbits.LATD1 = 1;
  7164  00DB4E  828C               	bsf	3980,1,c	;volatile
  7165                           
  7166                           ;GLCD_PIC_V1.1.c: 138: for(unsigned short i = 0; i < numLoops; i++){
  7167  00DB50  0E00               	movlw	0
  7168  00DB52  6E15               	movwf	glcdDrawRectangle@i+1,c
  7169  00DB54  0E00               	movlw	0
  7170  00DB56  6E14               	movwf	glcdDrawRectangle@i,c
  7171  00DB58  D00B               	goto	l309
  7172  00DB5A                     
  7173                           ;GLCD_PIC_V1.1.c: 139: spiSend(colorData[0]);
  7174  00DB5A  5016               	movf	glcdDrawRectangle@colorData,w,c
  7175  00DB5C  EC6A  F06A         	call	_spiSend
  7176                           
  7177                           ;GLCD_PIC_V1.1.c: 140: spiSend(colorData[1]);
  7178  00DB60  5017               	movf	glcdDrawRectangle@colorData+1,w,c
  7179  00DB62  EC6A  F06A         	call	_spiSend
  7180                           
  7181                           ;GLCD_PIC_V1.1.c: 141: spiSend(colorData[2]);
  7182  00DB66  5018               	movf	glcdDrawRectangle@colorData+2,w,c
  7183  00DB68  EC6A  F06A         	call	_spiSend
  7184  00DB6C  4A14               	infsnz	glcdDrawRectangle@i,f,c
  7185  00DB6E  2A15               	incf	glcdDrawRectangle@i+1,f,c
  7186  00DB70                     l309:
  7187  00DB70  5012               	movf	glcdDrawRectangle@numLoops,w,c
  7188  00DB72  5C14               	subwf	glcdDrawRectangle@i,w,c
  7189  00DB74  5013               	movf	glcdDrawRectangle@numLoops+1,w,c
  7190  00DB76  5815               	subwfb	glcdDrawRectangle@i+1,w,c
  7191  00DB78  A0D8               	btfss	status,0,c
  7192  00DB7A  D7EF               	goto	l310
  7193                           
  7194                           ;GLCD_PIC_V1.1.c: 142: }
  7195                           ;GLCD_PIC_V1.1.c: 143: LATDbits.LATD0 = 1;
  7196  00DB7C  808C               	bsf	3980,0,c	;volatile
  7197  00DB7E  0012               	return	
  7198  00DB80                     __end_of_glcdDrawRectangle:
  7199                           	opt stack 0
  7200                           tblptru	equ	0xFF8
  7201                           tblptrh	equ	0xFF7
  7202                           tblptrl	equ	0xFF6
  7203                           tablat	equ	0xFF5
  7204                           prodl	equ	0xFF3
  7205                           indf0	equ	0xFEF
  7206                           postinc0	equ	0xFEE
  7207                           plusw0	equ	0xFEB
  7208                           fsr0h	equ	0xFEA
  7209                           fsr0l	equ	0xFE9
  7210                           wreg	equ	0xFE8
  7211                           postdec1	equ	0xFE5
  7212                           plusw1	equ	0xFE3
  7213                           fsr1l	equ	0xFE1
  7214                           plusw2	equ	0xFDB
  7215                           fsr2h	equ	0xFDA
  7216                           fsr2l	equ	0xFD9
  7217                           status	equ	0xFD8
  7218                           
  7219 ;; *************** function _glcdTransfer *****************
  7220 ;; Defined at:
  7221 ;;		line 18 in file "GLCD_PIC_V1.1.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  byte            1    wreg     unsigned char 
  7224 ;;  cmd             1    3[COMRAM] unsigned char 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  byte            1    5[COMRAM] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7236 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;Total ram usage:        3 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; Hardware stack levels required when called:    2
  7243 ;; This function calls:
  7244 ;;		_spiSend
  7245 ;; This function is called by:
  7246 ;;		_glcdDrawRectangle
  7247 ;;		_glcdSetCOLMOD
  7248 ;;		_initGLCD
  7249 ;;		_glcdSetOrigin
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text14
  7254  00D540                     __ptext14:
  7255                           	opt stack 0
  7256  00D540                     _glcdTransfer:
  7257                           	opt stack 23
  7258                           
  7259                           ;incstack = 0
  7260                           ;glcdTransfer@byte stored from wreg
  7261  00D540  6E06               	movwf	glcdTransfer@byte,c
  7262                           
  7263                           ;GLCD_PIC_V1.1.c: 27: LATDbits.LATD1 = (cmd == 1) ? 0 : 1;
  7264  00D542  0404               	decf	glcdTransfer@cmd,w,c
  7265  00D544  B4D8               	btfsc	status,2,c
  7266  00D546  D003               	goto	u1400
  7267  00D548  6A05               	clrf	??_glcdTransfer& (0+255),c
  7268  00D54A  2A05               	incf	??_glcdTransfer& (0+255),f,c
  7269  00D54C  D001               	goto	u1418
  7270  00D54E                     u1400:
  7271  00D54E  6A05               	clrf	??_glcdTransfer& (0+255),c
  7272  00D550                     u1418:
  7273  00D550  4605               	rlncf	??_glcdTransfer,f,c
  7274  00D552  508C               	movf	3980,w,c	;volatile
  7275  00D554  1805               	xorwf	??_glcdTransfer,w,c
  7276  00D556  0BFD               	andlw	-3
  7277  00D558  1805               	xorwf	??_glcdTransfer,w,c
  7278  00D55A  6E8C               	movwf	3980,c	;volatile
  7279                           
  7280                           ;GLCD_PIC_V1.1.c: 31: LATDbits.LATD0 = 0;
  7281  00D55C  908C               	bcf	3980,0,c	;volatile
  7282                           
  7283                           ;GLCD_PIC_V1.1.c: 33: spiSend(byte);
  7284  00D55E  5006               	movf	glcdTransfer@byte,w,c
  7285  00D560  EC6A  F06A         	call	_spiSend
  7286                           
  7287                           ;GLCD_PIC_V1.1.c: 35: LATDbits.LATD0 = 1;
  7288  00D564  808C               	bsf	3980,0,c	;volatile
  7289  00D566  0012               	return		;funcret
  7290  00D568                     __end_of_glcdTransfer:
  7291                           	opt stack 0
  7292                           tblptru	equ	0xFF8
  7293                           tblptrh	equ	0xFF7
  7294                           tblptrl	equ	0xFF6
  7295                           tablat	equ	0xFF5
  7296                           prodl	equ	0xFF3
  7297                           indf0	equ	0xFEF
  7298                           postinc0	equ	0xFEE
  7299                           plusw0	equ	0xFEB
  7300                           fsr0h	equ	0xFEA
  7301                           fsr0l	equ	0xFE9
  7302                           wreg	equ	0xFE8
  7303                           postdec1	equ	0xFE5
  7304                           plusw1	equ	0xFE3
  7305                           fsr1l	equ	0xFE1
  7306                           plusw2	equ	0xFDB
  7307                           fsr2h	equ	0xFDA
  7308                           fsr2l	equ	0xFD9
  7309                           status	equ	0xFD8
  7310                           
  7311 ;; *************** function _spiSend *****************
  7312 ;; Defined at:
  7313 ;;		line 33 in file "SPI_PIC.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  val             1    wreg     unsigned char 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  val             1    2[COMRAM] unsigned char 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;Total ram usage:        1 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    1
  7334 ;; This function calls:
  7335 ;;		_spiTransfer
  7336 ;; This function is called by:
  7337 ;;		_glcdTransfer
  7338 ;;		_glcdDrawRectangle
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text15
  7343  00D4D4                     __ptext15:
  7344                           	opt stack 0
  7345  00D4D4                     _spiSend:
  7346                           	opt stack 24
  7347                           
  7348                           ;incstack = 0
  7349                           ;spiSend@val stored from wreg
  7350  00D4D4  6E03               	movwf	spiSend@val,c
  7351                           
  7352                           ;SPI_PIC.c: 41: spiTransfer(val);
  7353  00D4D6  5003               	movf	spiSend@val,w,c
  7354  00D4D8  EC7B  F06A         	call	_spiTransfer
  7355  00D4DC  0012               	return		;funcret
  7356  00D4DE                     __end_of_spiSend:
  7357                           	opt stack 0
  7358                           tblptru	equ	0xFF8
  7359                           tblptrh	equ	0xFF7
  7360                           tblptrl	equ	0xFF6
  7361                           tablat	equ	0xFF5
  7362                           prodl	equ	0xFF3
  7363                           indf0	equ	0xFEF
  7364                           postinc0	equ	0xFEE
  7365                           plusw0	equ	0xFEB
  7366                           fsr0h	equ	0xFEA
  7367                           fsr0l	equ	0xFE9
  7368                           wreg	equ	0xFE8
  7369                           postdec1	equ	0xFE5
  7370                           plusw1	equ	0xFE3
  7371                           fsr1l	equ	0xFE1
  7372                           plusw2	equ	0xFDB
  7373                           fsr2h	equ	0xFDA
  7374                           fsr2l	equ	0xFD9
  7375                           status	equ	0xFD8
  7376                           
  7377 ;; *************** function _spiTransfer *****************
  7378 ;; Defined at:
  7379 ;;		line 12 in file "SPI_PIC.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  byteToTransf    1    wreg     unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  byteToTransf    1    1[COMRAM] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      unsigned char 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;Total ram usage:        2 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_spiSend
  7403 ;;		_spiReceive
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text16
  7408  00D4F6                     __ptext16:
  7409                           	opt stack 0
  7410  00D4F6                     _spiTransfer:
  7411                           	opt stack 24
  7412                           
  7413                           ;incstack = 0
  7414                           ;spiTransfer@byteToTransfer stored from wreg
  7415  00D4F6  6E02               	movwf	spiTransfer@byteToTransfer,c
  7416                           
  7417                           ;SPI_PIC.c: 23: SSPBUF = byteToTransfer;
  7418  00D4F8  C002  FFC9         	movff	spiTransfer@byteToTransfer,4041	;volatile
  7419  00D4FC                     l1926:
  7420  00D4FC  B69E               	btfsc	3998,3,c	;volatile
  7421  00D4FE  D002               	goto	u1380
  7422  00D500  0E01               	movlw	1
  7423  00D502  D001               	goto	u1382
  7424  00D504                     u1380:
  7425  00D504  0E00               	movlw	0
  7426  00D506                     u1382:
  7427  00D506  6E01               	movwf	??_spiTransfer& (0+255),c
  7428  00D508  B0C7               	btfsc	4039,0,c	;volatile
  7429  00D50A  D002               	goto	u1390
  7430  00D50C  0E01               	movlw	1
  7431  00D50E  D001               	goto	u1392
  7432  00D510                     u1390:
  7433  00D510  0E00               	movlw	0
  7434  00D512                     u1392:
  7435  00D512  1001               	iorwf	??_spiTransfer,w,c
  7436  00D514  E1F3               	bnz	l1926
  7437                           
  7438                           ;SPI_PIC.c: 30: return SSPBUF;
  7439  00D516  50C9               	movf	4041,w,c	;volatile
  7440  00D518  0012               	return	
  7441  00D51A                     __end_of_spiTransfer:
  7442                           	opt stack 0
  7443                           tblptru	equ	0xFF8
  7444                           tblptrh	equ	0xFF7
  7445                           tblptrl	equ	0xFF6
  7446                           tablat	equ	0xFF5
  7447                           prodl	equ	0xFF3
  7448                           indf0	equ	0xFEF
  7449                           postinc0	equ	0xFEE
  7450                           plusw0	equ	0xFEB
  7451                           fsr0h	equ	0xFEA
  7452                           fsr0l	equ	0xFE9
  7453                           wreg	equ	0xFE8
  7454                           postdec1	equ	0xFE5
  7455                           plusw1	equ	0xFE3
  7456                           fsr1l	equ	0xFE1
  7457                           plusw2	equ	0xFDB
  7458                           fsr2h	equ	0xFDA
  7459                           fsr2l	equ	0xFD9
  7460                           status	equ	0xFD8
  7461                           
  7462 ;; *************** function ___wmul *****************
  7463 ;; Defined at:
  7464 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  multiplier      2    0[COMRAM] unsigned int 
  7467 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  product         2    4[COMRAM] unsigned int 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  2    0[COMRAM] unsigned int 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0, prodl, prodh
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;Total ram usage:        6 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_main
  7489 ;;		_glcdDrawRectangle
  7490 ;;		_print_px_string
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text17
  7495  00D51A                     __ptext17:
  7496                           	opt stack 0
  7497  00D51A                     ___wmul:
  7498                           	opt stack 25
  7499                           
  7500                           ;incstack = 0
  7501  00D51A  5001               	movf	___wmul@multiplier,w,c
  7502  00D51C  0203               	mulwf	___wmul@multiplicand,c
  7503  00D51E  CFF3 F005          	movff	prodl,___wmul@product
  7504  00D522  CFF4 F006          	movff	prodh,___wmul@product+1
  7505  00D526  5001               	movf	___wmul@multiplier,w,c
  7506  00D528  0204               	mulwf	___wmul@multiplicand+1,c
  7507  00D52A  50F3               	movf	prodl,w,c
  7508  00D52C  2606               	addwf	___wmul@product+1,f,c
  7509  00D52E  5002               	movf	___wmul@multiplier+1,w,c
  7510  00D530  0203               	mulwf	___wmul@multiplicand,c
  7511  00D532  50F3               	movf	prodl,w,c
  7512  00D534  2606               	addwf	___wmul@product+1,f,c
  7513  00D536  C005  F001         	movff	___wmul@product,?___wmul
  7514  00D53A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7515  00D53E  0012               	return	
  7516  00D540                     __end_of___wmul:
  7517                           	opt stack 0
  7518                           tblptru	equ	0xFF8
  7519                           tblptrh	equ	0xFF7
  7520                           tblptrl	equ	0xFF6
  7521                           tablat	equ	0xFF5
  7522                           prodh	equ	0xFF4
  7523                           prodl	equ	0xFF3
  7524                           indf0	equ	0xFEF
  7525                           postinc0	equ	0xFEE
  7526                           plusw0	equ	0xFEB
  7527                           fsr0h	equ	0xFEA
  7528                           fsr0l	equ	0xFE9
  7529                           wreg	equ	0xFE8
  7530                           postdec1	equ	0xFE5
  7531                           plusw1	equ	0xFE3
  7532                           fsr1l	equ	0xFE1
  7533                           plusw2	equ	0xFDB
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           tblptru	equ	0xFF8
  7538                           tblptrh	equ	0xFF7
  7539                           tblptrl	equ	0xFF6
  7540                           tablat	equ	0xFF5
  7541                           prodh	equ	0xFF4
  7542                           prodl	equ	0xFF3
  7543                           indf0	equ	0xFEF
  7544                           postinc0	equ	0xFEE
  7545                           plusw0	equ	0xFEB
  7546                           fsr0h	equ	0xFEA
  7547                           fsr0l	equ	0xFE9
  7548                           wreg	equ	0xFE8
  7549                           postdec1	equ	0xFE5
  7550                           plusw1	equ	0xFE3
  7551                           fsr1l	equ	0xFE1
  7552                           plusw2	equ	0xFDB
  7553                           fsr2h	equ	0xFDA
  7554                           fsr2l	equ	0xFD9
  7555                           status	equ	0xFD8
  7556                           
  7557                           	psect	rparam
  7558  0000                     tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           indf0	equ	0xFEF
  7565                           postinc0	equ	0xFEE
  7566                           plusw0	equ	0xFEB
  7567                           fsr0h	equ	0xFEA
  7568                           fsr0l	equ	0xFE9
  7569                           wreg	equ	0xFE8
  7570                           postdec1	equ	0xFE5
  7571                           plusw1	equ	0xFE3
  7572                           fsr1l	equ	0xFE1
  7573                           plusw2	equ	0xFDB
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    549
    Data        23
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    118     119
    BANK0           128      0      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    print_px_string@s	PTR unsigned char  size(2) Largest target is 23
		 -> main@eta(COMRAM[23]), STR_1(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_print_px_string
    _print_px_string->_print_px_char
    _print_px_char->_draw_px_char
    _px_map->_new_px_char
    _draw_px_char->_glcdDrawPixel
    _glcdDrawPixel->_glcdDrawRectangle
    ___awdiv->___awmod
    _init->_initGLCD
    _initGLCD->_glcdDrawRectangle
    _glcdSetCOLMOD->_glcdTransfer
    _glcdDrawRectangle->___wmul
    _glcdDrawRectangle->_glcdTransfer
    _glcdTransfer->_spiSend
    _spiSend->_spiTransfer

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   67850
                                             71 COMRAM    47    47      0
                            ___awdiv
                            ___awmod
                             ___wmul
                  _glcdDrawRectangle
                               _init
                    _print_px_string
 ---------------------------------------------------------------------------------
 (1) _print_px_string                                     12     6      6   30797
                                             59 COMRAM    12     6      6
                             ___wmul
                      _print_px_char
 ---------------------------------------------------------------------------------
 (2) _print_px_char                                        5     0      5   29243
                                             54 COMRAM     5     0      5
                       _draw_px_char
                             _px_map
 ---------------------------------------------------------------------------------
 (3) _px_map                                              10     1      9   14705
                                             16 COMRAM    10     1      9
                        _new_px_char
 ---------------------------------------------------------------------------------
 (4) _new_px_char                                         16     8      8   14683
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) _draw_px_char                                        22    10     12   14244
                                             32 COMRAM    22    10     12
                            ___awdiv
                            ___awmod
                      _glcdDrawPixel
                             _px_map (ARG)
 ---------------------------------------------------------------------------------
 (4) _glcdDrawPixel                                        7     2      5   11739
                                             25 COMRAM     7     2      5
                            ___awdiv (ARG)
                            ___awmod (ARG)
                  _glcdDrawRectangle
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1056
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     908
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0   20493
                           _initGLCD
 ---------------------------------------------------------------------------------
 (2) _initGLCD                                             2     2      0   20493
                                             25 COMRAM     2     2      0
                  _glcdDrawRectangle
                      _glcdSetCOLMOD
                       _glcdTransfer
                            _spiInit
 ---------------------------------------------------------------------------------
 (3) _spiInit                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _glcdSetCOLMOD                                        3     3      0    4620
                                              6 COMRAM     3     3      0
                       _glcdTransfer
 ---------------------------------------------------------------------------------
 (5) _glcdDrawRectangle                                   19    12      7   11279
                                              6 COMRAM    19    12      7
                             ___wmul
                       _glcdTransfer
                            _spiSend
 ---------------------------------------------------------------------------------
 (6) _glcdTransfer                                         3     2      1    4572
                                              3 COMRAM     3     2      1
                            _spiSend
 ---------------------------------------------------------------------------------
 (6) _spiSend                                              1     1      0      44
                                              2 COMRAM     1     1      0
                        _spiTransfer
 ---------------------------------------------------------------------------------
 (7) _spiTransfer                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___wmul
   _glcdDrawRectangle
     ___wmul
     _glcdTransfer
       _spiSend
         _spiTransfer
     _spiSend
       _spiTransfer
   _init
     _initGLCD
       _glcdDrawRectangle
         ___wmul
         _glcdTransfer
           _spiSend
             _spiTransfer
         _spiSend
           _spiTransfer
       _glcdSetCOLMOD
         _glcdTransfer
           _spiSend
             _spiTransfer
       _glcdTransfer
         _spiSend
           _spiTransfer
       _spiInit
   _print_px_string
     ___wmul
     _print_px_char
       _draw_px_char
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _glcdDrawPixel
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _glcdDrawRectangle (ARG)
             ___wmul
             _glcdTransfer
               _spiSend
                 _spiTransfer
             _spiSend
               _spiTransfer
         _px_map (ARG)
           _new_px_char
       _px_map
         _new_px_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      17       5       18.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     76      77       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      34        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jan 29 23:51:20 2018

              _print_px_string$1156 0044                      ?_print_px_char 0037  
                       _SSPSTATbits 000FC7                      ??_glcdTransfer 0005  
                       __CFG_CPD$ON 000000                        ___awdiv@sign 000C  
                                _qr FDC3                 ___wmul@multiplicand 0003  
                       __CFG_BORV$3 000000                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                        __CFG_CP2$OFF 000000  
                      __CFG_CP3$OFF 000000                                 l132 D8EA  
                               l301 DA12                                 l310 DB5A  
                               l134 D964                                 l303 DA26  
                               l135 D9E6                                 l143 E258  
                               l320 D682                                 l136 D9FE  
                               l400 F068                                 l144 E326  
                               l305 DA38                                 l321 D668  
                               l401 F0A4                                 l153 E44A  
                               l145 E270                                 l306 DA44  
                               l322 D694                                 l410 F2C0  
                               l402 F0E0                                 l154 E35E  
                               l307 DB00                                 l323 D670  
                               l315 D6DA                                 l411 F2FC  
                               l403 F11C                                 l316 D6FE  
                               l420 F518                                 l412 F338  
                               l404 F158                                 l148 E2B8  
                               l309 DB70                                 l325 D67A  
                               l421 F554                                 l413 F374  
                               l405 F194                                 l190 D63E  
                               l430 F770                                 l422 F590  
                               l414 F3B0                                 l406 F1D0  
                               l350 E4B0                                 l431 F7AC  
                               l423 F5CC                                 l415 F3EC  
                               l407 F20C                                 l351 E4EC  
                               l440 F9C8                                 l432 F7E8  
                               l424 F608                                 l416 F428  
                               l408 F248                                 l360 E708  
                               l352 E528                                 l185 D644  
                               l441 FA04                                 l433 F824  
                               l425 F644                                 l417 F464  
                               l409 F284                                 l361 E744  
                               l353 E564                                 l442 FA40  
                               l434 F860                                 l426 F680  
                               l418 F4A0                                 l370 E960  
                               l362 E780                                 l354 E5A0  
                               l187 D65A                                 l347 FAF4  
                               l443 FA7C                                 l435 F89C  
                               l427 F6BC                                 l419 F4DC  
                               l371 E99C                                 l363 E7BC  
                               l355 E5DC                                 l451 D888  
                               l188 D636                                 l444 FAB8  
                               l436 F8D8                                 l428 F6F8  
                               l380 EBB8                                 l372 E9D8  
                               l364 E7F8                                 l356 E618  
                               l348 E474                                 l452 D820  
                               l189 D63A                                 l437 F914  
                               l429 F734                                 l381 EBF4  
                               l373 EA14                                 l365 E834  
                               l357 E654                                 l630 D7FE  
                               l622 D7A6                                 l438 F950  
                               l390 EE10                                 l382 EC30  
                               l374 EA50                                 l366 E870  
                               l358 E690                                 l631 D80C  
                               l623 D7B6                                 l439 F98C  
                               l391 EE4C                                 l383 EC6C  
                               l375 EA8C                                 l367 E8AC  
                               l359 E6CC                                 l392 EE88  
                               l384 ECA8                                 l376 EAC8  
                               l368 E8E8                                 l625 D7D4  
                               l393 EEC4                                 l385 ECE4  
                               l377 EB04                                 l369 E924  
                               l626 D7CC                                 l642 D770  
                               l394 EF00                                 l386 ED20  
                               l378 EB40                                 l643 D77A  
                               l635 D736                                 l395 EF3C  
                               l387 ED5C                                 l379 EB7C  
                               l644 D788                                 l636 D742  
                               l396 EF78                                 l388 ED98  
                               l629 D7F4                                 l397 EFB4  
                               l389 EDD4                                 l638 D758  
                               l398 EFF0                                 l639 D750  
                               l399 F02C                        __CFG_CPB$OFF 000000  
                               _RED FF94           __end_ofGLCD_PIC@INST_TEON FFB4  
                      ___awmod@sign 0006                                 wreg 000FE8  
                  ?_print_px_string 003C                       ?_draw_px_char 0021  
                      __CFG_LVP$OFF 000000                        __CFG_WDT$OFF 000000  
                              l2722 E260                                l1926 D4FC  
                              l2742 E326                                l2738 E318  
                              l1964 DA3C                                STR_1 FFE8  
                              _BLUE FF84                                u2001 EC26  
                              u2011 EC62                                u2101 EE7E  
                              u2021 EC9E                                u2111 EEBA  
                              u2031 ECDA                                u1400 D54E  
                              u2201 F0D6                                u2121 EEF6  
                              u2041 ED16                                u2211 F112  
                              u2131 EF32                                u2051 ED52  
                              u2301 F32E                                u2221 F14E  
                              u2141 EF6E                                u2061 ED8E  
                              _LATA 000F89                                _LATB 000F8A  
                              u1511 D622                                u2311 F36A  
                              u2231 F18A                                u2151 EFAA  
                              u2071 EDCA                                _LATC 000F8B  
                              _LATD 000F8C                                u2401 F586  
                              u2321 F3A6                                u2241 F1C6  
                              u2161 EFE6                                u2081 EE06  
                              _LATE 000F8D                                u1418 D550  
                              u1610 D75C                                u2411 F5C2  
                              u2331 F3E2                                u2251 F202  
                              u2171 F022                                u2091 EE42  
                              u1380 D504                                u2501 F7DE  
                              u2421 F5FE                                u2341 F41E  
                              u2261 F23E                                u2181 F05E  
                              u1701 E51E                                u1390 D510  
                              u1382 D506                                u1550 D7D8  
                              u2511 F81A                                u2431 F63A  
                              u2351 F45A                                u2271 F27A  
                              u2191 F09A                                u1711 E55A  
                              u1392 D512                                u1640 D8E8  
                              u2601 FA36                                u2521 F856  
                              u2441 F676                                u2361 F496  
                              u2281 F2B6                                u1801 E776  
                              u1721 E596                                u2611 FA72  
                              u2531 F892                                u2451 F6B2  
                              u2371 F4D2                                u2291 F2F2  
                              u1811 E7B2                                u1731 E5D2  
                              u2621 FAAE                                u2541 F8CE  
                              u2461 F6EE                                u2381 F50E  
                              u1901 E9CE                                u1821 E7EE  
                              u1741 E60E                                u2710 E318  
                              u2631 FAEA                                u2551 F90A  
                              u2471 F72A                                u2391 F54A  
                              u1911 EA0A                                u1831 E82A  
                              u1751 E64A                                u2720 E326  
                              u2561 F946                                u2481 F766  
                              u1921 EA46                                u1841 E866  
                              u1761 E686                                u1681 E4A6  
                              u2641 D5EA                                u2650 D87E  
                              u2571 F982                                u2491 F7A2  
                              u1931 EA82                                u1851 E8A2  
                              u1771 E6C2                                u1691 E4E2  
                              u2731 E34C                                _GREY FF9C  
                              u2660 D8B6                                u2581 F9BE  
                              u1941 EABE                                u1861 E8DE  
                              u1781 E6FE                                u2741 E46C  
                              u2591 F9FA                                u1951 EAFA  
                              u1871 E91A                                u1791 E73A  
                              u1961 EB36                                u1881 E956  
                              u2657 D874                                u1971 EB72  
                              u1891 E992                                u2667 D8AC  
                              u1981 EBAE                                u2757 E43E  
                              u2767 DB98                                u1991 EBEA  
                              u2777 DBC4                                u2787 DBF0  
                              u2797 DE82                                _main DE8C  
                              _init D594                                fsr0h 000FEA  
                              indf0 000FEF                                fsr2h 000FDA  
                              fsr0l 000FE9                                fsr1l 000FE1  
                              fsr2l 000FD9                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                     __CFG_IESO$OFF 000000                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000000                               ?_main 0001  
                             ?_init 0001                     __end_of___awdiv D816  
                             _BLACK FFA0                     __end_of___awmod D792  
                  __end_of_INST_NOP FFE4                     ___awdiv@divisor 0009  
                             _GREEN FF88                     ___awdiv@counter 000B  
                             _WHITE FF98                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _SSPIF 007CF3                       __CFG_PWRT$OFF 000000  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                       __CFG_WRT3$OFF 000000  
                    __CFG_EBTR0$OFF 000000                      __CFG_FCMEN$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                    __CFG_EBTR3$OFF 000000                       __CFG_WRTB$OFF 000000  
                    ??_draw_px_char 002D                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000       __end_ofGLCD_PIC@INST_VMOFCTR2 FFA5  
                    __CFG_EBTRB$OFF 000000                               main@i 006F  
                             main@j 006D                     __end_of_spiInit D664  
                             tablat 000FF5                     __end_of_spiSend D4DE  
                             plusw0 000FEB                               plusw1 000FE3  
                             plusw2 000FDB                               status 000FD8  
                    __CFG_PBADEN$ON 000000                        __end_of_BLUE FF88  
                      __end_of_GREY FFA0                     ??_print_px_char 003C  
                   __initialization D568                        ?_new_px_char 0001  
                      __end_of_main E46E                        __end_of_init D5C6  
      glcdSetCOLMOD@numBitsPerPixel 0007                      __CFG_OSC$HSPLL 000000  
                            ??_main 0048                              ??_init 001C  
                print_px_string@idx 0046                       __activetblptr 000002  
                     main@blocksize 0075                              _ADCON0 000FC2  
                            _ADCON1 000FC1                     glcdDrawPixel@XS 0020  
                   glcdDrawPixel@YS 001A                    ___awdiv@dividend 0007  
                 _glcdDrawRectangle DA00                   __end_of_INST_TEON FFD4  
                            _INDIGO FF80                __end_of_glcdTransfer D568  
                            _ORANGE FF90                  ?_glcdDrawRectangle 0007  
                            _VIOLET FF7C                              _YELLOW FF8C  
                            _SSPBUF 000FC9                      __CFG_XINST$OFF 000000  
         glcdDrawRectangle@numLoops 0012                 ??_glcdDrawRectangle 000E  
                            ___wmul D51A                    __end_of_initGLCD DE8C  
                         ??___awdiv 000B                      __CFG_STVREN$ON 000000  
                         ??___awmod 0005                    ___awdiv@quotient 000D  
                   ___awmod@divisor 0003            __end_ofGLCD_PIC@INST_NOP FFC4  
                            _px_map E46E                     ___awmod@counter 0005  
                      ?_spiTransfer 0001                        __mediumconst FDC2  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ??_spiInit 0001  
                         ??_spiSend 0003           __end_of_glcdDrawRectangle DB80  
                        __accesstop 0080             __end_of__initialization D58A  
                     __end_of_BLACK FFA4                       ___rparam_used 000001  
                     __end_of_GREEN FF8C                       __end_of_WHITE FF9C  
       __end_ofGLCD_PIC@INST_GAMSET FFBC         __end_ofGLCD_PIC@INST_COLMOD FFB0  
       __end_ofGLCD_PIC@INST_MADCTL FFB3         __end_ofGLCD_PIC@INST_DISPON FFBA  
       __end_ofGLCD_PIC@INST_IDMOFF FFB2                      __pcstackCOMRAM 0001  
       __end_ofGLCD_PIC@INST_INVCTR FFAC         __end_ofGLCD_PIC@INST_INVOFF FFBE  
              __end_of_draw_px_char DA00                        __pidataBANK0 D4DF  
       __end_ofGLCD_PIC@INST_PWCTR1 FFAB         __end_ofGLCD_PIC@INST_PWCTR2 FFAA  
       __end_ofGLCD_PIC@INST_PWCTR3 FFA9         __end_ofGLCD_PIC@INST_PWCTR4 FFA8  
       __end_ofGLCD_PIC@INST_PWCTR5 FFA7         __end_ofGLCD_PIC@INST_VMCTR1 FFA6  
       __end_ofGLCD_PIC@INST_SLPOUT FFC1                          __end_of_qr FF7C  
                  print_px_string@s 0040                    print_px_string@x 003C  
                  print_px_string@y 003E               __end_of_glcdDrawPixel D722  
                     draw_px_char@i 0035                       draw_px_char@m 0031  
                     draw_px_char@p 0025                       draw_px_char@x 0021  
                     draw_px_char@y 0023                      print_px_char@c 003B  
                    print_px_char@x 0037                      print_px_char@y 0039  
                     _INST_VMOFCTR2 FFC4               __end_of_glcdSetCOLMOD D6B4  
                           ?___wmul 0001                __size_of_new_px_char 0034  
                glcdDrawRectangle@i 0014                  __end_of_INST_CASET FFD9  
                __end_of_INST_IDMON FFD1                             ?_px_map 0011  
                __end_of_INST_INVON FFDD                  __end_of_INST_RASET FFD8  
                __end_of_INST_RAMWR FFD7                  __end_of_INST_TEOFF FFD5  
                __end_of_INST_NORON FFDF                  __end_of_INST_PTLAR FFD6  
                __end_of_INST_SLPIN FFE2                  __end_of_INST_PTLON FFE0  
             __size_of_glcdTransfer 0028          __size_of_glcdDrawRectangle 0180  
         spiTransfer@byteToTransfer 0002                             _SSPCON1 000FC6  
                           _SSPSTAT 000FC7                           ?_initGLCD 0001  
          __size_of_print_px_string 00A8                  glcdDrawPixel@color 001B  
                           __Hparam 0000                      _GLCD_SIZE_HORZ FFE5  
                           __Lparam 0000                      _GLCD_SIZE_VERT FFE4  
              __end_of_INST_DISPOFF FFDB                __end_of_INST_FRMCTR1 FFCF  
              __end_of_INST_FRMCTR2 FFCE                __end_of_INST_FRMCTR3 FFCD  
                           ___awdiv D792                             ___awmod D722  
                   __size_of___wmul 0026                             __pcinit D568  
                      _glcdTransfer D540                             __ramtop 1000  
                           __ptext0 DE8C                             __ptext1 D816  
                           __ptext2 D5C6                             __ptext3 E46E  
                           __ptext4 D5F8                             __ptext5 D8BE  
                           __ptext6 D6B4                             __ptext7 D722  
                           __ptext8 D792                             __ptext9 D594  
                   __size_of_px_map 1954                __end_of_INST_SWRESET FFE3  
                  ___awmod@dividend 0001                             _spiInit D62C  
                           _spiSend D4D4                __size_of_spiTransfer 0024  
                           main@eta 004A                             main@sec 006B  
              end_of_initialization D58A               GLCD_PIC@INST_VMOFCTR2 FFA4  
                        ??_initGLCD 001A                       __Lmediumconst FDC2  
            __end_of_GLCD_SIZE_HORZ FFE6                           _INST_TEON FFD3  
            __end_of_GLCD_SIZE_VERT FFE5               __size_of_draw_px_char 0142  
                           px_map@c 001A               __end_of_print_px_char D5F8  
                           postdec1 000FE5                             postinc0 000FEE  
                  glcdTransfer@byte 0006                      spiInit@divider 0001  
                         _TRISCbits 000F94                           _TRISDbits 000F95  
                      _draw_px_char D8BE                      __end_of_INDIGO FF84  
                    __end_of_ORANGE FF94                      __end_of_VIOLET FF80  
                    __end_of_YELLOW FF90                          main@startx 0071  
                        main@starty 0073        __end_ofGLCD_PIC@INST_DISPOFF FFBB  
      __end_ofGLCD_PIC@INST_FRMCTR1 FFAF        __end_ofGLCD_PIC@INST_FRMCTR2 FFAE  
      __end_ofGLCD_PIC@INST_FRMCTR3 FFAD                   ??_print_px_string 0042  
                    __end_of___wmul D540        __end_ofGLCD_PIC@INST_SWRESET FFC3  
                    __end_of_px_map FDC2                 start_initialization D568  
                       __end_of_RED FF98              glcdDrawRectangle@color 000A  
                          ??___wmul 0005                         __pdataBANK0 0080  
                  __CFG_LPT1OSC$OFF 000000                            ??_px_map 001A  
                      new_px_char@a 0001                        new_px_char@b 0005  
                      new_px_char@p 0009  __end_of_GLCD_ADDRESSABLE_SIZE_HORZ FFE8  
        _GLCD_ADDRESSABLE_SIZE_HORZ FFE7  __end_of_GLCD_ADDRESSABLE_SIZE_VERT FFE7  
        _GLCD_ADDRESSABLE_SIZE_VERT FFE6                         __pbssCOMRAM 0077  
        __end_ofGLCD_PIC@INST_CASET FFB9          __end_ofGLCD_PIC@INST_IDMON FFB1  
        __end_ofGLCD_PIC@INST_INVON FFBD          __end_ofGLCD_PIC@INST_RASET FFB8  
        __end_ofGLCD_PIC@INST_RAMWR FFB7                        _INST_DISPOFF FFDA  
        __end_ofGLCD_PIC@INST_TEOFF FFB5          __end_ofGLCD_PIC@INST_NORON FFBF  
        __end_ofGLCD_PIC@INST_PTLAR FFB6          __end_ofGLCD_PIC@INST_SLPIN FFC2  
        __end_ofGLCD_PIC@INST_PTLON FFC0                        _INST_FRMCTR1 FFCE  
                      _INST_FRMCTR2 FFCD                        _INST_FRMCTR3 FFCC  
                 __size_of_initGLCD 030C                        _INST_SWRESET FFE2  
            __size_of_glcdDrawPixel 006E                           _main$1155 0065  
                 __CFG_CCP2MX$PORTC 000000                       ??_new_px_char 0009  
                     __pmediumconst FDC2                            ?___awdiv 0007  
                          ?___awmod 0001              __size_of_glcdSetCOLMOD 0050  
               glcdDrawRectangle@XE 0007                 glcdDrawRectangle@YE 0009  
               glcdDrawRectangle@XS 0019                 glcdDrawRectangle@YS 0008  
               __end_of_INST_GAMSET FFDC                            ?_spiInit 0001  
               __end_of_INST_COLMOD FFD0                            ?_spiSend 0001  
               __end_of_INST_MADCTL FFD3                 __end_of_INST_DISPON FFDA  
               __end_of_INST_IDMOFF FFD2                GLCD_PIC@INST_DISPOFF FFBA  
               __end_of_INST_INVCTR FFCC                 __end_of_INST_INVOFF FFDE  
              GLCD_PIC@INST_FRMCTR1 FFAE                GLCD_PIC@INST_FRMCTR2 FFAD  
              GLCD_PIC@INST_FRMCTR3 FFAC                 __end_of_INST_PWCTR1 FFCB  
               __end_of_INST_PWCTR2 FFCA                 __end_of_INST_PWCTR3 FFC9  
               __end_of_INST_PWCTR4 FFC8                 __end_of_INST_PWCTR5 FFC7  
               __end_of_INST_VMCTR1 FFC6                 __end_of_INST_SLPOUT FFE1  
                    ___wmul@product 0005                            _LATDbits 000F8C  
              GLCD_PIC@INST_SWRESET FFC2                            _INST_NOP FFE3  
                        spiSend@val 0003                    __CFG_WDTPS$32768 000000  
                         main@F3036 0080                     glcdTransfer@cmd 0004  
               __end_of_new_px_char D62C                   ___wmul@multiplier 0001  
                     ??_spiTransfer 0001                glcdSetCOLMOD@rawData 0008  
                     _glcdDrawPixel D6B4                           copy_data0 D57C  
                     _glcdSetCOLMOD D664                     _print_px_string D816  
                          __Hrparam 0000                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000                    __size_of___awdiv 0084  
                  __size_of___awmod 0070                         _INST_GAMSET FFDB  
                       _INST_COLMOD FFCF                         _INST_MADCTL FFD2  
                       _INST_DISPON FFD9                         _INST_IDMOFF FFD1  
                       _INST_INVCTR FFCB                         _INST_INVOFF FFDD  
                    ?_glcdDrawPixel 001A                         _INST_PWCTR1 FFCA  
                       _INST_PWCTR2 FFC9                         _INST_PWCTR3 FFC8  
                       _INST_PWCTR4 FFC7                         _INST_PWCTR5 FFC6  
                       _INST_VMCTR1 FFC5                         _INST_SLPOUT FFE0  
                          _main$137 0067                            __ptext10 DB80  
                          __ptext11 D62C                            __ptext12 D664  
                          __ptext13 DA00                            __ptext14 D540  
                          __ptext15 D4D4                            __ptext16 D4F6  
                          __ptext17 D51A                    __size_of_spiInit 0038  
                  __size_of_spiSend 000A               __end_of_INST_VMOFCTR2 FFC5  
                        _MADCTLbits 0077              __size_of_print_px_char 0032  
               __end_of_spiTransfer D51A                      ?_glcdSetCOLMOD 0001  
                          _initGLCD DB80                 GLCD_PIC@INST_GAMSET FFBB  
               GLCD_PIC@INST_COLMOD FFAF                 GLCD_PIC@INST_MADCTL FFB2  
               GLCD_PIC@INST_DISPON FFB9                 GLCD_PIC@INST_IDMOFF FFB1  
                     __size_of_main 05E2                       __size_of_init 0032  
               GLCD_PIC@INST_INVCTR FFAB                 GLCD_PIC@INST_INVOFF FFBD  
               GLCD_PIC@INST_PWCTR1 FFAA                 GLCD_PIC@INST_PWCTR2 FFA9  
               GLCD_PIC@INST_PWCTR3 FFA8                 GLCD_PIC@INST_PWCTR4 FFA7  
               GLCD_PIC@INST_PWCTR5 FFA6                 GLCD_PIC@INST_VMCTR1 FFA5  
               GLCD_PIC@INST_SLPOUT FFC0                         _new_px_char D5F8  
                          main@endx 0061                            main@endy 0063  
           __end_of_print_px_string D8BE                          _INST_CASET FFD8  
                        _INST_IDMON FFD0                          _INST_INVON FFDC  
                        _INST_RASET FFD7                          _INST_RAMWR FFD6  
                        _INST_TEOFF FFD4                          _INST_NORON FFDE  
                        _INST_PTLAR FFD5                          _INST_SLPIN FFE1  
                        _INST_PTLON FFDF                  GLCD_PIC@INST_CASET FFB8  
                GLCD_PIC@INST_IDMON FFB0                  GLCD_PIC@INST_INVON FFBC  
                GLCD_PIC@INST_RASET FFB7                  GLCD_PIC@INST_RAMWR FFB6  
                GLCD_PIC@INST_TEOFF FFB4                  GLCD_PIC@INST_NORON FFBE  
                GLCD_PIC@INST_PTLAR FFB5                  GLCD_PIC@INST_SLPIN FFC1  
                GLCD_PIC@INST_PTLON FFBF          glcdDrawRectangle@colorData 0016  
                     _print_px_char D5C6                       ?_glcdTransfer 0004  
                   ??_glcdDrawPixel 001F                         _spiTransfer D4F6  
                 GLCD_PIC@INST_TEON FFB3                         _SSPCON1bits 000FC6  
                   ??_glcdSetCOLMOD 0007                    GLCD_PIC@INST_NOP FFC3  
